{
  "{\"sourceRoot\":\"/home/kodek-sleuth/Desktop/Quick-credit/App\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/kodek-sleuth/Desktop/Quick-credit\",\"filename\":\"/home/kodek-sleuth/Desktop/Quick-credit/App/server.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/kodek-sleuth/Desktop/Quick-credit\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/kodek-sleuth/Desktop/Quick-credit/App",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/kodek-sleuth/Desktop/Quick-credit",
      "filename": "/home/kodek-sleuth/Desktop/Quick-credit/App/server.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/kodek-sleuth/Desktop/Quick-credit",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/kodek-sleuth/Desktop/Quick-credit/App/server.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/home/kodek-sleuth/Desktop/Quick-credit/App/server.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/kodek-sleuth/Desktop/Quick-credit/App",
        "sourceFileName": "server.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar http = require('http');\n\nvar app = require('./mainApp');\n\nvar port = process.env.PORT || 3000;\nvar server = http.createServer(app);\nserver.listen(port);\nmodule.exports = server;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNlcnZlci5qcyJdLCJuYW1lcyI6WyJodHRwIiwicmVxdWlyZSIsImFwcCIsInBvcnQiLCJwcm9jZXNzIiwiZW52IiwiUE9SVCIsInNlcnZlciIsImNyZWF0ZVNlcnZlciIsImxpc3RlbiIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiI7O0FBQUEsSUFBTUEsSUFBSSxHQUFHQyxPQUFPLENBQUMsTUFBRCxDQUFwQjs7QUFFQSxJQUFNQyxHQUFHLEdBQUdELE9BQU8sQ0FBQyxXQUFELENBQW5COztBQUVBLElBQU1FLElBQUksR0FBR0MsT0FBTyxDQUFDQyxHQUFSLENBQVlDLElBQVosSUFBb0IsSUFBakM7QUFFQSxJQUFNQyxNQUFNLEdBQUdQLElBQUksQ0FBQ1EsWUFBTCxDQUFrQk4sR0FBbEIsQ0FBZjtBQUVBSyxNQUFNLENBQUNFLE1BQVAsQ0FBY04sSUFBZDtBQUVBTyxNQUFNLENBQUNDLE9BQVAsR0FBaUJKLE1BQWpCIiwic291cmNlUm9vdCI6Ii9ob21lL2tvZGVrLXNsZXV0aC9EZXNrdG9wL1F1aWNrLWNyZWRpdC9BcHAiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBodHRwID0gcmVxdWlyZSgnaHR0cCcpO1xuXG5jb25zdCBhcHAgPSByZXF1aXJlKCcuL21haW5BcHAnKTtcblxuY29uc3QgcG9ydCA9IHByb2Nlc3MuZW52LlBPUlQgfHwgMzAwMDtcblxuY29uc3Qgc2VydmVyID0gaHR0cC5jcmVhdGVTZXJ2ZXIoYXBwKTtcblxuc2VydmVyLmxpc3Rlbihwb3J0KTtcblxubW9kdWxlLmV4cG9ydHMgPSBzZXJ2ZXI7XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "server.js"
      ],
      "names": [
        "http",
        "require",
        "app",
        "port",
        "process",
        "env",
        "PORT",
        "server",
        "createServer",
        "listen",
        "module",
        "exports"
      ],
      "mappings": ";;AAAA,IAAMA,IAAI,GAAGC,OAAO,CAAC,MAAD,CAApB;;AAEA,IAAMC,GAAG,GAAGD,OAAO,CAAC,WAAD,CAAnB;;AAEA,IAAME,IAAI,GAAGC,OAAO,CAACC,GAAR,CAAYC,IAAZ,IAAoB,IAAjC;AAEA,IAAMC,MAAM,GAAGP,IAAI,CAACQ,YAAL,CAAkBN,GAAlB,CAAf;AAEAK,MAAM,CAACE,MAAP,CAAcN,IAAd;AAEAO,MAAM,CAACC,OAAP,GAAiBJ,MAAjB",
      "sourceRoot": "/home/kodek-sleuth/Desktop/Quick-credit/App",
      "sourcesContent": [
        "const http = require('http');\n\nconst app = require('./mainApp');\n\nconst port = process.env.PORT || 3000;\n\nconst server = http.createServer(app);\n\nserver.listen(port);\n\nmodule.exports = server;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1557148259699
  },
  "{\"sourceRoot\":\"/home/kodek-sleuth/Desktop/Quick-credit/App\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/kodek-sleuth/Desktop/Quick-credit\",\"filename\":\"/home/kodek-sleuth/Desktop/Quick-credit/App/mainApp.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/kodek-sleuth/Desktop/Quick-credit\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/kodek-sleuth/Desktop/Quick-credit/App",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/kodek-sleuth/Desktop/Quick-credit",
      "filename": "/home/kodek-sleuth/Desktop/Quick-credit/App/mainApp.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/kodek-sleuth/Desktop/Quick-credit",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/kodek-sleuth/Desktop/Quick-credit/App/mainApp.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/home/kodek-sleuth/Desktop/Quick-credit/App/mainApp.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/kodek-sleuth/Desktop/Quick-credit/App",
        "sourceFileName": "mainApp.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\n/* eslint-disable no-unused-vars */\n\n/* eslint-disable no-trailing-spaces */\n\n/* eslint-disable indent */\n\n/* eslint-disable max-len */\nvar express = require('express');\n\nvar app = express();\n\nvar bodyParser = require('body-parser');\n\nvar morgan = require('morgan');\n\nvar cors = require('cors');\n\napp.use(cors()); // Library that generates the UI/UX of swagger\n\nvar swaggerUI = require('swagger-ui-express');\n\nvar authSignup = require('../Api/Auth/authSignUp');\n\nvar authLogin = require('../Api/Auth/authLogin');\n\nvar verifyUser = require('../Api/Verifications/verifyUser');\n\nvar rejectUser = require('../Api/Verifications/rejectUser');\n\nvar reqLoan = require('../Api/Loans/applyLoan');\n\nvar repayLoan = require('../Api/Loans/repayLoan');\n\nvar approveLoan = require('../Api/Loans/approveLoan');\n\nvar posTransLoan = require('../Api/Loans/postTransaction');\n\nvar rejectLoan = require('../Api/Loans/rejectLoan');\n\nvar userLoans = require('../Api/Loans/userLoans');\n\nvar adminLoans = require('../Api/Loans/adminLoans');\n\nvar userProfile = require('../Api/Profiles/userProfile');\n\nvar adminProfile = require('../Api/Profiles/adminProfile');\n\nvar swagger = require('../Api/Settings/swagger'); // Enable API to receive urlencoded data as well as json\n\n\napp.use(bodyParser.urlencoded({\n  extended: true\n}));\napp.use(bodyParser.json());\napp.use(morgan('dev')); // To tell express that uploads is a static folder \n\napp.use(express[\"static\"]('uploads'));\napp.get('/swagger.json', function (req, res, next) {\n  res.setHeader('Content-Type', 'application/json');\n  res.send(swagger.swaggerSpec);\n});\napp.use('/docs', swaggerUI.serve, swaggerUI.setup(swagger.swaggerSpec));\napp.get('/home', function (req, res, next) {\n  res.status(200).json({\n    Message: 'Hello'\n  });\n}); // Defining our routes.\n\napp.use('/api/v1/auth', authSignup);\napp.use('/api/v1/auth', authLogin);\napp.use('/api/v1/admin', verifyUser);\napp.use('/api/v1/admin', rejectUser);\napp.use('/api/v1/user', reqLoan);\napp.use('/api/v1/user', repayLoan);\napp.use('/api/v1/admin', approveLoan);\napp.use('/api/v1/admin', posTransLoan);\napp.use('/api/v1/admin', rejectLoan);\napp.use('/api/v1/user', userLoans);\napp.use('/api/v1/admin', adminLoans);\napp.use('/api/v1/user', userProfile);\napp.use('/api/v1/admin', adminProfile); // Error Handling Where we create a new error object that gets sent on after error display Message Status\n\napp.use(function (req, res, next) {\n  var error = new Error('Not Found');\n  error.status = 404; // Sending The error object to be sent and displayed back to User/Console \n\n  next(error);\n}); // eslint-disable-next-line no-unused-vars\n\napp.use(function (error, req, res, next) {\n  // Displaying The Error Message To User/Console\n  res.status(error.status || 500);\n  res.json({\n    // eslint-disable-next-line comma-dangle\n    Error: error.message\n  });\n});\nmodule.exports = app;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "mainApp.js"
      ],
      "names": [
        "express",
        "require",
        "app",
        "bodyParser",
        "morgan",
        "cors",
        "use",
        "swaggerUI",
        "authSignup",
        "authLogin",
        "verifyUser",
        "rejectUser",
        "reqLoan",
        "repayLoan",
        "approveLoan",
        "posTransLoan",
        "rejectLoan",
        "userLoans",
        "adminLoans",
        "userProfile",
        "adminProfile",
        "swagger",
        "urlencoded",
        "extended",
        "json",
        "get",
        "req",
        "res",
        "next",
        "setHeader",
        "send",
        "swaggerSpec",
        "serve",
        "setup",
        "status",
        "Message",
        "error",
        "Error",
        "message",
        "module",
        "exports"
      ],
      "mappings": ";;AAAA;;AACA;;AACA;;AACA;AAEA,IAAMA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;AAEA,IAAMC,GAAG,GAAGF,OAAO,EAAnB;;AAEA,IAAMG,UAAU,GAAGF,OAAO,CAAC,aAAD,CAA1B;;AAEA,IAAMG,MAAM,GAAGH,OAAO,CAAC,QAAD,CAAtB;;AAEA,IAAMI,IAAI,GAAGJ,OAAO,CAAC,MAAD,CAApB;;AAEAC,GAAG,CAACI,GAAJ,CAAQD,IAAI,EAAZ,E,CAEA;;AACA,IAAME,SAAS,GAAGN,OAAO,CAAC,oBAAD,CAAzB;;AAEA,IAAMO,UAAU,GAAGP,OAAO,CAAC,wBAAD,CAA1B;;AACA,IAAMQ,SAAS,GAAGR,OAAO,CAAC,uBAAD,CAAzB;;AACA,IAAMS,UAAU,GAAGT,OAAO,CAAC,iCAAD,CAA1B;;AACA,IAAMU,UAAU,GAAGV,OAAO,CAAC,iCAAD,CAA1B;;AACA,IAAMW,OAAO,GAAGX,OAAO,CAAC,wBAAD,CAAvB;;AACA,IAAMY,SAAS,GAAGZ,OAAO,CAAC,wBAAD,CAAzB;;AACA,IAAMa,WAAW,GAAGb,OAAO,CAAC,0BAAD,CAA3B;;AACA,IAAMc,YAAY,GAAGd,OAAO,CAAC,8BAAD,CAA5B;;AACA,IAAMe,UAAU,GAAGf,OAAO,CAAC,yBAAD,CAA1B;;AACA,IAAMgB,SAAS,GAAGhB,OAAO,CAAC,wBAAD,CAAzB;;AACA,IAAMiB,UAAU,GAAGjB,OAAO,CAAC,yBAAD,CAA1B;;AACA,IAAMkB,WAAW,GAAGlB,OAAO,CAAC,6BAAD,CAA3B;;AACA,IAAMmB,YAAY,GAAGnB,OAAO,CAAC,8BAAD,CAA5B;;AACA,IAAMoB,OAAO,GAAGpB,OAAO,CAAC,yBAAD,CAAvB,C,CAEA;;;AACAC,GAAG,CAACI,GAAJ,CAAQH,UAAU,CAACmB,UAAX,CAAsB;AAAEC,EAAAA,QAAQ,EAAE;AAAZ,CAAtB,CAAR;AACArB,GAAG,CAACI,GAAJ,CAAQH,UAAU,CAACqB,IAAX,EAAR;AACAtB,GAAG,CAACI,GAAJ,CAAQF,MAAM,CAAC,KAAD,CAAd,E,CAEA;;AACAF,GAAG,CAACI,GAAJ,CAAQN,OAAO,UAAP,CAAe,SAAf,CAAR;AAEAE,GAAG,CAACuB,GAAJ,CAAQ,eAAR,EAAyB,UAACC,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AACzCD,EAAAA,GAAG,CAACE,SAAJ,CAAc,cAAd,EAA8B,kBAA9B;AACAF,EAAAA,GAAG,CAACG,IAAJ,CAAST,OAAO,CAACU,WAAjB;AACH,CAHD;AAKA7B,GAAG,CAACI,GAAJ,CAAQ,OAAR,EAAiBC,SAAS,CAACyB,KAA3B,EAAkCzB,SAAS,CAAC0B,KAAV,CAAgBZ,OAAO,CAACU,WAAxB,CAAlC;AAEA7B,GAAG,CAACuB,GAAJ,CAAQ,OAAR,EAAiB,UAACC,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AACjCD,EAAAA,GAAG,CAACO,MAAJ,CAAW,GAAX,EAAgBV,IAAhB,CAAqB;AACjBW,IAAAA,OAAO,EAAE;AADQ,GAArB;AAGH,CAJD,E,CAMA;;AACAjC,GAAG,CAACI,GAAJ,CAAQ,cAAR,EAAwBE,UAAxB;AACAN,GAAG,CAACI,GAAJ,CAAQ,cAAR,EAAwBG,SAAxB;AACAP,GAAG,CAACI,GAAJ,CAAQ,eAAR,EAAyBI,UAAzB;AACAR,GAAG,CAACI,GAAJ,CAAQ,eAAR,EAAyBK,UAAzB;AACAT,GAAG,CAACI,GAAJ,CAAQ,cAAR,EAAwBM,OAAxB;AACAV,GAAG,CAACI,GAAJ,CAAQ,cAAR,EAAwBO,SAAxB;AACAX,GAAG,CAACI,GAAJ,CAAQ,eAAR,EAAyBQ,WAAzB;AACAZ,GAAG,CAACI,GAAJ,CAAQ,eAAR,EAAyBS,YAAzB;AACAb,GAAG,CAACI,GAAJ,CAAQ,eAAR,EAAyBU,UAAzB;AACAd,GAAG,CAACI,GAAJ,CAAQ,cAAR,EAAwBW,SAAxB;AACAf,GAAG,CAACI,GAAJ,CAAQ,eAAR,EAAyBY,UAAzB;AACAhB,GAAG,CAACI,GAAJ,CAAQ,cAAR,EAAwBa,WAAxB;AACAjB,GAAG,CAACI,GAAJ,CAAQ,eAAR,EAAyBc,YAAzB,E,CAEA;;AACAlB,GAAG,CAACI,GAAJ,CAAQ,UAACoB,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AACxB,MAAMQ,KAAK,GAAG,IAAIC,KAAJ,CAAU,WAAV,CAAd;AACAD,EAAAA,KAAK,CAACF,MAAN,GAAe,GAAf,CAFwB,CAIxB;;AACAN,EAAAA,IAAI,CAACQ,KAAD,CAAJ;AACH,CAND,E,CAQA;;AACAlC,GAAG,CAACI,GAAJ,CAAQ,UAAC8B,KAAD,EAAQV,GAAR,EAAaC,GAAb,EAAkBC,IAAlB,EAA2B;AAC/B;AACAD,EAAAA,GAAG,CAACO,MAAJ,CAAWE,KAAK,CAACF,MAAN,IAAgB,GAA3B;AACAP,EAAAA,GAAG,CAACH,IAAJ,CAAS;AACL;AACAa,IAAAA,KAAK,EAAED,KAAK,CAACE;AAFR,GAAT;AAIH,CAPD;AASAC,MAAM,CAACC,OAAP,GAAiBtC,GAAjB",
      "sourceRoot": "/home/kodek-sleuth/Desktop/Quick-credit/App",
      "sourcesContent": [
        "/* eslint-disable no-unused-vars */\n/* eslint-disable no-trailing-spaces */\n/* eslint-disable indent */\n/* eslint-disable max-len */\n\nconst express = require('express');\n\nconst app = express();\n\nconst bodyParser = require('body-parser');\n\nconst morgan = require('morgan');\n\nconst cors = require('cors');\n\napp.use(cors());\n\n// Library that generates the UI/UX of swagger\nconst swaggerUI = require('swagger-ui-express');\n\nconst authSignup = require('../Api/Auth/authSignUp');\nconst authLogin = require('../Api/Auth/authLogin');\nconst verifyUser = require('../Api/Verifications/verifyUser');\nconst rejectUser = require('../Api/Verifications/rejectUser');\nconst reqLoan = require('../Api/Loans/applyLoan');\nconst repayLoan = require('../Api/Loans/repayLoan');\nconst approveLoan = require('../Api/Loans/approveLoan');\nconst posTransLoan = require('../Api/Loans/postTransaction');\nconst rejectLoan = require('../Api/Loans/rejectLoan');\nconst userLoans = require('../Api/Loans/userLoans');\nconst adminLoans = require('../Api/Loans/adminLoans');\nconst userProfile = require('../Api/Profiles/userProfile');\nconst adminProfile = require('../Api/Profiles/adminProfile');\nconst swagger = require('../Api/Settings/swagger');\n\n// Enable API to receive urlencoded data as well as json\napp.use(bodyParser.urlencoded({ extended: true }));\napp.use(bodyParser.json());\napp.use(morgan('dev'));\n\n// To tell express that uploads is a static folder \napp.use(express.static('uploads'));\n\napp.get('/swagger.json', (req, res, next) => {\n    res.setHeader('Content-Type', 'application/json');\n    res.send(swagger.swaggerSpec);\n});\n\napp.use('/docs', swaggerUI.serve, swaggerUI.setup(swagger.swaggerSpec));\n\napp.get('/home', (req, res, next) => {\n    res.status(200).json({\n        Message: 'Hello',\n    });\n});\n\n// Defining our routes.\napp.use('/api/v1/auth', authSignup);\napp.use('/api/v1/auth', authLogin);\napp.use('/api/v1/admin', verifyUser);\napp.use('/api/v1/admin', rejectUser);\napp.use('/api/v1/user', reqLoan);\napp.use('/api/v1/user', repayLoan);\napp.use('/api/v1/admin', approveLoan);\napp.use('/api/v1/admin', posTransLoan);\napp.use('/api/v1/admin', rejectLoan);\napp.use('/api/v1/user', userLoans);\napp.use('/api/v1/admin', adminLoans);\napp.use('/api/v1/user', userProfile);\napp.use('/api/v1/admin', adminProfile);\n\n// Error Handling Where we create a new error object that gets sent on after error display Message Status\napp.use((req, res, next) => {\n    const error = new Error('Not Found');\n    error.status = 404;\n\n    // Sending The error object to be sent and displayed back to User/Console \n    next(error);\n});\n\n// eslint-disable-next-line no-unused-vars\napp.use((error, req, res, next) => {\n    // Displaying The Error Message To User/Console\n    res.status(error.status || 500);\n    res.json({\n        // eslint-disable-next-line comma-dangle\n        Error: error.message\n    });\n});\n\nmodule.exports = app;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1557385196462
  },
  "{\"sourceRoot\":\"/home/kodek-sleuth/Desktop/Quick-credit/Api/Auth\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/kodek-sleuth/Desktop/Quick-credit\",\"filename\":\"/home/kodek-sleuth/Desktop/Quick-credit/Api/Auth/authSignUp.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/kodek-sleuth/Desktop/Quick-credit\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/kodek-sleuth/Desktop/Quick-credit/Api/Auth",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/kodek-sleuth/Desktop/Quick-credit",
      "filename": "/home/kodek-sleuth/Desktop/Quick-credit/Api/Auth/authSignUp.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/kodek-sleuth/Desktop/Quick-credit",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/kodek-sleuth/Desktop/Quick-credit/Api/Auth/authSignUp.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/home/kodek-sleuth/Desktop/Quick-credit/Api/Auth/authSignUp.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/kodek-sleuth/Desktop/Quick-credit/Api/Auth",
        "sourceFileName": "authSignUp.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar express = require('express');\n\nvar authSignup = express.Router();\n\nvar userController = require('../Controllers/authControllerSignUp');\n\nvar image = require('../Settings/image');\n/**\n* @swagger\n* /api/v1/auth/signup:\n*   post:\n*     tags:\n*       - Auth\n*     name: Signup\n*     summary: Signs up a User/Admin\n*     consumes:\n*       - multipart/form-data\n*     parameters:\n*       - name: Fullname\n*         in: formData\n*         type: string\n*         required: true\n*         description: Yahya Jalal.\n*       - name: Email\n*         in: formData\n*         type: string\n*         required: true\n*         description: yahya@gmail.com.\n*       - name: Password\n*         in: formData\n*         type: string\n*         required: true\n*         description: stealth.\n*       - name: isAdmin\n*         in: formData\n*         type: string\n*         required: true\n*         description: True or False.\n*       - name: Address\n*         in: formData\n*         type: string\n*         description: Kitende, Entebbe.\n*       - name: Image\n*         in: formData\n*         type: file\n*         required: true\n*         description: Upload an Image File.\n*     responses:\n*       201:\n*         description: User Has Successfully Signed Up\n*       401:\n*         description: Invalid Email or Password\n*/\n\n\nauthSignup.post('/signup', image.upload.single('Image'), userController.createUser);\nmodule.exports = authSignup;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImF1dGhTaWduVXAuanMiXSwibmFtZXMiOlsiZXhwcmVzcyIsInJlcXVpcmUiLCJhdXRoU2lnbnVwIiwiUm91dGVyIiwidXNlckNvbnRyb2xsZXIiLCJpbWFnZSIsInBvc3QiLCJ1cGxvYWQiLCJzaW5nbGUiLCJjcmVhdGVVc2VyIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6Ijs7QUFBQSxJQUFNQSxPQUFPLEdBQUdDLE9BQU8sQ0FBQyxTQUFELENBQXZCOztBQUVBLElBQU1DLFVBQVUsR0FBR0YsT0FBTyxDQUFDRyxNQUFSLEVBQW5COztBQUVBLElBQU1DLGNBQWMsR0FBR0gsT0FBTyxDQUFDLHFDQUFELENBQTlCOztBQUVBLElBQU1JLEtBQUssR0FBR0osT0FBTyxDQUFDLG1CQUFELENBQXJCO0FBRUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQWdEQUMsVUFBVSxDQUFDSSxJQUFYLENBQWdCLFNBQWhCLEVBQTJCRCxLQUFLLENBQUNFLE1BQU4sQ0FBYUMsTUFBYixDQUFvQixPQUFwQixDQUEzQixFQUF5REosY0FBYyxDQUFDSyxVQUF4RTtBQUVBQyxNQUFNLENBQUNDLE9BQVAsR0FBaUJULFVBQWpCIiwic291cmNlUm9vdCI6Ii9ob21lL2tvZGVrLXNsZXV0aC9EZXNrdG9wL1F1aWNrLWNyZWRpdC9BcGkvQXV0aCIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IGV4cHJlc3MgPSByZXF1aXJlKCdleHByZXNzJyk7XG5cbmNvbnN0IGF1dGhTaWdudXAgPSBleHByZXNzLlJvdXRlcigpO1xuXG5jb25zdCB1c2VyQ29udHJvbGxlciA9IHJlcXVpcmUoJy4uL0NvbnRyb2xsZXJzL2F1dGhDb250cm9sbGVyU2lnblVwJyk7XG5cbmNvbnN0IGltYWdlID0gcmVxdWlyZSgnLi4vU2V0dGluZ3MvaW1hZ2UnKTtcblxuLyoqXG4qIEBzd2FnZ2VyXG4qIC9hcGkvdjEvYXV0aC9zaWdudXA6XG4qICAgcG9zdDpcbiogICAgIHRhZ3M6XG4qICAgICAgIC0gQXV0aFxuKiAgICAgbmFtZTogU2lnbnVwXG4qICAgICBzdW1tYXJ5OiBTaWducyB1cCBhIFVzZXIvQWRtaW5cbiogICAgIGNvbnN1bWVzOlxuKiAgICAgICAtIG11bHRpcGFydC9mb3JtLWRhdGFcbiogICAgIHBhcmFtZXRlcnM6XG4qICAgICAgIC0gbmFtZTogRnVsbG5hbWVcbiogICAgICAgICBpbjogZm9ybURhdGFcbiogICAgICAgICB0eXBlOiBzdHJpbmdcbiogICAgICAgICByZXF1aXJlZDogdHJ1ZVxuKiAgICAgICAgIGRlc2NyaXB0aW9uOiBZYWh5YSBKYWxhbC5cbiogICAgICAgLSBuYW1lOiBFbWFpbFxuKiAgICAgICAgIGluOiBmb3JtRGF0YVxuKiAgICAgICAgIHR5cGU6IHN0cmluZ1xuKiAgICAgICAgIHJlcXVpcmVkOiB0cnVlXG4qICAgICAgICAgZGVzY3JpcHRpb246IHlhaHlhQGdtYWlsLmNvbS5cbiogICAgICAgLSBuYW1lOiBQYXNzd29yZFxuKiAgICAgICAgIGluOiBmb3JtRGF0YVxuKiAgICAgICAgIHR5cGU6IHN0cmluZ1xuKiAgICAgICAgIHJlcXVpcmVkOiB0cnVlXG4qICAgICAgICAgZGVzY3JpcHRpb246IHN0ZWFsdGguXG4qICAgICAgIC0gbmFtZTogaXNBZG1pblxuKiAgICAgICAgIGluOiBmb3JtRGF0YVxuKiAgICAgICAgIHR5cGU6IHN0cmluZ1xuKiAgICAgICAgIHJlcXVpcmVkOiB0cnVlXG4qICAgICAgICAgZGVzY3JpcHRpb246IFRydWUgb3IgRmFsc2UuXG4qICAgICAgIC0gbmFtZTogQWRkcmVzc1xuKiAgICAgICAgIGluOiBmb3JtRGF0YVxuKiAgICAgICAgIHR5cGU6IHN0cmluZ1xuKiAgICAgICAgIGRlc2NyaXB0aW9uOiBLaXRlbmRlLCBFbnRlYmJlLlxuKiAgICAgICAtIG5hbWU6IEltYWdlXG4qICAgICAgICAgaW46IGZvcm1EYXRhXG4qICAgICAgICAgdHlwZTogZmlsZVxuKiAgICAgICAgIHJlcXVpcmVkOiB0cnVlXG4qICAgICAgICAgZGVzY3JpcHRpb246IFVwbG9hZCBhbiBJbWFnZSBGaWxlLlxuKiAgICAgcmVzcG9uc2VzOlxuKiAgICAgICAyMDE6XG4qICAgICAgICAgZGVzY3JpcHRpb246IFVzZXIgSGFzIFN1Y2Nlc3NmdWxseSBTaWduZWQgVXBcbiogICAgICAgNDAxOlxuKiAgICAgICAgIGRlc2NyaXB0aW9uOiBJbnZhbGlkIEVtYWlsIG9yIFBhc3N3b3JkXG4qL1xuXG5cbmF1dGhTaWdudXAucG9zdCgnL3NpZ251cCcsIGltYWdlLnVwbG9hZC5zaW5nbGUoJ0ltYWdlJyksIHVzZXJDb250cm9sbGVyLmNyZWF0ZVVzZXIpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGF1dGhTaWdudXA7XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "authSignUp.js"
      ],
      "names": [
        "express",
        "require",
        "authSignup",
        "Router",
        "userController",
        "image",
        "post",
        "upload",
        "single",
        "createUser",
        "module",
        "exports"
      ],
      "mappings": ";;AAAA,IAAMA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;AAEA,IAAMC,UAAU,GAAGF,OAAO,CAACG,MAAR,EAAnB;;AAEA,IAAMC,cAAc,GAAGH,OAAO,CAAC,qCAAD,CAA9B;;AAEA,IAAMI,KAAK,GAAGJ,OAAO,CAAC,mBAAD,CAArB;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgDAC,UAAU,CAACI,IAAX,CAAgB,SAAhB,EAA2BD,KAAK,CAACE,MAAN,CAAaC,MAAb,CAAoB,OAApB,CAA3B,EAAyDJ,cAAc,CAACK,UAAxE;AAEAC,MAAM,CAACC,OAAP,GAAiBT,UAAjB",
      "sourceRoot": "/home/kodek-sleuth/Desktop/Quick-credit/Api/Auth",
      "sourcesContent": [
        "const express = require('express');\n\nconst authSignup = express.Router();\n\nconst userController = require('../Controllers/authControllerSignUp');\n\nconst image = require('../Settings/image');\n\n/**\n* @swagger\n* /api/v1/auth/signup:\n*   post:\n*     tags:\n*       - Auth\n*     name: Signup\n*     summary: Signs up a User/Admin\n*     consumes:\n*       - multipart/form-data\n*     parameters:\n*       - name: Fullname\n*         in: formData\n*         type: string\n*         required: true\n*         description: Yahya Jalal.\n*       - name: Email\n*         in: formData\n*         type: string\n*         required: true\n*         description: yahya@gmail.com.\n*       - name: Password\n*         in: formData\n*         type: string\n*         required: true\n*         description: stealth.\n*       - name: isAdmin\n*         in: formData\n*         type: string\n*         required: true\n*         description: True or False.\n*       - name: Address\n*         in: formData\n*         type: string\n*         description: Kitende, Entebbe.\n*       - name: Image\n*         in: formData\n*         type: file\n*         required: true\n*         description: Upload an Image File.\n*     responses:\n*       201:\n*         description: User Has Successfully Signed Up\n*       401:\n*         description: Invalid Email or Password\n*/\n\n\nauthSignup.post('/signup', image.upload.single('Image'), userController.createUser);\n\nmodule.exports = authSignup;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1557385196454
  },
  "{\"sourceRoot\":\"/home/kodek-sleuth/Desktop/Quick-credit/Api/Controllers\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/kodek-sleuth/Desktop/Quick-credit\",\"filename\":\"/home/kodek-sleuth/Desktop/Quick-credit/Api/Controllers/authControllerSignUp.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/kodek-sleuth/Desktop/Quick-credit\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/kodek-sleuth/Desktop/Quick-credit/Api/Controllers",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/kodek-sleuth/Desktop/Quick-credit",
      "filename": "/home/kodek-sleuth/Desktop/Quick-credit/Api/Controllers/authControllerSignUp.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/kodek-sleuth/Desktop/Quick-credit",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/kodek-sleuth/Desktop/Quick-credit/Api/Controllers/authControllerSignUp.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/home/kodek-sleuth/Desktop/Quick-credit/Api/Controllers/authControllerSignUp.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/kodek-sleuth/Desktop/Quick-credit/Api/Controllers",
        "sourceFileName": "authControllerSignUp.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\n/* eslint-disable max-len */\n\n/* eslint-disable no-trailing-spaces */\n\n/* eslint-disable brace-style */\n\n/* eslint-disable no-console */\n\n/* eslint-disable comma-dangle */\n\n/* eslint-disable no-unused-vars */\n\n/* eslint-disable eqeqeq */\n\n/* eslint-disable indent */\n// Password Encryption Library\nvar bcrypt = require('bcrypt'); // .Pool enables connection to Database\n\n\nvar DatabaseConnector = require('pg').Pool; // Database Connection String\n\n\nvar connectionString = process.env.QUICK_CREDIT_DB_TEST; // eslint-disable-next-line object-shorthand\n\nvar pool = new DatabaseConnector({\n  connectionString: connectionString\n});\n\nexports.createUser = function (req, res, next) {\n  // Database queriey to insert  req body in Database\n  var dataBaseQueryAdmin = 'INSERT INTO admin(fullname, email, password, isAdmin, image) VALUES($1, $2, $3, $4, $5)';\n  var dataBaseQueryUser = 'INSERT INTO users(fullname, email, password, address, isAdmin, image) VALUES($1, $2, $3, $4, $5, $6)'; // We seperating who deserves to be admin and user\n\n  if (req.body.isAdmin == 'False') {\n    // We making sure that User/Admin does not login with an already users Email/Fullname\n    pool.query(\"Select * FROM users WHERE email='\".concat(req.body.Email, \"'\")).then(function (dataCheck1) {\n      if (dataCheck1.rows == 0) {\n        pool.query(\"Select * FROM users WHERE fullname='\".concat(req.body.Fullname, \"'\")).then(function (dataCheck2) {\n          if (dataCheck2.rows == 0) {\n            // We make sure that the Password stored is first hashed for Privacy and Protection \n            bcrypt.hash(req.body.Password, 10, function (err, hash) {\n              if (err) {\n                res.status(401).json({\n                  Status: '401',\n                  Error: err.message\n                });\n              } else {\n                var valuesToDatabaseUser = [req.body.Fullname, req.body.Email, hash, req.body.Address, req.body.isAdmin, req.file.path];\n                pool.query(dataBaseQueryUser, valuesToDatabaseUser).then(function (result) {\n                  console.log(result);\n                  res.status(201).json({\n                    Status: '201',\n                    Data: {\n                      Fullname: req.body.Fullname,\n                      Email: req.body.Email,\n                      Password: hash,\n                      isAdmin: req.body.isAdmin,\n                      Address: req.body.Address,\n                      Image: req.file.path\n                    },\n                    Success: 'User Has Successfully Signed Up'\n                  });\n                })[\"catch\"](function (error) {\n                  res.status(401).json({\n                    Status: '401',\n                    Error: error.message\n                  });\n                });\n              }\n            });\n          } else {\n            res.status(401).json({\n              Status: '401',\n              Error: 'Name is already taken'\n            });\n          }\n        })[\"catch\"](function (dataErrorName) {\n          res.status(401).json({\n            Status: '401',\n            Error: dataErrorName.message\n          });\n        });\n      } else {\n        res.status(401).json({\n          Status: '401',\n          Error: 'Email is already taken'\n        });\n      }\n    })[\"catch\"](function (dataError) {\n      res.status(401).json({\n        Status: '401',\n        Error: dataError.message\n      });\n    });\n  }\n\n  if (req.body.isAdmin == 'True') {\n    pool.query(\"Select * FROM admin WHERE email='\".concat(req.body.Email, \"'\")).then(function (dataCheck1) {\n      if (dataCheck1.rows == 0) {\n        pool.query(\"Select * FROM admin WHERE fullname='\".concat(req.body.Fullname, \"'\")).then(function (dataCheck2) {\n          if (dataCheck2.rows == 0) {\n            bcrypt.hash(req.body.Password, 10, function (err, hash) {\n              if (err) {\n                res.status(401).json({\n                  Status: '401',\n                  Error: err.message\n                });\n              } else {\n                var valuesToDatabaseAdmin = [req.body.Fullname, req.body.Email, hash, req.body.isAdmin, req.file.path];\n                pool.query(dataBaseQueryAdmin, valuesToDatabaseAdmin).then(function (result) {\n                  console.log(result);\n                  res.status(201).json({\n                    Status: '201',\n                    Data: {\n                      Fullname: req.body.Fullname,\n                      Email: req.body.Email,\n                      Password: hash,\n                      isAdmin: req.body.isAdmin,\n                      Image: req.file.path\n                    },\n                    Success: 'Admin Has Successfully Signed Up'\n                  });\n                })[\"catch\"](function (error) {\n                  res.status(401).json({\n                    Status: '401',\n                    Error: error.message\n                  });\n                });\n              }\n            });\n          } else {\n            res.status(401).json({\n              Status: '401',\n              Error: 'Name is already taken'\n            });\n          }\n        })[\"catch\"](function (dataErrorName) {\n          res.status(401).json({\n            Status: '401',\n            Error: dataErrorName.message\n          });\n        });\n      } else {\n        res.status(401).json({\n          Status: '401',\n          Error: 'Email is already taken'\n        });\n      }\n    })[\"catch\"](function (dataError) {\n      res.status(401).json({\n        Status: '401',\n        Error: dataError.message\n      });\n    });\n  }\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "authControllerSignUp.js"
      ],
      "names": [
        "bcrypt",
        "require",
        "DatabaseConnector",
        "Pool",
        "connectionString",
        "process",
        "env",
        "QUICK_CREDIT_DB_TEST",
        "pool",
        "exports",
        "createUser",
        "req",
        "res",
        "next",
        "dataBaseQueryAdmin",
        "dataBaseQueryUser",
        "body",
        "isAdmin",
        "query",
        "Email",
        "then",
        "dataCheck1",
        "rows",
        "Fullname",
        "dataCheck2",
        "hash",
        "Password",
        "err",
        "status",
        "json",
        "Status",
        "Error",
        "message",
        "valuesToDatabaseUser",
        "Address",
        "file",
        "path",
        "result",
        "console",
        "log",
        "Data",
        "Image",
        "Success",
        "error",
        "dataErrorName",
        "dataError",
        "valuesToDatabaseAdmin"
      ],
      "mappings": ";;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;AAEA;AACA,IAAMA,MAAM,GAAGC,OAAO,CAAC,QAAD,CAAtB,C,CAEA;;;AACA,IAAMC,iBAAiB,GAAGD,OAAO,CAAC,IAAD,CAAP,CAAcE,IAAxC,C,CAEA;;;AACA,IAAMC,gBAAgB,GAAGC,OAAO,CAACC,GAAR,CAAYC,oBAArC,C,CAEA;;AACA,IAAMC,IAAI,GAAG,IAAIN,iBAAJ,CAAsB;AAAEE,EAAAA,gBAAgB,EAAEA;AAApB,CAAtB,CAAb;;AAEAK,OAAO,CAACC,UAAR,GAAqB,UAACC,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AACrC;AACA,MAAMC,kBAAkB,GAAG,yFAA3B;AAEA,MAAMC,iBAAiB,GAAG,sGAA1B,CAJqC,CAMrC;;AACA,MAAIJ,GAAG,CAACK,IAAJ,CAASC,OAAT,IAAoB,OAAxB,EACA;AACI;AACAT,IAAAA,IAAI,CAACU,KAAL,4CAA+CP,GAAG,CAACK,IAAJ,CAASG,KAAxD,QACCC,IADD,CACM,UAACC,UAAD,EAAgB;AAClB,UAAIA,UAAU,CAACC,IAAX,IAAmB,CAAvB,EACA;AACId,QAAAA,IAAI,CAACU,KAAL,+CAAkDP,GAAG,CAACK,IAAJ,CAASO,QAA3D,QACCH,IADD,CACM,UAACI,UAAD,EAAgB;AAClB,cAAIA,UAAU,CAACF,IAAX,IAAmB,CAAvB,EACA;AACI;AACAtB,YAAAA,MAAM,CAACyB,IAAP,CAAYd,GAAG,CAACK,IAAJ,CAASU,QAArB,EAA+B,EAA/B,EAAmC,UAACC,GAAD,EAAMF,IAAN,EAAe;AAC9C,kBAAIE,GAAJ,EACA;AACIf,gBAAAA,GAAG,CAACgB,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACjBC,kBAAAA,MAAM,EAAE,KADS;AAEjBC,kBAAAA,KAAK,EAAEJ,GAAG,CAACK;AAFM,iBAArB;AAIH,eAND,MASA;AACI,oBAAMC,oBAAoB,GAAG,CAACtB,GAAG,CAACK,IAAJ,CAASO,QAAV,EAAoBZ,GAAG,CAACK,IAAJ,CAASG,KAA7B,EAAoCM,IAApC,EAA0Cd,GAAG,CAACK,IAAJ,CAASkB,OAAnD,EAA4DvB,GAAG,CAACK,IAAJ,CAASC,OAArE,EAA8EN,GAAG,CAACwB,IAAJ,CAASC,IAAvF,CAA7B;AACA5B,gBAAAA,IAAI,CAACU,KAAL,CAAWH,iBAAX,EAA8BkB,oBAA9B,EACCb,IADD,CACM,UAACiB,MAAD,EAAY;AACdC,kBAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACAzB,kBAAAA,GAAG,CAACgB,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACjBC,oBAAAA,MAAM,EAAE,KADS;AAEjBU,oBAAAA,IAAI,EAAE;AACFjB,sBAAAA,QAAQ,EAAEZ,GAAG,CAACK,IAAJ,CAASO,QADjB;AAEFJ,sBAAAA,KAAK,EAAER,GAAG,CAACK,IAAJ,CAASG,KAFd;AAGFO,sBAAAA,QAAQ,EAAED,IAHR;AAIFR,sBAAAA,OAAO,EAAEN,GAAG,CAACK,IAAJ,CAASC,OAJhB;AAKFiB,sBAAAA,OAAO,EAAEvB,GAAG,CAACK,IAAJ,CAASkB,OALhB;AAMFO,sBAAAA,KAAK,EAAE9B,GAAG,CAACwB,IAAJ,CAASC;AANd,qBAFW;AAUjBM,oBAAAA,OAAO,EAAE;AAVQ,mBAArB;AAYH,iBAfD,WAgBO,UAACC,KAAD,EAAW;AACd/B,kBAAAA,GAAG,CAACgB,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACjBC,oBAAAA,MAAM,EAAE,KADS;AAEjBC,oBAAAA,KAAK,EAAEY,KAAK,CAACX;AAFI,mBAArB;AAIH,iBArBD;AAsBH;AACJ,aAnCD;AAoCH,WAvCD,MA0CA;AACIpB,YAAAA,GAAG,CAACgB,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACjBC,cAAAA,MAAM,EAAE,KADS;AAEjBC,cAAAA,KAAK,EAAE;AAFU,aAArB;AAIH;AACJ,SAlDD,WAmDO,UAACa,aAAD,EAAmB;AACtBhC,UAAAA,GAAG,CAACgB,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACjBC,YAAAA,MAAM,EAAE,KADS;AAEjBC,YAAAA,KAAK,EAAEa,aAAa,CAACZ;AAFJ,WAArB;AAIH,SAxDD;AAyDH,OA3DD,MA8DA;AACIpB,QAAAA,GAAG,CAACgB,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACjBC,UAAAA,MAAM,EAAE,KADS;AAEjBC,UAAAA,KAAK,EAAE;AAFU,SAArB;AAIH;AACJ,KAtED,WAuEO,UAACc,SAAD,EAAe;AAClBjC,MAAAA,GAAG,CAACgB,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACjBC,QAAAA,MAAM,EAAE,KADS;AAEjBC,QAAAA,KAAK,EAAEc,SAAS,CAACb;AAFA,OAArB;AAIH,KA5ED;AA6EH;;AAED,MAAIrB,GAAG,CAACK,IAAJ,CAASC,OAAT,IAAoB,MAAxB,EACA;AACIT,IAAAA,IAAI,CAACU,KAAL,4CAA+CP,GAAG,CAACK,IAAJ,CAASG,KAAxD,QACCC,IADD,CACM,UAACC,UAAD,EAAgB;AAClB,UAAIA,UAAU,CAACC,IAAX,IAAmB,CAAvB,EACA;AACId,QAAAA,IAAI,CAACU,KAAL,+CAAkDP,GAAG,CAACK,IAAJ,CAASO,QAA3D,QACCH,IADD,CACM,UAACI,UAAD,EAAgB;AAClB,cAAIA,UAAU,CAACF,IAAX,IAAmB,CAAvB,EACA;AACItB,YAAAA,MAAM,CAACyB,IAAP,CAAYd,GAAG,CAACK,IAAJ,CAASU,QAArB,EAA+B,EAA/B,EAAmC,UAACC,GAAD,EAAMF,IAAN,EAAe;AAC9C,kBAAIE,GAAJ,EACA;AACIf,gBAAAA,GAAG,CAACgB,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACjBC,kBAAAA,MAAM,EAAE,KADS;AAEjBC,kBAAAA,KAAK,EAAEJ,GAAG,CAACK;AAFM,iBAArB;AAIH,eAND,MAQK;AACD,oBAAMc,qBAAqB,GAAG,CAACnC,GAAG,CAACK,IAAJ,CAASO,QAAV,EAAoBZ,GAAG,CAACK,IAAJ,CAASG,KAA7B,EAAoCM,IAApC,EAA0Cd,GAAG,CAACK,IAAJ,CAASC,OAAnD,EAA4DN,GAAG,CAACwB,IAAJ,CAASC,IAArE,CAA9B;AACA5B,gBAAAA,IAAI,CAACU,KAAL,CAAWJ,kBAAX,EAA+BgC,qBAA/B,EACC1B,IADD,CACM,UAACiB,MAAD,EAAY;AACdC,kBAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACAzB,kBAAAA,GAAG,CAACgB,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACjBC,oBAAAA,MAAM,EAAE,KADS;AAEjBU,oBAAAA,IAAI,EAAE;AACFjB,sBAAAA,QAAQ,EAAEZ,GAAG,CAACK,IAAJ,CAASO,QADjB;AAEFJ,sBAAAA,KAAK,EAAER,GAAG,CAACK,IAAJ,CAASG,KAFd;AAGFO,sBAAAA,QAAQ,EAAED,IAHR;AAIFR,sBAAAA,OAAO,EAAEN,GAAG,CAACK,IAAJ,CAASC,OAJhB;AAKFwB,sBAAAA,KAAK,EAAE9B,GAAG,CAACwB,IAAJ,CAASC;AALd,qBAFW;AASjBM,oBAAAA,OAAO,EAAE;AATQ,mBAArB;AAWH,iBAdD,WAeO,UAACC,KAAD,EAAW;AACd/B,kBAAAA,GAAG,CAACgB,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACjBC,oBAAAA,MAAM,EAAE,KADS;AAEjBC,oBAAAA,KAAK,EAAEY,KAAK,CAACX;AAFI,mBAArB;AAIH,iBApBD;AAqBH;AACJ,aAjCD;AAkCH,WApCD,MAuCA;AACIpB,YAAAA,GAAG,CAACgB,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACjBC,cAAAA,MAAM,EAAE,KADS;AAEjBC,cAAAA,KAAK,EAAE;AAFU,aAArB;AAIH;AACJ,SA/CD,WAgDO,UAACa,aAAD,EAAmB;AACtBhC,UAAAA,GAAG,CAACgB,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACjBC,YAAAA,MAAM,EAAE,KADS;AAEjBC,YAAAA,KAAK,EAAEa,aAAa,CAACZ;AAFJ,WAArB;AAIH,SArDD;AAsDH,OAxDD,MA2DA;AACIpB,QAAAA,GAAG,CAACgB,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACjBC,UAAAA,MAAM,EAAE,KADS;AAEjBC,UAAAA,KAAK,EAAE;AAFU,SAArB;AAIH;AACJ,KAnED,WAoEO,UAACc,SAAD,EAAe;AAClBjC,MAAAA,GAAG,CAACgB,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACjBC,QAAAA,MAAM,EAAE,KADS;AAEjBC,QAAAA,KAAK,EAAEc,SAAS,CAACb;AAFA,OAArB;AAIH,KAzED;AA0EH;AACJ,CAtKD",
      "sourceRoot": "/home/kodek-sleuth/Desktop/Quick-credit/Api/Controllers",
      "sourcesContent": [
        "/* eslint-disable max-len */\n/* eslint-disable no-trailing-spaces */\n/* eslint-disable brace-style */\n/* eslint-disable no-console */\n/* eslint-disable comma-dangle */\n/* eslint-disable no-unused-vars */\n/* eslint-disable eqeqeq */\n/* eslint-disable indent */\n\n// Password Encryption Library\nconst bcrypt = require('bcrypt');\n\n// .Pool enables connection to Database\nconst DatabaseConnector = require('pg').Pool;\n\n// Database Connection String\nconst connectionString = process.env.QUICK_CREDIT_DB_TEST;\n\n// eslint-disable-next-line object-shorthand\nconst pool = new DatabaseConnector({ connectionString: connectionString });\n\nexports.createUser = (req, res, next) => {\n    // Database queriey to insert  req body in Database\n    const dataBaseQueryAdmin = 'INSERT INTO admin(fullname, email, password, isAdmin, image) VALUES($1, $2, $3, $4, $5)';\n    \n    const dataBaseQueryUser = 'INSERT INTO users(fullname, email, password, address, isAdmin, image) VALUES($1, $2, $3, $4, $5, $6)';\n    \n    // We seperating who deserves to be admin and user\n    if (req.body.isAdmin == 'False')\n    {\n        // We making sure that User/Admin does not login with an already users Email/Fullname\n        pool.query(`Select * FROM users WHERE email='${req.body.Email}'`)\n        .then((dataCheck1) => {\n            if (dataCheck1.rows == 0)\n            {\n                pool.query(`Select * FROM users WHERE fullname='${req.body.Fullname}'`)\n                .then((dataCheck2) => {\n                    if (dataCheck2.rows == 0)\n                    {\n                        // We make sure that the Password stored is first hashed for Privacy and Protection \n                        bcrypt.hash(req.body.Password, 10, (err, hash) => {\n                            if (err)\n                            {\n                                res.status(401).json({\n                                    Status: '401',\n                                    Error: err.message\n                                });\n                            }\n\n                            else\n                            {\n                                const valuesToDatabaseUser = [req.body.Fullname, req.body.Email, hash, req.body.Address, req.body.isAdmin, req.file.path];\n                                pool.query(dataBaseQueryUser, valuesToDatabaseUser)\n                                .then((result) => {\n                                    console.log(result);\n                                    res.status(201).json({\n                                        Status: '201',\n                                        Data: {\n                                            Fullname: req.body.Fullname,\n                                            Email: req.body.Email,\n                                            Password: hash,\n                                            isAdmin: req.body.isAdmin,\n                                            Address: req.body.Address,\n                                            Image: req.file.path\n                                        },\n                                        Success: 'User Has Successfully Signed Up'\n                                    });\n                                })\n                                .catch((error) => {\n                                    res.status(401).json({\n                                        Status: '401',\n                                        Error: error.message\n                                    });\n                                });\n                            }\n                        });\n                    }\n\n                    else \n                    {\n                        res.status(401).json({\n                            Status: '401',\n                            Error: 'Name is already taken'\n                        });\n                    }\n                })\n                .catch((dataErrorName) => {\n                    res.status(401).json({\n                        Status: '401',\n                        Error: dataErrorName.message\n                    });\n                });\n            }\n    \n            else\n            {\n                res.status(401).json({\n                    Status: '401',\n                    Error: 'Email is already taken'\n                });\n            }\n        })\n        .catch((dataError) => {\n            res.status(401).json({\n                Status: '401',\n                Error: dataError.message\n            });\n        });\n    }\n\n    if (req.body.isAdmin == 'True')\n    {\n        pool.query(`Select * FROM admin WHERE email='${req.body.Email}'`)\n        .then((dataCheck1) => {\n            if (dataCheck1.rows == 0)\n            {\n                pool.query(`Select * FROM admin WHERE fullname='${req.body.Fullname}'`)\n                .then((dataCheck2) => {\n                    if (dataCheck2.rows == 0)\n                    {\n                        bcrypt.hash(req.body.Password, 10, (err, hash) => {\n                            if (err)\n                            {\n                                res.status(401).json({\n                                    Status: '401',\n                                    Error: err.message\n                                });\n                            }\n\n                            else {\n                                const valuesToDatabaseAdmin = [req.body.Fullname, req.body.Email, hash, req.body.isAdmin, req.file.path];\n                                pool.query(dataBaseQueryAdmin, valuesToDatabaseAdmin)\n                                .then((result) => {\n                                    console.log(result);\n                                    res.status(201).json({\n                                        Status: '201',\n                                        Data: {\n                                            Fullname: req.body.Fullname,\n                                            Email: req.body.Email,\n                                            Password: hash,\n                                            isAdmin: req.body.isAdmin,\n                                            Image: req.file.path\n                                        },\n                                        Success: 'Admin Has Successfully Signed Up'\n                                    });\n                                })\n                                .catch((error) => {\n                                    res.status(401).json({\n                                        Status: '401',\n                                        Error: error.message\n                                    });\n                                });\n                            }\n                        });\n                    }\n    \n                    else \n                    {\n                        res.status(401).json({\n                            Status: '401',\n                            Error: 'Name is already taken'\n                        });\n                    }\n                })\n                .catch((dataErrorName) => {\n                    res.status(401).json({\n                        Status: '401',\n                        Error: dataErrorName.message\n                    });\n                });\n            }\n    \n            else\n            {\n                res.status(401).json({\n                    Status: '401',\n                    Error: 'Email is already taken'\n                });\n            }\n        })\n        .catch((dataError) => {\n            res.status(401).json({\n                Status: '401',\n                Error: dataError.message\n            });\n        });\n    } \n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1557385196458
  },
  "{\"sourceRoot\":\"/home/kodek-sleuth/Desktop/Quick-credit/Api/Settings\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/kodek-sleuth/Desktop/Quick-credit\",\"filename\":\"/home/kodek-sleuth/Desktop/Quick-credit/Api/Settings/image.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/kodek-sleuth/Desktop/Quick-credit\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/kodek-sleuth/Desktop/Quick-credit/Api/Settings",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/kodek-sleuth/Desktop/Quick-credit",
      "filename": "/home/kodek-sleuth/Desktop/Quick-credit/Api/Settings/image.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/kodek-sleuth/Desktop/Quick-credit",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/kodek-sleuth/Desktop/Quick-credit/Api/Settings/image.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/home/kodek-sleuth/Desktop/Quick-credit/Api/Settings/image.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/kodek-sleuth/Desktop/Quick-credit/Api/Settings",
        "sourceFileName": "image.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\n/* eslint-disable brace-style */\n\n/* eslint-disable max-len */\n\n/* eslint-disable comma-dangle */\n\n/* eslint-disable func-names */\n\n/* eslint-disable object-shorthand */\n\n/* eslint-disable space-infix-ops */\n\n/* eslint-disable indent */\n// Middleware that enables fileUploads\nvar multer = require('multer'); // .diskStorage Func(Takes in Functions) enables us set filename and determine destination, callback to null means they was no error so we can set the file...\n\n\nvar storage = multer.diskStorage({\n  filename: function filename(req, file, cb) {\n    cb(null, file.originalname);\n  },\n  destination: function destination(req, file, cb) {\n    cb(null, './uploads/');\n  }\n}); // Function To filter out filetypes as we only want jpegs/pngs\n\nvar fileFilter = function fileFilter(req, file, cb) {\n  if (file.mimetype === 'image/png' || file.mimetype === 'image/jpeg') {\n    cb(null, true);\n  } else {\n    cb(null, false);\n  }\n};\n\nexports.upload = multer({\n  storage: storage,\n  limits: {\n    fileSize: 1024 * 1024 * 0.1\n  },\n  fileFilter: fileFilter\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImltYWdlLmpzIl0sIm5hbWVzIjpbIm11bHRlciIsInJlcXVpcmUiLCJzdG9yYWdlIiwiZGlza1N0b3JhZ2UiLCJmaWxlbmFtZSIsInJlcSIsImZpbGUiLCJjYiIsIm9yaWdpbmFsbmFtZSIsImRlc3RpbmF0aW9uIiwiZmlsZUZpbHRlciIsIm1pbWV0eXBlIiwiZXhwb3J0cyIsInVwbG9hZCIsImxpbWl0cyIsImZpbGVTaXplIl0sIm1hcHBpbmdzIjoiOztBQUFBOztBQUNBOztBQUNBOztBQUNBOztBQUNBOztBQUNBOztBQUNBO0FBR0E7QUFDQSxJQUFNQSxNQUFNLEdBQUdDLE9BQU8sQ0FBQyxRQUFELENBQXRCLEMsQ0FFQTs7O0FBQ0EsSUFBTUMsT0FBTyxHQUFHRixNQUFNLENBQUNHLFdBQVAsQ0FBbUI7QUFDL0JDLEVBQUFBLFFBQVEsRUFBRSxrQkFBVUMsR0FBVixFQUFlQyxJQUFmLEVBQXFCQyxFQUFyQixFQUF5QjtBQUMvQkEsSUFBQUEsRUFBRSxDQUFDLElBQUQsRUFBT0QsSUFBSSxDQUFDRSxZQUFaLENBQUY7QUFDSCxHQUg4QjtBQUsvQkMsRUFBQUEsV0FBVyxFQUFFLHFCQUFVSixHQUFWLEVBQWVDLElBQWYsRUFBcUJDLEVBQXJCLEVBQXlCO0FBQ2xDQSxJQUFBQSxFQUFFLENBQUMsSUFBRCxFQUFPLFlBQVAsQ0FBRjtBQUNIO0FBUDhCLENBQW5CLENBQWhCLEMsQ0FVQTs7QUFDQSxJQUFNRyxVQUFVLEdBQUcsU0FBYkEsVUFBYSxDQUFDTCxHQUFELEVBQU1DLElBQU4sRUFBWUMsRUFBWixFQUFtQjtBQUNsQyxNQUFJRCxJQUFJLENBQUNLLFFBQUwsS0FBZ0IsV0FBaEIsSUFBK0JMLElBQUksQ0FBQ0ssUUFBTCxLQUFnQixZQUFuRCxFQUNBO0FBQ0lKLElBQUFBLEVBQUUsQ0FBQyxJQUFELEVBQU8sSUFBUCxDQUFGO0FBQ0gsR0FIRCxNQU1BO0FBQ0lBLElBQUFBLEVBQUUsQ0FBQyxJQUFELEVBQU8sS0FBUCxDQUFGO0FBQ0g7QUFDSixDQVZEOztBQVlBSyxPQUFPLENBQUNDLE1BQVIsR0FBaUJiLE1BQU0sQ0FBQztBQUFFRSxFQUFBQSxPQUFPLEVBQUVBLE9BQVg7QUFBb0JZLEVBQUFBLE1BQU0sRUFBRTtBQUFFQyxJQUFBQSxRQUFRLEVBQUUsT0FBTyxJQUFQLEdBQWM7QUFBMUIsR0FBNUI7QUFBNkRMLEVBQUFBLFVBQVUsRUFBRUE7QUFBekUsQ0FBRCxDQUF2QiIsInNvdXJjZVJvb3QiOiIvaG9tZS9rb2Rlay1zbGV1dGgvRGVza3RvcC9RdWljay1jcmVkaXQvQXBpL1NldHRpbmdzIiwic291cmNlc0NvbnRlbnQiOlsiLyogZXNsaW50LWRpc2FibGUgYnJhY2Utc3R5bGUgKi9cbi8qIGVzbGludC1kaXNhYmxlIG1heC1sZW4gKi9cbi8qIGVzbGludC1kaXNhYmxlIGNvbW1hLWRhbmdsZSAqL1xuLyogZXNsaW50LWRpc2FibGUgZnVuYy1uYW1lcyAqL1xuLyogZXNsaW50LWRpc2FibGUgb2JqZWN0LXNob3J0aGFuZCAqL1xuLyogZXNsaW50LWRpc2FibGUgc3BhY2UtaW5maXgtb3BzICovXG4vKiBlc2xpbnQtZGlzYWJsZSBpbmRlbnQgKi9cblxuXG4vLyBNaWRkbGV3YXJlIHRoYXQgZW5hYmxlcyBmaWxlVXBsb2Fkc1xuY29uc3QgbXVsdGVyID0gcmVxdWlyZSgnbXVsdGVyJyk7XG5cbi8vIC5kaXNrU3RvcmFnZSBGdW5jKFRha2VzIGluIEZ1bmN0aW9ucykgZW5hYmxlcyB1cyBzZXQgZmlsZW5hbWUgYW5kIGRldGVybWluZSBkZXN0aW5hdGlvbiwgY2FsbGJhY2sgdG8gbnVsbCBtZWFucyB0aGV5IHdhcyBubyBlcnJvciBzbyB3ZSBjYW4gc2V0IHRoZSBmaWxlLi4uXG5jb25zdCBzdG9yYWdlID0gbXVsdGVyLmRpc2tTdG9yYWdlKHtcbiAgICBmaWxlbmFtZTogZnVuY3Rpb24gKHJlcSwgZmlsZSwgY2IpIHtcbiAgICAgICAgY2IobnVsbCwgZmlsZS5vcmlnaW5hbG5hbWUpO1xuICAgIH0sXG5cbiAgICBkZXN0aW5hdGlvbjogZnVuY3Rpb24gKHJlcSwgZmlsZSwgY2IpIHtcbiAgICAgICAgY2IobnVsbCwgJy4vdXBsb2Fkcy8nKTtcbiAgICB9XG59KTtcblxuLy8gRnVuY3Rpb24gVG8gZmlsdGVyIG91dCBmaWxldHlwZXMgYXMgd2Ugb25seSB3YW50IGpwZWdzL3BuZ3NcbmNvbnN0IGZpbGVGaWx0ZXIgPSAocmVxLCBmaWxlLCBjYikgPT4ge1xuICAgIGlmIChmaWxlLm1pbWV0eXBlPT09J2ltYWdlL3BuZycgfHwgZmlsZS5taW1ldHlwZT09PSdpbWFnZS9qcGVnJylcbiAgICB7XG4gICAgICAgIGNiKG51bGwsIHRydWUpO1xuICAgIH1cblxuICAgIGVsc2VcbiAgICB7XG4gICAgICAgIGNiKG51bGwsIGZhbHNlKTtcbiAgICB9XG59O1xuXG5leHBvcnRzLnVwbG9hZCA9IG11bHRlcih7IHN0b3JhZ2U6IHN0b3JhZ2UsIGxpbWl0czogeyBmaWxlU2l6ZTogMTAyNCAqIDEwMjQgKiAwLjEgfSwgZmlsZUZpbHRlcjogZmlsZUZpbHRlciB9KTtcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "image.js"
      ],
      "names": [
        "multer",
        "require",
        "storage",
        "diskStorage",
        "filename",
        "req",
        "file",
        "cb",
        "originalname",
        "destination",
        "fileFilter",
        "mimetype",
        "exports",
        "upload",
        "limits",
        "fileSize"
      ],
      "mappings": ";;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;AAGA;AACA,IAAMA,MAAM,GAAGC,OAAO,CAAC,QAAD,CAAtB,C,CAEA;;;AACA,IAAMC,OAAO,GAAGF,MAAM,CAACG,WAAP,CAAmB;AAC/BC,EAAAA,QAAQ,EAAE,kBAAUC,GAAV,EAAeC,IAAf,EAAqBC,EAArB,EAAyB;AAC/BA,IAAAA,EAAE,CAAC,IAAD,EAAOD,IAAI,CAACE,YAAZ,CAAF;AACH,GAH8B;AAK/BC,EAAAA,WAAW,EAAE,qBAAUJ,GAAV,EAAeC,IAAf,EAAqBC,EAArB,EAAyB;AAClCA,IAAAA,EAAE,CAAC,IAAD,EAAO,YAAP,CAAF;AACH;AAP8B,CAAnB,CAAhB,C,CAUA;;AACA,IAAMG,UAAU,GAAG,SAAbA,UAAa,CAACL,GAAD,EAAMC,IAAN,EAAYC,EAAZ,EAAmB;AAClC,MAAID,IAAI,CAACK,QAAL,KAAgB,WAAhB,IAA+BL,IAAI,CAACK,QAAL,KAAgB,YAAnD,EACA;AACIJ,IAAAA,EAAE,CAAC,IAAD,EAAO,IAAP,CAAF;AACH,GAHD,MAMA;AACIA,IAAAA,EAAE,CAAC,IAAD,EAAO,KAAP,CAAF;AACH;AACJ,CAVD;;AAYAK,OAAO,CAACC,MAAR,GAAiBb,MAAM,CAAC;AAAEE,EAAAA,OAAO,EAAEA,OAAX;AAAoBY,EAAAA,MAAM,EAAE;AAAEC,IAAAA,QAAQ,EAAE,OAAO,IAAP,GAAc;AAA1B,GAA5B;AAA6DL,EAAAA,UAAU,EAAEA;AAAzE,CAAD,CAAvB",
      "sourceRoot": "/home/kodek-sleuth/Desktop/Quick-credit/Api/Settings",
      "sourcesContent": [
        "/* eslint-disable brace-style */\n/* eslint-disable max-len */\n/* eslint-disable comma-dangle */\n/* eslint-disable func-names */\n/* eslint-disable object-shorthand */\n/* eslint-disable space-infix-ops */\n/* eslint-disable indent */\n\n\n// Middleware that enables fileUploads\nconst multer = require('multer');\n\n// .diskStorage Func(Takes in Functions) enables us set filename and determine destination, callback to null means they was no error so we can set the file...\nconst storage = multer.diskStorage({\n    filename: function (req, file, cb) {\n        cb(null, file.originalname);\n    },\n\n    destination: function (req, file, cb) {\n        cb(null, './uploads/');\n    }\n});\n\n// Function To filter out filetypes as we only want jpegs/pngs\nconst fileFilter = (req, file, cb) => {\n    if (file.mimetype==='image/png' || file.mimetype==='image/jpeg')\n    {\n        cb(null, true);\n    }\n\n    else\n    {\n        cb(null, false);\n    }\n};\n\nexports.upload = multer({ storage: storage, limits: { fileSize: 1024 * 1024 * 0.1 }, fileFilter: fileFilter });\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1556504988527
  },
  "{\"sourceRoot\":\"/home/kodek-sleuth/Desktop/Quick-credit/Api/Auth\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/kodek-sleuth/Desktop/Quick-credit\",\"filename\":\"/home/kodek-sleuth/Desktop/Quick-credit/Api/Auth/authLogin.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/kodek-sleuth/Desktop/Quick-credit\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/kodek-sleuth/Desktop/Quick-credit/Api/Auth",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/kodek-sleuth/Desktop/Quick-credit",
      "filename": "/home/kodek-sleuth/Desktop/Quick-credit/Api/Auth/authLogin.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/kodek-sleuth/Desktop/Quick-credit",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/kodek-sleuth/Desktop/Quick-credit/Api/Auth/authLogin.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/home/kodek-sleuth/Desktop/Quick-credit/Api/Auth/authLogin.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/kodek-sleuth/Desktop/Quick-credit/Api/Auth",
        "sourceFileName": "authLogin.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar express = require('express');\n\nvar authLogin = express.Router();\n\nvar userController = require('../Controllers/authControllerLogin');\n/**\n* @swagger\n* /api/v1/auth/login:\n*   post:\n*     tags:\n*       - Auth\n*     name: Login\n*     summary: Logs in a User/Admin\n*     consumes:\n*       - application/json\n*     parameters:\n*       - name: body\n*         in: body\n*         properties:\n*           Email:\n*             type: string\n*             example: abel@gmail.com\n*           Password:\n*             type: string\n*             format: password\n*             example: stealth\n*           isAdmin:\n*             type: string\n*             example: \"False\"\n*         required:\n*           - Email\n*           - Password\n*           - isAdmin\n*     responses:\n*       200:\n*         description: User Has Successfully Logged In\n*       401:\n*         description: Invalid Email or Password\n*/\n\n\nauthLogin.post('/login', userController.loginUser);\nmodule.exports = authLogin;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImF1dGhMb2dpbi5qcyJdLCJuYW1lcyI6WyJleHByZXNzIiwicmVxdWlyZSIsImF1dGhMb2dpbiIsIlJvdXRlciIsInVzZXJDb250cm9sbGVyIiwicG9zdCIsImxvZ2luVXNlciIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiI7O0FBQUEsSUFBTUEsT0FBTyxHQUFHQyxPQUFPLENBQUMsU0FBRCxDQUF2Qjs7QUFFQSxJQUFNQyxTQUFTLEdBQUdGLE9BQU8sQ0FBQ0csTUFBUixFQUFsQjs7QUFFQSxJQUFNQyxjQUFjLEdBQUdILE9BQU8sQ0FBQyxvQ0FBRCxDQUE5QjtBQUVBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFtQ0FDLFNBQVMsQ0FBQ0csSUFBVixDQUFlLFFBQWYsRUFBeUJELGNBQWMsQ0FBQ0UsU0FBeEM7QUFFQUMsTUFBTSxDQUFDQyxPQUFQLEdBQWlCTixTQUFqQiIsInNvdXJjZVJvb3QiOiIvaG9tZS9rb2Rlay1zbGV1dGgvRGVza3RvcC9RdWljay1jcmVkaXQvQXBpL0F1dGgiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBleHByZXNzID0gcmVxdWlyZSgnZXhwcmVzcycpO1xuXG5jb25zdCBhdXRoTG9naW4gPSBleHByZXNzLlJvdXRlcigpO1xuXG5jb25zdCB1c2VyQ29udHJvbGxlciA9IHJlcXVpcmUoJy4uL0NvbnRyb2xsZXJzL2F1dGhDb250cm9sbGVyTG9naW4nKTtcblxuLyoqXG4qIEBzd2FnZ2VyXG4qIC9hcGkvdjEvYXV0aC9sb2dpbjpcbiogICBwb3N0OlxuKiAgICAgdGFnczpcbiogICAgICAgLSBBdXRoXG4qICAgICBuYW1lOiBMb2dpblxuKiAgICAgc3VtbWFyeTogTG9ncyBpbiBhIFVzZXIvQWRtaW5cbiogICAgIGNvbnN1bWVzOlxuKiAgICAgICAtIGFwcGxpY2F0aW9uL2pzb25cbiogICAgIHBhcmFtZXRlcnM6XG4qICAgICAgIC0gbmFtZTogYm9keVxuKiAgICAgICAgIGluOiBib2R5XG4qICAgICAgICAgcHJvcGVydGllczpcbiogICAgICAgICAgIEVtYWlsOlxuKiAgICAgICAgICAgICB0eXBlOiBzdHJpbmdcbiogICAgICAgICAgICAgZXhhbXBsZTogYWJlbEBnbWFpbC5jb21cbiogICAgICAgICAgIFBhc3N3b3JkOlxuKiAgICAgICAgICAgICB0eXBlOiBzdHJpbmdcbiogICAgICAgICAgICAgZm9ybWF0OiBwYXNzd29yZFxuKiAgICAgICAgICAgICBleGFtcGxlOiBzdGVhbHRoXG4qICAgICAgICAgICBpc0FkbWluOlxuKiAgICAgICAgICAgICB0eXBlOiBzdHJpbmdcbiogICAgICAgICAgICAgZXhhbXBsZTogXCJGYWxzZVwiXG4qICAgICAgICAgcmVxdWlyZWQ6XG4qICAgICAgICAgICAtIEVtYWlsXG4qICAgICAgICAgICAtIFBhc3N3b3JkXG4qICAgICAgICAgICAtIGlzQWRtaW5cbiogICAgIHJlc3BvbnNlczpcbiogICAgICAgMjAwOlxuKiAgICAgICAgIGRlc2NyaXB0aW9uOiBVc2VyIEhhcyBTdWNjZXNzZnVsbHkgTG9nZ2VkIEluXG4qICAgICAgIDQwMTpcbiogICAgICAgICBkZXNjcmlwdGlvbjogSW52YWxpZCBFbWFpbCBvciBQYXNzd29yZFxuKi9cblxuYXV0aExvZ2luLnBvc3QoJy9sb2dpbicsIHVzZXJDb250cm9sbGVyLmxvZ2luVXNlcik7XG5cbm1vZHVsZS5leHBvcnRzID0gYXV0aExvZ2luO1xuIl19",
    "map": {
      "version": 3,
      "sources": [
        "authLogin.js"
      ],
      "names": [
        "express",
        "require",
        "authLogin",
        "Router",
        "userController",
        "post",
        "loginUser",
        "module",
        "exports"
      ],
      "mappings": ";;AAAA,IAAMA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;AAEA,IAAMC,SAAS,GAAGF,OAAO,CAACG,MAAR,EAAlB;;AAEA,IAAMC,cAAc,GAAGH,OAAO,CAAC,oCAAD,CAA9B;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmCAC,SAAS,CAACG,IAAV,CAAe,QAAf,EAAyBD,cAAc,CAACE,SAAxC;AAEAC,MAAM,CAACC,OAAP,GAAiBN,SAAjB",
      "sourceRoot": "/home/kodek-sleuth/Desktop/Quick-credit/Api/Auth",
      "sourcesContent": [
        "const express = require('express');\n\nconst authLogin = express.Router();\n\nconst userController = require('../Controllers/authControllerLogin');\n\n/**\n* @swagger\n* /api/v1/auth/login:\n*   post:\n*     tags:\n*       - Auth\n*     name: Login\n*     summary: Logs in a User/Admin\n*     consumes:\n*       - application/json\n*     parameters:\n*       - name: body\n*         in: body\n*         properties:\n*           Email:\n*             type: string\n*             example: abel@gmail.com\n*           Password:\n*             type: string\n*             format: password\n*             example: stealth\n*           isAdmin:\n*             type: string\n*             example: \"False\"\n*         required:\n*           - Email\n*           - Password\n*           - isAdmin\n*     responses:\n*       200:\n*         description: User Has Successfully Logged In\n*       401:\n*         description: Invalid Email or Password\n*/\n\nauthLogin.post('/login', userController.loginUser);\n\nmodule.exports = authLogin;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1557385196454
  },
  "{\"sourceRoot\":\"/home/kodek-sleuth/Desktop/Quick-credit/Api/Controllers\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/kodek-sleuth/Desktop/Quick-credit\",\"filename\":\"/home/kodek-sleuth/Desktop/Quick-credit/Api/Controllers/authControllerLogin.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/kodek-sleuth/Desktop/Quick-credit\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/kodek-sleuth/Desktop/Quick-credit/Api/Controllers",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/kodek-sleuth/Desktop/Quick-credit",
      "filename": "/home/kodek-sleuth/Desktop/Quick-credit/Api/Controllers/authControllerLogin.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/kodek-sleuth/Desktop/Quick-credit",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/kodek-sleuth/Desktop/Quick-credit/Api/Controllers/authControllerLogin.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/home/kodek-sleuth/Desktop/Quick-credit/Api/Controllers/authControllerLogin.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/kodek-sleuth/Desktop/Quick-credit/Api/Controllers",
        "sourceFileName": "authControllerLogin.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\n/* eslint-disable object-shorthand */\n\n/* eslint-disable max-len */\n\n/* eslint-disable no-trailing-spaces */\n\n/* eslint-disable brace-style */\n\n/* eslint-disable no-console */\n\n/* eslint-disable comma-dangle */\n\n/* eslint-disable no-unused-vars */\n\n/* eslint-disable eqeqeq */\n\n/* eslint-disable indent */\n// Password Encryption Library\nvar bcrypt = require('bcrypt'); // Authorisation Token Generator Library\n\n\nvar jwt = require('jsonwebtoken'); // .Pool enables connection to Database\n\n\nvar DatabaseConnector = require('pg').Pool; // Database Conectoion String\n\n\nvar connectionString = process.env.QUICK_CREDIT_DB_TEST;\nvar pool = new DatabaseConnector({\n  connectionString: connectionString\n}); // A Login is just a database check to make sure that req.body matches  all values in database for that user\n\nexports.loginUser = function (req, res, next) {\n  var checkQueryAdmin = \"Select * from admin WHERE email='\".concat(req.body.Email, \"'\"); // Since Admin and User use one route for login in this Database\n  // This field enables us filter out who is Admin and who is not\n\n  if (req.body.isAdmin == 'False') {\n    // We first check if the Email exists\n    var checkQueryUser = \"Select * from users WHERE email='\".concat(req.body.Email, \"'\");\n    pool.query(checkQueryUser).then(function (data) {\n      if (data.rowCount > 0) {\n        // We check if the Password matches the hashed Password in db if decrypted\n        var fetchedData = data.rows;\n        bcrypt.compare(req.body.Password, fetchedData[0].password, function (err, success) {\n          if (err) {\n            res.status(401).json({\n              Status: '401',\n              Error: 'Invalid Email or Password'\n            });\n          }\n\n          if (success) {\n            // We the Create a user token that user is going to use for Authentication of other routes\n            // Token takes user details(any), Secret Key and an expiry\n            var token = jwt.sign({\n              Email: fetchedData[0].email\n            }, process.env.JWT_KEY_USER, {\n              expiresIn: '2h'\n            });\n            res.status(200).json({\n              Status: 200,\n              Data: {\n                Fullname: fetchedData[0].fullname,\n                Email: fetchedData[0].email,\n                Address: fetchedData[0].address,\n                Status: fetchedData[0].status\n              },\n              Success: 'User Has Successfully Logged In',\n              Token: token\n            });\n          }\n        });\n      } else {\n        res.status(401).json({\n          Status: '401',\n          Error: 'Invalid Email or Password'\n        });\n      }\n    })[\"catch\"](function (error) {\n      res.status(401).json({\n        Status: 401,\n        Error: 'Invalid Email or Password'\n      });\n    });\n  }\n\n  if (req.body.isAdmin == 'True') {\n    pool.query(checkQueryAdmin).then(function (data) {\n      if (data.rowCount > 0) {\n        var fetchedData = data.rows;\n        bcrypt.compare(req.body.Password, fetchedData[0].password, function (error, success) {\n          if (error) {\n            res.status(401).json({\n              Status: '401',\n              Error: error.message\n            });\n          }\n\n          if (success) {\n            var token = jwt.sign({\n              Email: fetchedData[0].email\n            }, process.env.JWT_KEY_ADMIN, {\n              expiresIn: '2h'\n            });\n            res.status(200).json({\n              Status: 200,\n              Data: {\n                Fullname: fetchedData[0].fullname,\n                Email: fetchedData[0].email\n              },\n              Success: 'Admin Has Successfully Logged In',\n              Token: token\n            });\n          }\n        });\n      } else {\n        res.status(401).json({\n          Status: '401',\n          Error: 'Invalid Email or Password'\n        });\n      }\n    })[\"catch\"](function (error) {\n      res.status(401).json({\n        Status: 401,\n        Error: 'Invalid Email or Password'\n      });\n    });\n  }\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "authControllerLogin.js"
      ],
      "names": [
        "bcrypt",
        "require",
        "jwt",
        "DatabaseConnector",
        "Pool",
        "connectionString",
        "process",
        "env",
        "QUICK_CREDIT_DB_TEST",
        "pool",
        "exports",
        "loginUser",
        "req",
        "res",
        "next",
        "checkQueryAdmin",
        "body",
        "Email",
        "isAdmin",
        "checkQueryUser",
        "query",
        "then",
        "data",
        "rowCount",
        "fetchedData",
        "rows",
        "compare",
        "Password",
        "password",
        "err",
        "success",
        "status",
        "json",
        "Status",
        "Error",
        "token",
        "sign",
        "email",
        "JWT_KEY_USER",
        "expiresIn",
        "Data",
        "Fullname",
        "fullname",
        "Address",
        "address",
        "Success",
        "Token",
        "error",
        "message",
        "JWT_KEY_ADMIN"
      ],
      "mappings": ";;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;AAEA;AACA,IAAMA,MAAM,GAAGC,OAAO,CAAC,QAAD,CAAtB,C,CAEA;;;AACA,IAAMC,GAAG,GAAGD,OAAO,CAAC,cAAD,CAAnB,C,CAEA;;;AACA,IAAME,iBAAiB,GAAGF,OAAO,CAAC,IAAD,CAAP,CAAcG,IAAxC,C,CAEA;;;AACA,IAAMC,gBAAgB,GAAGC,OAAO,CAACC,GAAR,CAAYC,oBAArC;AAGA,IAAMC,IAAI,GAAG,IAAIN,iBAAJ,CAAsB;AAAEE,EAAAA,gBAAgB,EAAEA;AAApB,CAAtB,CAAb,C,CAEA;;AACAK,OAAO,CAACC,SAAR,GAAoB,UAACC,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AACpC,MAAMC,eAAe,8CAAuCH,GAAG,CAACI,IAAJ,CAASC,KAAhD,MAArB,CADoC,CAGpC;AACA;;AAEA,MAAIL,GAAG,CAACI,IAAJ,CAASE,OAAT,IAAoB,OAAxB,EACA;AACI;AACA,QAAMC,cAAc,8CAAuCP,GAAG,CAACI,IAAJ,CAASC,KAAhD,MAApB;AACAR,IAAAA,IAAI,CAACW,KAAL,CAAWD,cAAX,EACCE,IADD,CACM,UAACC,IAAD,EAAU;AACZ,UAAIA,IAAI,CAACC,QAAL,GAAgB,CAApB,EACA;AACI;AACA,YAAMC,WAAW,GAAGF,IAAI,CAACG,IAAzB;AACAzB,QAAAA,MAAM,CAAC0B,OAAP,CAAed,GAAG,CAACI,IAAJ,CAASW,QAAxB,EAAkCH,WAAW,CAAC,CAAD,CAAX,CAAeI,QAAjD,EAA2D,UAACC,GAAD,EAAMC,OAAN,EAAkB;AACzE,cAAID,GAAJ,EACA;AACIhB,YAAAA,GAAG,CAACkB,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACjBC,cAAAA,MAAM,EAAE,KADS;AAEjBC,cAAAA,KAAK,EAAE;AAFU,aAArB;AAIH;;AAED,cAAIJ,OAAJ,EACA;AACI;AACA;AAEA,gBAAMK,KAAK,GAAGjC,GAAG,CAACkC,IAAJ,CAAS;AACnBnB,cAAAA,KAAK,EAAEO,WAAW,CAAC,CAAD,CAAX,CAAea;AADH,aAAT,EAId/B,OAAO,CAACC,GAAR,CAAY+B,YAJE,EAKd;AACIC,cAAAA,SAAS,EAAE;AADf,aALc,CAAd;AASA1B,YAAAA,GAAG,CAACkB,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACjBC,cAAAA,MAAM,EAAE,GADS;AAEjBO,cAAAA,IAAI,EAAE;AACFC,gBAAAA,QAAQ,EAAEjB,WAAW,CAAC,CAAD,CAAX,CAAekB,QADvB;AAEFzB,gBAAAA,KAAK,EAAEO,WAAW,CAAC,CAAD,CAAX,CAAea,KAFpB;AAGFM,gBAAAA,OAAO,EAAEnB,WAAW,CAAC,CAAD,CAAX,CAAeoB,OAHtB;AAIFX,gBAAAA,MAAM,EAAET,WAAW,CAAC,CAAD,CAAX,CAAeO;AAJrB,eAFW;AAQjBc,cAAAA,OAAO,EAAE,iCARQ;AASjBC,cAAAA,KAAK,EAAEX;AATU,aAArB;AAWH;AACJ,SAnCD;AAoCH,OAxCD,MA2CA;AACItB,QAAAA,GAAG,CAACkB,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACjBC,UAAAA,MAAM,EAAE,KADS;AAEjBC,UAAAA,KAAK,EAAE;AAFU,SAArB;AAIH;AACJ,KAnDD,WAoDO,UAACa,KAAD,EAAW;AACdlC,MAAAA,GAAG,CAACkB,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACjBC,QAAAA,MAAM,EAAE,GADS;AAEjBC,QAAAA,KAAK,EAAE;AAFU,OAArB;AAIH,KAzDD;AA0DH;;AAED,MAAItB,GAAG,CAACI,IAAJ,CAASE,OAAT,IAAoB,MAAxB,EACA;AACIT,IAAAA,IAAI,CAACW,KAAL,CAAWL,eAAX,EACCM,IADD,CACM,UAACC,IAAD,EAAU;AACZ,UAAIA,IAAI,CAACC,QAAL,GAAgB,CAApB,EACA;AACI,YAAMC,WAAW,GAAGF,IAAI,CAACG,IAAzB;AACAzB,QAAAA,MAAM,CAAC0B,OAAP,CAAed,GAAG,CAACI,IAAJ,CAASW,QAAxB,EAAkCH,WAAW,CAAC,CAAD,CAAX,CAAeI,QAAjD,EAA2D,UAACmB,KAAD,EAAQjB,OAAR,EAAoB;AAC3E,cAAIiB,KAAJ,EACA;AACIlC,YAAAA,GAAG,CAACkB,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACjBC,cAAAA,MAAM,EAAE,KADS;AAEjBC,cAAAA,KAAK,EAAEa,KAAK,CAACC;AAFI,aAArB;AAIH;;AAED,cAAIlB,OAAJ,EACA;AACI,gBAAMK,KAAK,GAAGjC,GAAG,CAACkC,IAAJ,CAAS;AACnBnB,cAAAA,KAAK,EAAEO,WAAW,CAAC,CAAD,CAAX,CAAea;AADH,aAAT,EAId/B,OAAO,CAACC,GAAR,CAAY0C,aAJE,EAKd;AACIV,cAAAA,SAAS,EAAE;AADf,aALc,CAAd;AASA1B,YAAAA,GAAG,CAACkB,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACjBC,cAAAA,MAAM,EAAE,GADS;AAEjBO,cAAAA,IAAI,EAAE;AACFC,gBAAAA,QAAQ,EAAEjB,WAAW,CAAC,CAAD,CAAX,CAAekB,QADvB;AAEFzB,gBAAAA,KAAK,EAAEO,WAAW,CAAC,CAAD,CAAX,CAAea;AAFpB,eAFW;AAMjBQ,cAAAA,OAAO,EAAE,kCANQ;AAOjBC,cAAAA,KAAK,EAAEX;AAPU,aAArB;AASH;AACJ,SA9BD;AA+BH,OAlCD,MAqCA;AACItB,QAAAA,GAAG,CAACkB,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACjBC,UAAAA,MAAM,EAAE,KADS;AAEjBC,UAAAA,KAAK,EAAE;AAFU,SAArB;AAIH;AACJ,KA7CD,WA8CO,UAACa,KAAD,EAAW;AACdlC,MAAAA,GAAG,CAACkB,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACjBC,QAAAA,MAAM,EAAE,GADS;AAEjBC,QAAAA,KAAK,EAAE;AAFU,OAArB;AAIH,KAnDD;AAoDH;AACJ,CA7HD",
      "sourceRoot": "/home/kodek-sleuth/Desktop/Quick-credit/Api/Controllers",
      "sourcesContent": [
        "/* eslint-disable object-shorthand */\n/* eslint-disable max-len */\n/* eslint-disable no-trailing-spaces */\n/* eslint-disable brace-style */\n/* eslint-disable no-console */\n/* eslint-disable comma-dangle */\n/* eslint-disable no-unused-vars */\n/* eslint-disable eqeqeq */\n/* eslint-disable indent */\n\n// Password Encryption Library\nconst bcrypt = require('bcrypt');\n\n// Authorisation Token Generator Library\nconst jwt = require('jsonwebtoken');\n\n// .Pool enables connection to Database\nconst DatabaseConnector = require('pg').Pool;\n\n// Database Conectoion String\nconst connectionString = process.env.QUICK_CREDIT_DB_TEST;\n\n\nconst pool = new DatabaseConnector({ connectionString: connectionString });\n\n// A Login is just a database check to make sure that req.body matches  all values in database for that user\nexports.loginUser = (req, res, next) => {\n    const checkQueryAdmin = `Select * from admin WHERE email='${req.body.Email}'`;\n\n    // Since Admin and User use one route for login in this Database\n    // This field enables us filter out who is Admin and who is not\n\n    if (req.body.isAdmin == 'False')\n    {\n        // We first check if the Email exists\n        const checkQueryUser = `Select * from users WHERE email='${req.body.Email}'`;\n        pool.query(checkQueryUser)\n        .then((data) => {\n            if (data.rowCount > 0)\n            {\n                // We check if the Password matches the hashed Password in db if decrypted\n                const fetchedData = data.rows;\n                bcrypt.compare(req.body.Password, fetchedData[0].password, (err, success) => {\n                    if (err)\n                    {\n                        res.status(401).json({\n                            Status: '401',\n                            Error: 'Invalid Email or Password'\n                        });\n                    }\n\n                    if (success)\n                    {\n                        // We the Create a user token that user is going to use for Authentication of other routes\n                        // Token takes user details(any), Secret Key and an expiry\n                        \n                        const token = jwt.sign({\n                            Email: fetchedData[0].email\n                        },\n\n                        process.env.JWT_KEY_USER,\n                        {\n                            expiresIn: '2h'\n                        });\n\n                        res.status(200).json({\n                            Status: 200,\n                            Data: {\n                                Fullname: fetchedData[0].fullname,\n                                Email: fetchedData[0].email,\n                                Address: fetchedData[0].address,\n                                Status: fetchedData[0].status\n                            },\n                            Success: 'User Has Successfully Logged In',\n                            Token: token\n                        });\n                    }\n                });\n            }\n\n            else\n            {\n                res.status(401).json({\n                    Status: '401',\n                    Error: 'Invalid Email or Password'\n                });\n            }\n        })\n        .catch((error) => {\n            res.status(401).json({\n                Status: 401,\n                Error: 'Invalid Email or Password'\n            });\n        });\n    }\n\n    if (req.body.isAdmin == 'True')\n    {\n        pool.query(checkQueryAdmin)\n        .then((data) => {\n            if (data.rowCount > 0)\n            {\n                const fetchedData = data.rows;\n                bcrypt.compare(req.body.Password, fetchedData[0].password, (error, success) => {\n                    if (error)\n                    {\n                        res.status(401).json({\n                            Status: '401',\n                            Error: error.message\n                        });\n                    }\n\n                    if (success)\n                    {\n                        const token = jwt.sign({\n                            Email: fetchedData[0].email\n                        },\n\n                        process.env.JWT_KEY_ADMIN,\n                        {\n                            expiresIn: '2h'\n                        });\n\n                        res.status(200).json({\n                            Status: 200,\n                            Data: {\n                                Fullname: fetchedData[0].fullname,\n                                Email: fetchedData[0].email\n                            },\n                            Success: 'Admin Has Successfully Logged In',\n                            Token: token\n                        });\n                    }\n                });\n            }\n\n            else\n            {\n                res.status(401).json({\n                    Status: '401',\n                    Error: 'Invalid Email or Password'\n                });\n            }\n        })\n        .catch((error) => {\n            res.status(401).json({\n                Status: 401,\n                Error: 'Invalid Email or Password'\n            });\n        });\n    }\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1557385196458
  },
  "{\"sourceRoot\":\"/home/kodek-sleuth/Desktop/Quick-credit/Api/Verifications\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/kodek-sleuth/Desktop/Quick-credit\",\"filename\":\"/home/kodek-sleuth/Desktop/Quick-credit/Api/Verifications/verifyUser.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/kodek-sleuth/Desktop/Quick-credit\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/kodek-sleuth/Desktop/Quick-credit/Api/Verifications",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/kodek-sleuth/Desktop/Quick-credit",
      "filename": "/home/kodek-sleuth/Desktop/Quick-credit/Api/Verifications/verifyUser.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/kodek-sleuth/Desktop/Quick-credit",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/kodek-sleuth/Desktop/Quick-credit/Api/Verifications/verifyUser.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/home/kodek-sleuth/Desktop/Quick-credit/Api/Verifications/verifyUser.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/kodek-sleuth/Desktop/Quick-credit/Api/Verifications",
        "sourceFileName": "verifyUser.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar express = require('express');\n\nvar verify = express.Router();\n\nvar verifyUserController = require('../Controllers/verifyFeature');\n\nvar jwtMiddleware = require('../Settings/checkAuthAdmin');\n/**\n* @swagger\n* /api/v1/admin/users/{:Email}/verify:\n*   patch:\n*     security:\n*        - bearerAuth: []\n*     tags:\n*       - Verifications, Approvals & Rejections\n*     name: Admin Verify user\n*     summary: Admin Verify user\n*     parameters:\n*       - name: \":Email\"\n*         in: path\n*         description: Id of Loan\n*         required: true\n*         type: string\n*     responses:\n*       200:\n*         description: Successfully Verified User\n*/\n\n\nverify.patch('/users/:Email/verify', jwtMiddleware, verifyUserController.verifyUser);\nmodule.exports = verify;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInZlcmlmeVVzZXIuanMiXSwibmFtZXMiOlsiZXhwcmVzcyIsInJlcXVpcmUiLCJ2ZXJpZnkiLCJSb3V0ZXIiLCJ2ZXJpZnlVc2VyQ29udHJvbGxlciIsImp3dE1pZGRsZXdhcmUiLCJwYXRjaCIsInZlcmlmeVVzZXIiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiOztBQUNBLElBQU1BLE9BQU8sR0FBR0MsT0FBTyxDQUFDLFNBQUQsQ0FBdkI7O0FBRUEsSUFBTUMsTUFBTSxHQUFHRixPQUFPLENBQUNHLE1BQVIsRUFBZjs7QUFFQSxJQUFNQyxvQkFBb0IsR0FBR0gsT0FBTyxDQUFDLDhCQUFELENBQXBDOztBQUVBLElBQU1JLGFBQWEsR0FBR0osT0FBTyxDQUFDLDRCQUFELENBQTdCO0FBRUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFxQkFDLE1BQU0sQ0FBQ0ksS0FBUCxDQUFhLHNCQUFiLEVBQXFDRCxhQUFyQyxFQUFvREQsb0JBQW9CLENBQUNHLFVBQXpFO0FBRUFDLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQlAsTUFBakIiLCJzb3VyY2VSb290IjoiL2hvbWUva29kZWstc2xldXRoL0Rlc2t0b3AvUXVpY2stY3JlZGl0L0FwaS9WZXJpZmljYXRpb25zIiwic291cmNlc0NvbnRlbnQiOlsiXG5jb25zdCBleHByZXNzID0gcmVxdWlyZSgnZXhwcmVzcycpO1xuXG5jb25zdCB2ZXJpZnkgPSBleHByZXNzLlJvdXRlcigpO1xuXG5jb25zdCB2ZXJpZnlVc2VyQ29udHJvbGxlciA9IHJlcXVpcmUoJy4uL0NvbnRyb2xsZXJzL3ZlcmlmeUZlYXR1cmUnKTtcblxuY29uc3Qgand0TWlkZGxld2FyZSA9IHJlcXVpcmUoJy4uL1NldHRpbmdzL2NoZWNrQXV0aEFkbWluJyk7XG5cbi8qKlxuKiBAc3dhZ2dlclxuKiAvYXBpL3YxL2FkbWluL3VzZXJzL3s6RW1haWx9L3ZlcmlmeTpcbiogICBwYXRjaDpcbiogICAgIHNlY3VyaXR5OlxuKiAgICAgICAgLSBiZWFyZXJBdXRoOiBbXVxuKiAgICAgdGFnczpcbiogICAgICAgLSBWZXJpZmljYXRpb25zLCBBcHByb3ZhbHMgJiBSZWplY3Rpb25zXG4qICAgICBuYW1lOiBBZG1pbiBWZXJpZnkgdXNlclxuKiAgICAgc3VtbWFyeTogQWRtaW4gVmVyaWZ5IHVzZXJcbiogICAgIHBhcmFtZXRlcnM6XG4qICAgICAgIC0gbmFtZTogXCI6RW1haWxcIlxuKiAgICAgICAgIGluOiBwYXRoXG4qICAgICAgICAgZGVzY3JpcHRpb246IElkIG9mIExvYW5cbiogICAgICAgICByZXF1aXJlZDogdHJ1ZVxuKiAgICAgICAgIHR5cGU6IHN0cmluZ1xuKiAgICAgcmVzcG9uc2VzOlxuKiAgICAgICAyMDA6XG4qICAgICAgICAgZGVzY3JpcHRpb246IFN1Y2Nlc3NmdWxseSBWZXJpZmllZCBVc2VyXG4qL1xuXG52ZXJpZnkucGF0Y2goJy91c2Vycy86RW1haWwvdmVyaWZ5Jywgand0TWlkZGxld2FyZSwgdmVyaWZ5VXNlckNvbnRyb2xsZXIudmVyaWZ5VXNlcik7XG5cbm1vZHVsZS5leHBvcnRzID0gdmVyaWZ5O1xuIl19",
    "map": {
      "version": 3,
      "sources": [
        "verifyUser.js"
      ],
      "names": [
        "express",
        "require",
        "verify",
        "Router",
        "verifyUserController",
        "jwtMiddleware",
        "patch",
        "verifyUser",
        "module",
        "exports"
      ],
      "mappings": ";;AACA,IAAMA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;AAEA,IAAMC,MAAM,GAAGF,OAAO,CAACG,MAAR,EAAf;;AAEA,IAAMC,oBAAoB,GAAGH,OAAO,CAAC,8BAAD,CAApC;;AAEA,IAAMI,aAAa,GAAGJ,OAAO,CAAC,4BAAD,CAA7B;AAEA;;;;;;;;;;;;;;;;;;;;;;AAqBAC,MAAM,CAACI,KAAP,CAAa,sBAAb,EAAqCD,aAArC,EAAoDD,oBAAoB,CAACG,UAAzE;AAEAC,MAAM,CAACC,OAAP,GAAiBP,MAAjB",
      "sourceRoot": "/home/kodek-sleuth/Desktop/Quick-credit/Api/Verifications",
      "sourcesContent": [
        "\nconst express = require('express');\n\nconst verify = express.Router();\n\nconst verifyUserController = require('../Controllers/verifyFeature');\n\nconst jwtMiddleware = require('../Settings/checkAuthAdmin');\n\n/**\n* @swagger\n* /api/v1/admin/users/{:Email}/verify:\n*   patch:\n*     security:\n*        - bearerAuth: []\n*     tags:\n*       - Verifications, Approvals & Rejections\n*     name: Admin Verify user\n*     summary: Admin Verify user\n*     parameters:\n*       - name: \":Email\"\n*         in: path\n*         description: Id of Loan\n*         required: true\n*         type: string\n*     responses:\n*       200:\n*         description: Successfully Verified User\n*/\n\nverify.patch('/users/:Email/verify', jwtMiddleware, verifyUserController.verifyUser);\n\nmodule.exports = verify;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1557385196462
  },
  "{\"sourceRoot\":\"/home/kodek-sleuth/Desktop/Quick-credit/Api/Controllers\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/kodek-sleuth/Desktop/Quick-credit\",\"filename\":\"/home/kodek-sleuth/Desktop/Quick-credit/Api/Controllers/verifyFeature.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/kodek-sleuth/Desktop/Quick-credit\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/kodek-sleuth/Desktop/Quick-credit/Api/Controllers",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/kodek-sleuth/Desktop/Quick-credit",
      "filename": "/home/kodek-sleuth/Desktop/Quick-credit/Api/Controllers/verifyFeature.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/kodek-sleuth/Desktop/Quick-credit",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/kodek-sleuth/Desktop/Quick-credit/Api/Controllers/verifyFeature.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/home/kodek-sleuth/Desktop/Quick-credit/Api/Controllers/verifyFeature.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/kodek-sleuth/Desktop/Quick-credit/Api/Controllers",
        "sourceFileName": "verifyFeature.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\n/* eslint-disable brace-style */\n\n/* eslint-disable no-trailing-spaces */\n\n/* eslint-disable comma-dangle */\n\n/* eslint-disable indent */\n\n/* eslint-disable no-unused-vars */\n\n/* eslint-disable object-shorthand */\n\n/* eslint-disable prefer-destructuring */\nvar Pool = require('pg').Pool;\n\nvar connectionString = process.env.QUICK_CREDIT_DB_TEST;\nvar pool = new Pool({\n  connectionString: connectionString\n});\n\nexports.verifyUser = function (req, res, next) {\n  var Email = req.params.Email;\n  var verifyUserQuery = \"Update users SET status='Verified' where email='\".concat(Email, \"'\");\n  pool.query(verifyUserQuery).then(function (result) {\n    pool.query(\"Select * from users where email='\".concat(Email, \"'\")).then(function (data) {\n      if (data.rowCount > 0) {\n        var dataFound = data.rows;\n        res.status(200).json({\n          Status: 200,\n          Data: {\n            Fullname: dataFound[0].fullname,\n            Email: dataFound[0].email,\n            Status: dataFound[0].status,\n            Address: dataFound[0].address\n          },\n          Success: 'Successfully Verified User'\n        });\n      }\n    })[\"catch\"](function (error) {\n      res.status(500).json({\n        Status: '500',\n        Error: 'Failed to Fetch Results'\n      });\n    });\n  })[\"catch\"](function (error) {\n    res.status(500).json({\n      Status: '500',\n      Error: 'Failed to Fetch Results'\n    });\n  });\n};\n\nexports.rejectUser = function (req, res, next) {\n  var Email = req.params.Email;\n  var rejectUserQuery = \"Update users SET status='Rejected' where email='\".concat(Email, \"'\");\n  pool.query(rejectUserQuery).then(function (result) {\n    pool.query(\"Select * from users where email='\".concat(Email, \"'\")).then(function (data) {\n      if (data.rowCount > 0) {\n        var dataFound = data.rows;\n        res.status(200).json({\n          Status: 200,\n          Data: {\n            Fullname: dataFound[0].fullname,\n            Email: dataFound[0].email,\n            Status: dataFound[0].status,\n            Address: dataFound[0].address\n          },\n          Success: 'Successfully Rejected User'\n        });\n      }\n    })[\"catch\"](function (error) {\n      res.status(500).json({\n        Status: '500',\n        Error: 'Failed to Update and Fetch'\n      });\n    });\n  })[\"catch\"](function (error) {\n    res.status(500).json({\n      Status: '500',\n      Error: 'Failed to Update and Fetch'\n    });\n  });\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInZlcmlmeUZlYXR1cmUuanMiXSwibmFtZXMiOlsiUG9vbCIsInJlcXVpcmUiLCJjb25uZWN0aW9uU3RyaW5nIiwicHJvY2VzcyIsImVudiIsIlFVSUNLX0NSRURJVF9EQl9URVNUIiwicG9vbCIsImV4cG9ydHMiLCJ2ZXJpZnlVc2VyIiwicmVxIiwicmVzIiwibmV4dCIsIkVtYWlsIiwicGFyYW1zIiwidmVyaWZ5VXNlclF1ZXJ5IiwicXVlcnkiLCJ0aGVuIiwicmVzdWx0IiwiZGF0YSIsInJvd0NvdW50IiwiZGF0YUZvdW5kIiwicm93cyIsInN0YXR1cyIsImpzb24iLCJTdGF0dXMiLCJEYXRhIiwiRnVsbG5hbWUiLCJmdWxsbmFtZSIsImVtYWlsIiwiQWRkcmVzcyIsImFkZHJlc3MiLCJTdWNjZXNzIiwiZXJyb3IiLCJFcnJvciIsInJlamVjdFVzZXIiLCJyZWplY3RVc2VyUXVlcnkiXSwibWFwcGluZ3MiOiI7O0FBQUE7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7QUFFQSxJQUFNQSxJQUFJLEdBQUdDLE9BQU8sQ0FBQyxJQUFELENBQVAsQ0FBY0QsSUFBM0I7O0FBRUEsSUFBTUUsZ0JBQWdCLEdBQUdDLE9BQU8sQ0FBQ0MsR0FBUixDQUFZQyxvQkFBckM7QUFFQSxJQUFNQyxJQUFJLEdBQUcsSUFBSU4sSUFBSixDQUFTO0FBQUVFLEVBQUFBLGdCQUFnQixFQUFFQTtBQUFwQixDQUFULENBQWI7O0FBRUFLLE9BQU8sQ0FBQ0MsVUFBUixHQUFxQixVQUFDQyxHQUFELEVBQU1DLEdBQU4sRUFBV0MsSUFBWCxFQUFvQjtBQUNyQyxNQUFNQyxLQUFLLEdBQUdILEdBQUcsQ0FBQ0ksTUFBSixDQUFXRCxLQUF6QjtBQUVBLE1BQU1FLGVBQWUsNkRBQXNERixLQUF0RCxNQUFyQjtBQUVBTixFQUFBQSxJQUFJLENBQUNTLEtBQUwsQ0FBV0QsZUFBWCxFQUNDRSxJQURELENBQ00sVUFBQ0MsTUFBRCxFQUFZO0FBQ2RYLElBQUFBLElBQUksQ0FBQ1MsS0FBTCw0Q0FBK0NILEtBQS9DLFFBQ0NJLElBREQsQ0FDTSxVQUFDRSxJQUFELEVBQVU7QUFDWixVQUFJQSxJQUFJLENBQUNDLFFBQUwsR0FBZ0IsQ0FBcEIsRUFDQTtBQUNJLFlBQU1DLFNBQVMsR0FBR0YsSUFBSSxDQUFDRyxJQUF2QjtBQUNBWCxRQUFBQSxHQUFHLENBQUNZLE1BQUosQ0FBVyxHQUFYLEVBQWdCQyxJQUFoQixDQUFxQjtBQUNqQkMsVUFBQUEsTUFBTSxFQUFFLEdBRFM7QUFFakJDLFVBQUFBLElBQUksRUFBRTtBQUNGQyxZQUFBQSxRQUFRLEVBQUVOLFNBQVMsQ0FBQyxDQUFELENBQVQsQ0FBYU8sUUFEckI7QUFFRmYsWUFBQUEsS0FBSyxFQUFFUSxTQUFTLENBQUMsQ0FBRCxDQUFULENBQWFRLEtBRmxCO0FBR0ZKLFlBQUFBLE1BQU0sRUFBRUosU0FBUyxDQUFDLENBQUQsQ0FBVCxDQUFhRSxNQUhuQjtBQUlGTyxZQUFBQSxPQUFPLEVBQUVULFNBQVMsQ0FBQyxDQUFELENBQVQsQ0FBYVU7QUFKcEIsV0FGVztBQVFqQkMsVUFBQUEsT0FBTyxFQUFFO0FBUlEsU0FBckI7QUFVSDtBQUNKLEtBaEJELFdBaUJPLFVBQUNDLEtBQUQsRUFBVztBQUNkdEIsTUFBQUEsR0FBRyxDQUFDWSxNQUFKLENBQVcsR0FBWCxFQUFnQkMsSUFBaEIsQ0FBcUI7QUFDakJDLFFBQUFBLE1BQU0sRUFBRSxLQURTO0FBRWpCUyxRQUFBQSxLQUFLLEVBQUU7QUFGVSxPQUFyQjtBQUlILEtBdEJEO0FBdUJILEdBekJELFdBMEJPLFVBQUNELEtBQUQsRUFBVztBQUNkdEIsSUFBQUEsR0FBRyxDQUFDWSxNQUFKLENBQVcsR0FBWCxFQUFnQkMsSUFBaEIsQ0FBcUI7QUFDakJDLE1BQUFBLE1BQU0sRUFBRSxLQURTO0FBRWpCUyxNQUFBQSxLQUFLLEVBQUU7QUFGVSxLQUFyQjtBQUlILEdBL0JEO0FBZ0NILENBckNEOztBQXVDQTFCLE9BQU8sQ0FBQzJCLFVBQVIsR0FBcUIsVUFBQ3pCLEdBQUQsRUFBTUMsR0FBTixFQUFXQyxJQUFYLEVBQW9CO0FBQ3JDLE1BQU1DLEtBQUssR0FBR0gsR0FBRyxDQUFDSSxNQUFKLENBQVdELEtBQXpCO0FBRUEsTUFBTXVCLGVBQWUsNkRBQXNEdkIsS0FBdEQsTUFBckI7QUFFQU4sRUFBQUEsSUFBSSxDQUFDUyxLQUFMLENBQVdvQixlQUFYLEVBQ0NuQixJQURELENBQ00sVUFBQ0MsTUFBRCxFQUFZO0FBQ2RYLElBQUFBLElBQUksQ0FBQ1MsS0FBTCw0Q0FBK0NILEtBQS9DLFFBQ0NJLElBREQsQ0FDTSxVQUFDRSxJQUFELEVBQVU7QUFDWixVQUFJQSxJQUFJLENBQUNDLFFBQUwsR0FBZ0IsQ0FBcEIsRUFDQTtBQUNJLFlBQU1DLFNBQVMsR0FBR0YsSUFBSSxDQUFDRyxJQUF2QjtBQUNBWCxRQUFBQSxHQUFHLENBQUNZLE1BQUosQ0FBVyxHQUFYLEVBQWdCQyxJQUFoQixDQUFxQjtBQUNqQkMsVUFBQUEsTUFBTSxFQUFFLEdBRFM7QUFFakJDLFVBQUFBLElBQUksRUFBRTtBQUNGQyxZQUFBQSxRQUFRLEVBQUVOLFNBQVMsQ0FBQyxDQUFELENBQVQsQ0FBYU8sUUFEckI7QUFFRmYsWUFBQUEsS0FBSyxFQUFFUSxTQUFTLENBQUMsQ0FBRCxDQUFULENBQWFRLEtBRmxCO0FBR0ZKLFlBQUFBLE1BQU0sRUFBRUosU0FBUyxDQUFDLENBQUQsQ0FBVCxDQUFhRSxNQUhuQjtBQUlGTyxZQUFBQSxPQUFPLEVBQUVULFNBQVMsQ0FBQyxDQUFELENBQVQsQ0FBYVU7QUFKcEIsV0FGVztBQVFqQkMsVUFBQUEsT0FBTyxFQUFFO0FBUlEsU0FBckI7QUFVSDtBQUNKLEtBaEJELFdBaUJPLFVBQUNDLEtBQUQsRUFBVztBQUNkdEIsTUFBQUEsR0FBRyxDQUFDWSxNQUFKLENBQVcsR0FBWCxFQUFnQkMsSUFBaEIsQ0FBcUI7QUFDakJDLFFBQUFBLE1BQU0sRUFBRSxLQURTO0FBRWpCUyxRQUFBQSxLQUFLLEVBQUU7QUFGVSxPQUFyQjtBQUlILEtBdEJEO0FBdUJILEdBekJELFdBMEJPLFVBQUNELEtBQUQsRUFBVztBQUNkdEIsSUFBQUEsR0FBRyxDQUFDWSxNQUFKLENBQVcsR0FBWCxFQUFnQkMsSUFBaEIsQ0FBcUI7QUFDakJDLE1BQUFBLE1BQU0sRUFBRSxLQURTO0FBRWpCUyxNQUFBQSxLQUFLLEVBQUU7QUFGVSxLQUFyQjtBQUlILEdBL0JEO0FBZ0NILENBckNEIiwic291cmNlUm9vdCI6Ii9ob21lL2tvZGVrLXNsZXV0aC9EZXNrdG9wL1F1aWNrLWNyZWRpdC9BcGkvQ29udHJvbGxlcnMiLCJzb3VyY2VzQ29udGVudCI6WyIvKiBlc2xpbnQtZGlzYWJsZSBicmFjZS1zdHlsZSAqL1xuLyogZXNsaW50LWRpc2FibGUgbm8tdHJhaWxpbmctc3BhY2VzICovXG4vKiBlc2xpbnQtZGlzYWJsZSBjb21tYS1kYW5nbGUgKi9cbi8qIGVzbGludC1kaXNhYmxlIGluZGVudCAqL1xuLyogZXNsaW50LWRpc2FibGUgbm8tdW51c2VkLXZhcnMgKi9cbi8qIGVzbGludC1kaXNhYmxlIG9iamVjdC1zaG9ydGhhbmQgKi9cbi8qIGVzbGludC1kaXNhYmxlIHByZWZlci1kZXN0cnVjdHVyaW5nICovXG5cbmNvbnN0IFBvb2wgPSByZXF1aXJlKCdwZycpLlBvb2w7XG5cbmNvbnN0IGNvbm5lY3Rpb25TdHJpbmcgPSBwcm9jZXNzLmVudi5RVUlDS19DUkVESVRfREJfVEVTVDtcblxuY29uc3QgcG9vbCA9IG5ldyBQb29sKHsgY29ubmVjdGlvblN0cmluZzogY29ubmVjdGlvblN0cmluZyB9KTtcblxuZXhwb3J0cy52ZXJpZnlVc2VyID0gKHJlcSwgcmVzLCBuZXh0KSA9PiB7XG4gICAgY29uc3QgRW1haWwgPSByZXEucGFyYW1zLkVtYWlsO1xuXG4gICAgY29uc3QgdmVyaWZ5VXNlclF1ZXJ5ID0gYFVwZGF0ZSB1c2VycyBTRVQgc3RhdHVzPSdWZXJpZmllZCcgd2hlcmUgZW1haWw9JyR7RW1haWx9J2A7XG5cbiAgICBwb29sLnF1ZXJ5KHZlcmlmeVVzZXJRdWVyeSlcbiAgICAudGhlbigocmVzdWx0KSA9PiB7XG4gICAgICAgIHBvb2wucXVlcnkoYFNlbGVjdCAqIGZyb20gdXNlcnMgd2hlcmUgZW1haWw9JyR7RW1haWx9J2ApXG4gICAgICAgIC50aGVuKChkYXRhKSA9PiB7XG4gICAgICAgICAgICBpZiAoZGF0YS5yb3dDb3VudCA+IDApXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgY29uc3QgZGF0YUZvdW5kID0gZGF0YS5yb3dzO1xuICAgICAgICAgICAgICAgIHJlcy5zdGF0dXMoMjAwKS5qc29uKHtcbiAgICAgICAgICAgICAgICAgICAgU3RhdHVzOiAyMDAsXG4gICAgICAgICAgICAgICAgICAgIERhdGE6IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIEZ1bGxuYW1lOiBkYXRhRm91bmRbMF0uZnVsbG5hbWUsXG4gICAgICAgICAgICAgICAgICAgICAgICBFbWFpbDogZGF0YUZvdW5kWzBdLmVtYWlsLFxuICAgICAgICAgICAgICAgICAgICAgICAgU3RhdHVzOiBkYXRhRm91bmRbMF0uc3RhdHVzLFxuICAgICAgICAgICAgICAgICAgICAgICAgQWRkcmVzczogZGF0YUZvdW5kWzBdLmFkZHJlc3NcbiAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgU3VjY2VzczogJ1N1Y2Nlc3NmdWxseSBWZXJpZmllZCBVc2VyJ1xuICAgICAgICAgICAgICAgIH0pOyBcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSlcbiAgICAgICAgLmNhdGNoKChlcnJvcikgPT4ge1xuICAgICAgICAgICAgcmVzLnN0YXR1cyg1MDApLmpzb24oe1xuICAgICAgICAgICAgICAgIFN0YXR1czogJzUwMCcsXG4gICAgICAgICAgICAgICAgRXJyb3I6ICdGYWlsZWQgdG8gRmV0Y2ggUmVzdWx0cydcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9KTtcbiAgICB9KVxuICAgIC5jYXRjaCgoZXJyb3IpID0+IHtcbiAgICAgICAgcmVzLnN0YXR1cyg1MDApLmpzb24oe1xuICAgICAgICAgICAgU3RhdHVzOiAnNTAwJyxcbiAgICAgICAgICAgIEVycm9yOiAnRmFpbGVkIHRvIEZldGNoIFJlc3VsdHMnXG4gICAgICAgIH0pO1xuICAgIH0pO1xufTtcblxuZXhwb3J0cy5yZWplY3RVc2VyID0gKHJlcSwgcmVzLCBuZXh0KSA9PiB7XG4gICAgY29uc3QgRW1haWwgPSByZXEucGFyYW1zLkVtYWlsO1xuXG4gICAgY29uc3QgcmVqZWN0VXNlclF1ZXJ5ID0gYFVwZGF0ZSB1c2VycyBTRVQgc3RhdHVzPSdSZWplY3RlZCcgd2hlcmUgZW1haWw9JyR7RW1haWx9J2A7XG5cbiAgICBwb29sLnF1ZXJ5KHJlamVjdFVzZXJRdWVyeSlcbiAgICAudGhlbigocmVzdWx0KSA9PiB7XG4gICAgICAgIHBvb2wucXVlcnkoYFNlbGVjdCAqIGZyb20gdXNlcnMgd2hlcmUgZW1haWw9JyR7RW1haWx9J2ApXG4gICAgICAgIC50aGVuKChkYXRhKSA9PiB7XG4gICAgICAgICAgICBpZiAoZGF0YS5yb3dDb3VudCA+IDApXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgY29uc3QgZGF0YUZvdW5kID0gZGF0YS5yb3dzO1xuICAgICAgICAgICAgICAgIHJlcy5zdGF0dXMoMjAwKS5qc29uKHtcbiAgICAgICAgICAgICAgICAgICAgU3RhdHVzOiAyMDAsXG4gICAgICAgICAgICAgICAgICAgIERhdGE6IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIEZ1bGxuYW1lOiBkYXRhRm91bmRbMF0uZnVsbG5hbWUsXG4gICAgICAgICAgICAgICAgICAgICAgICBFbWFpbDogZGF0YUZvdW5kWzBdLmVtYWlsLFxuICAgICAgICAgICAgICAgICAgICAgICAgU3RhdHVzOiBkYXRhRm91bmRbMF0uc3RhdHVzLFxuICAgICAgICAgICAgICAgICAgICAgICAgQWRkcmVzczogZGF0YUZvdW5kWzBdLmFkZHJlc3NcbiAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgU3VjY2VzczogJ1N1Y2Nlc3NmdWxseSBSZWplY3RlZCBVc2VyJ1xuICAgICAgICAgICAgICAgIH0pOyBcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSlcbiAgICAgICAgLmNhdGNoKChlcnJvcikgPT4ge1xuICAgICAgICAgICAgcmVzLnN0YXR1cyg1MDApLmpzb24oe1xuICAgICAgICAgICAgICAgIFN0YXR1czogJzUwMCcsXG4gICAgICAgICAgICAgICAgRXJyb3I6ICdGYWlsZWQgdG8gVXBkYXRlIGFuZCBGZXRjaCdcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9KTtcbiAgICB9KVxuICAgIC5jYXRjaCgoZXJyb3IpID0+IHtcbiAgICAgICAgcmVzLnN0YXR1cyg1MDApLmpzb24oe1xuICAgICAgICAgICAgU3RhdHVzOiAnNTAwJyxcbiAgICAgICAgICAgIEVycm9yOiAnRmFpbGVkIHRvIFVwZGF0ZSBhbmQgRmV0Y2gnXG4gICAgICAgIH0pO1xuICAgIH0pO1xufTtcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "verifyFeature.js"
      ],
      "names": [
        "Pool",
        "require",
        "connectionString",
        "process",
        "env",
        "QUICK_CREDIT_DB_TEST",
        "pool",
        "exports",
        "verifyUser",
        "req",
        "res",
        "next",
        "Email",
        "params",
        "verifyUserQuery",
        "query",
        "then",
        "result",
        "data",
        "rowCount",
        "dataFound",
        "rows",
        "status",
        "json",
        "Status",
        "Data",
        "Fullname",
        "fullname",
        "email",
        "Address",
        "address",
        "Success",
        "error",
        "Error",
        "rejectUser",
        "rejectUserQuery"
      ],
      "mappings": ";;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;AAEA,IAAMA,IAAI,GAAGC,OAAO,CAAC,IAAD,CAAP,CAAcD,IAA3B;;AAEA,IAAME,gBAAgB,GAAGC,OAAO,CAACC,GAAR,CAAYC,oBAArC;AAEA,IAAMC,IAAI,GAAG,IAAIN,IAAJ,CAAS;AAAEE,EAAAA,gBAAgB,EAAEA;AAApB,CAAT,CAAb;;AAEAK,OAAO,CAACC,UAAR,GAAqB,UAACC,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AACrC,MAAMC,KAAK,GAAGH,GAAG,CAACI,MAAJ,CAAWD,KAAzB;AAEA,MAAME,eAAe,6DAAsDF,KAAtD,MAArB;AAEAN,EAAAA,IAAI,CAACS,KAAL,CAAWD,eAAX,EACCE,IADD,CACM,UAACC,MAAD,EAAY;AACdX,IAAAA,IAAI,CAACS,KAAL,4CAA+CH,KAA/C,QACCI,IADD,CACM,UAACE,IAAD,EAAU;AACZ,UAAIA,IAAI,CAACC,QAAL,GAAgB,CAApB,EACA;AACI,YAAMC,SAAS,GAAGF,IAAI,CAACG,IAAvB;AACAX,QAAAA,GAAG,CAACY,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACjBC,UAAAA,MAAM,EAAE,GADS;AAEjBC,UAAAA,IAAI,EAAE;AACFC,YAAAA,QAAQ,EAAEN,SAAS,CAAC,CAAD,CAAT,CAAaO,QADrB;AAEFf,YAAAA,KAAK,EAAEQ,SAAS,CAAC,CAAD,CAAT,CAAaQ,KAFlB;AAGFJ,YAAAA,MAAM,EAAEJ,SAAS,CAAC,CAAD,CAAT,CAAaE,MAHnB;AAIFO,YAAAA,OAAO,EAAET,SAAS,CAAC,CAAD,CAAT,CAAaU;AAJpB,WAFW;AAQjBC,UAAAA,OAAO,EAAE;AARQ,SAArB;AAUH;AACJ,KAhBD,WAiBO,UAACC,KAAD,EAAW;AACdtB,MAAAA,GAAG,CAACY,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACjBC,QAAAA,MAAM,EAAE,KADS;AAEjBS,QAAAA,KAAK,EAAE;AAFU,OAArB;AAIH,KAtBD;AAuBH,GAzBD,WA0BO,UAACD,KAAD,EAAW;AACdtB,IAAAA,GAAG,CAACY,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACjBC,MAAAA,MAAM,EAAE,KADS;AAEjBS,MAAAA,KAAK,EAAE;AAFU,KAArB;AAIH,GA/BD;AAgCH,CArCD;;AAuCA1B,OAAO,CAAC2B,UAAR,GAAqB,UAACzB,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AACrC,MAAMC,KAAK,GAAGH,GAAG,CAACI,MAAJ,CAAWD,KAAzB;AAEA,MAAMuB,eAAe,6DAAsDvB,KAAtD,MAArB;AAEAN,EAAAA,IAAI,CAACS,KAAL,CAAWoB,eAAX,EACCnB,IADD,CACM,UAACC,MAAD,EAAY;AACdX,IAAAA,IAAI,CAACS,KAAL,4CAA+CH,KAA/C,QACCI,IADD,CACM,UAACE,IAAD,EAAU;AACZ,UAAIA,IAAI,CAACC,QAAL,GAAgB,CAApB,EACA;AACI,YAAMC,SAAS,GAAGF,IAAI,CAACG,IAAvB;AACAX,QAAAA,GAAG,CAACY,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACjBC,UAAAA,MAAM,EAAE,GADS;AAEjBC,UAAAA,IAAI,EAAE;AACFC,YAAAA,QAAQ,EAAEN,SAAS,CAAC,CAAD,CAAT,CAAaO,QADrB;AAEFf,YAAAA,KAAK,EAAEQ,SAAS,CAAC,CAAD,CAAT,CAAaQ,KAFlB;AAGFJ,YAAAA,MAAM,EAAEJ,SAAS,CAAC,CAAD,CAAT,CAAaE,MAHnB;AAIFO,YAAAA,OAAO,EAAET,SAAS,CAAC,CAAD,CAAT,CAAaU;AAJpB,WAFW;AAQjBC,UAAAA,OAAO,EAAE;AARQ,SAArB;AAUH;AACJ,KAhBD,WAiBO,UAACC,KAAD,EAAW;AACdtB,MAAAA,GAAG,CAACY,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACjBC,QAAAA,MAAM,EAAE,KADS;AAEjBS,QAAAA,KAAK,EAAE;AAFU,OAArB;AAIH,KAtBD;AAuBH,GAzBD,WA0BO,UAACD,KAAD,EAAW;AACdtB,IAAAA,GAAG,CAACY,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACjBC,MAAAA,MAAM,EAAE,KADS;AAEjBS,MAAAA,KAAK,EAAE;AAFU,KAArB;AAIH,GA/BD;AAgCH,CArCD",
      "sourceRoot": "/home/kodek-sleuth/Desktop/Quick-credit/Api/Controllers",
      "sourcesContent": [
        "/* eslint-disable brace-style */\n/* eslint-disable no-trailing-spaces */\n/* eslint-disable comma-dangle */\n/* eslint-disable indent */\n/* eslint-disable no-unused-vars */\n/* eslint-disable object-shorthand */\n/* eslint-disable prefer-destructuring */\n\nconst Pool = require('pg').Pool;\n\nconst connectionString = process.env.QUICK_CREDIT_DB_TEST;\n\nconst pool = new Pool({ connectionString: connectionString });\n\nexports.verifyUser = (req, res, next) => {\n    const Email = req.params.Email;\n\n    const verifyUserQuery = `Update users SET status='Verified' where email='${Email}'`;\n\n    pool.query(verifyUserQuery)\n    .then((result) => {\n        pool.query(`Select * from users where email='${Email}'`)\n        .then((data) => {\n            if (data.rowCount > 0)\n            {\n                const dataFound = data.rows;\n                res.status(200).json({\n                    Status: 200,\n                    Data: {\n                        Fullname: dataFound[0].fullname,\n                        Email: dataFound[0].email,\n                        Status: dataFound[0].status,\n                        Address: dataFound[0].address\n                    },\n                    Success: 'Successfully Verified User'\n                }); \n            }\n        })\n        .catch((error) => {\n            res.status(500).json({\n                Status: '500',\n                Error: 'Failed to Fetch Results'\n            });\n        });\n    })\n    .catch((error) => {\n        res.status(500).json({\n            Status: '500',\n            Error: 'Failed to Fetch Results'\n        });\n    });\n};\n\nexports.rejectUser = (req, res, next) => {\n    const Email = req.params.Email;\n\n    const rejectUserQuery = `Update users SET status='Rejected' where email='${Email}'`;\n\n    pool.query(rejectUserQuery)\n    .then((result) => {\n        pool.query(`Select * from users where email='${Email}'`)\n        .then((data) => {\n            if (data.rowCount > 0)\n            {\n                const dataFound = data.rows;\n                res.status(200).json({\n                    Status: 200,\n                    Data: {\n                        Fullname: dataFound[0].fullname,\n                        Email: dataFound[0].email,\n                        Status: dataFound[0].status,\n                        Address: dataFound[0].address\n                    },\n                    Success: 'Successfully Rejected User'\n                }); \n            }\n        })\n        .catch((error) => {\n            res.status(500).json({\n                Status: '500',\n                Error: 'Failed to Update and Fetch'\n            });\n        });\n    })\n    .catch((error) => {\n        res.status(500).json({\n            Status: '500',\n            Error: 'Failed to Update and Fetch'\n        });\n    });\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1557385196458
  },
  "{\"sourceRoot\":\"/home/kodek-sleuth/Desktop/Quick-credit/Api/Settings\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/kodek-sleuth/Desktop/Quick-credit\",\"filename\":\"/home/kodek-sleuth/Desktop/Quick-credit/Api/Settings/checkAuthAdmin.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/kodek-sleuth/Desktop/Quick-credit\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/kodek-sleuth/Desktop/Quick-credit/Api/Settings",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/kodek-sleuth/Desktop/Quick-credit",
      "filename": "/home/kodek-sleuth/Desktop/Quick-credit/Api/Settings/checkAuthAdmin.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/kodek-sleuth/Desktop/Quick-credit",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/kodek-sleuth/Desktop/Quick-credit/Api/Settings/checkAuthAdmin.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/home/kodek-sleuth/Desktop/Quick-credit/Api/Settings/checkAuthAdmin.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/kodek-sleuth/Desktop/Quick-credit/Api/Settings",
        "sourceFileName": "checkAuthAdmin.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\n/* eslint-disable indent */\n\n/* eslint-disable brace-style */\nvar jwt = require('jsonwebtoken');\n\nmodule.exports = function (req, res, next) {\n  try {\n    var token = req.headers.authorization.split(' ')[1];\n    var decode = jwt.verify(token, process.env.JWT_KEY_ADMIN);\n    req.userData = decode;\n    next();\n  } catch (error) {\n    res.status(401).json({\n      Message: 'Admin Authorisation required to access resource'\n    });\n  }\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNoZWNrQXV0aEFkbWluLmpzIl0sIm5hbWVzIjpbImp3dCIsInJlcXVpcmUiLCJtb2R1bGUiLCJleHBvcnRzIiwicmVxIiwicmVzIiwibmV4dCIsInRva2VuIiwiaGVhZGVycyIsImF1dGhvcml6YXRpb24iLCJzcGxpdCIsImRlY29kZSIsInZlcmlmeSIsInByb2Nlc3MiLCJlbnYiLCJKV1RfS0VZX0FETUlOIiwidXNlckRhdGEiLCJlcnJvciIsInN0YXR1cyIsImpzb24iLCJNZXNzYWdlIl0sIm1hcHBpbmdzIjoiOztBQUFBOztBQUNBO0FBQ0EsSUFBTUEsR0FBRyxHQUFHQyxPQUFPLENBQUMsY0FBRCxDQUFuQjs7QUFFQUMsTUFBTSxDQUFDQyxPQUFQLEdBQWlCLFVBQUNDLEdBQUQsRUFBTUMsR0FBTixFQUFXQyxJQUFYLEVBQW9CO0FBQ2pDLE1BQ0E7QUFDSSxRQUFNQyxLQUFLLEdBQUdILEdBQUcsQ0FBQ0ksT0FBSixDQUFZQyxhQUFaLENBQTBCQyxLQUExQixDQUFnQyxHQUFoQyxFQUFxQyxDQUFyQyxDQUFkO0FBQ0EsUUFBTUMsTUFBTSxHQUFHWCxHQUFHLENBQUNZLE1BQUosQ0FBV0wsS0FBWCxFQUFrQk0sT0FBTyxDQUFDQyxHQUFSLENBQVlDLGFBQTlCLENBQWY7QUFDQVgsSUFBQUEsR0FBRyxDQUFDWSxRQUFKLEdBQWVMLE1BQWY7QUFDQUwsSUFBQUEsSUFBSTtBQUNQLEdBTkQsQ0FRQSxPQUFPVyxLQUFQLEVBQ0E7QUFDSVosSUFBQUEsR0FBRyxDQUFDYSxNQUFKLENBQVcsR0FBWCxFQUFnQkMsSUFBaEIsQ0FBcUI7QUFDakJDLE1BQUFBLE9BQU8sRUFBRTtBQURRLEtBQXJCO0FBR0g7QUFDSixDQWZEIiwic291cmNlUm9vdCI6Ii9ob21lL2tvZGVrLXNsZXV0aC9EZXNrdG9wL1F1aWNrLWNyZWRpdC9BcGkvU2V0dGluZ3MiLCJzb3VyY2VzQ29udGVudCI6WyIvKiBlc2xpbnQtZGlzYWJsZSBpbmRlbnQgKi9cbi8qIGVzbGludC1kaXNhYmxlIGJyYWNlLXN0eWxlICovXG5jb25zdCBqd3QgPSByZXF1aXJlKCdqc29ud2VidG9rZW4nKTtcblxubW9kdWxlLmV4cG9ydHMgPSAocmVxLCByZXMsIG5leHQpID0+IHtcbiAgICB0cnlcbiAgICB7XG4gICAgICAgIGNvbnN0IHRva2VuID0gcmVxLmhlYWRlcnMuYXV0aG9yaXphdGlvbi5zcGxpdCgnICcpWzFdO1xuICAgICAgICBjb25zdCBkZWNvZGUgPSBqd3QudmVyaWZ5KHRva2VuLCBwcm9jZXNzLmVudi5KV1RfS0VZX0FETUlOKTtcbiAgICAgICAgcmVxLnVzZXJEYXRhID0gZGVjb2RlO1xuICAgICAgICBuZXh0KCk7XG4gICAgfVxuXG4gICAgY2F0Y2ggKGVycm9yKVxuICAgIHtcbiAgICAgICAgcmVzLnN0YXR1cyg0MDEpLmpzb24oe1xuICAgICAgICAgICAgTWVzc2FnZTogJ0FkbWluIEF1dGhvcmlzYXRpb24gcmVxdWlyZWQgdG8gYWNjZXNzIHJlc291cmNlJyxcbiAgICAgICAgfSk7XG4gICAgfVxufTtcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "checkAuthAdmin.js"
      ],
      "names": [
        "jwt",
        "require",
        "module",
        "exports",
        "req",
        "res",
        "next",
        "token",
        "headers",
        "authorization",
        "split",
        "decode",
        "verify",
        "process",
        "env",
        "JWT_KEY_ADMIN",
        "userData",
        "error",
        "status",
        "json",
        "Message"
      ],
      "mappings": ";;AAAA;;AACA;AACA,IAAMA,GAAG,GAAGC,OAAO,CAAC,cAAD,CAAnB;;AAEAC,MAAM,CAACC,OAAP,GAAiB,UAACC,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AACjC,MACA;AACI,QAAMC,KAAK,GAAGH,GAAG,CAACI,OAAJ,CAAYC,aAAZ,CAA0BC,KAA1B,CAAgC,GAAhC,EAAqC,CAArC,CAAd;AACA,QAAMC,MAAM,GAAGX,GAAG,CAACY,MAAJ,CAAWL,KAAX,EAAkBM,OAAO,CAACC,GAAR,CAAYC,aAA9B,CAAf;AACAX,IAAAA,GAAG,CAACY,QAAJ,GAAeL,MAAf;AACAL,IAAAA,IAAI;AACP,GAND,CAQA,OAAOW,KAAP,EACA;AACIZ,IAAAA,GAAG,CAACa,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACjBC,MAAAA,OAAO,EAAE;AADQ,KAArB;AAGH;AACJ,CAfD",
      "sourceRoot": "/home/kodek-sleuth/Desktop/Quick-credit/Api/Settings",
      "sourcesContent": [
        "/* eslint-disable indent */\n/* eslint-disable brace-style */\nconst jwt = require('jsonwebtoken');\n\nmodule.exports = (req, res, next) => {\n    try\n    {\n        const token = req.headers.authorization.split(' ')[1];\n        const decode = jwt.verify(token, process.env.JWT_KEY_ADMIN);\n        req.userData = decode;\n        next();\n    }\n\n    catch (error)\n    {\n        res.status(401).json({\n            Message: 'Admin Authorisation required to access resource',\n        });\n    }\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1556948092673
  },
  "{\"sourceRoot\":\"/home/kodek-sleuth/Desktop/Quick-credit/Api/Verifications\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/kodek-sleuth/Desktop/Quick-credit\",\"filename\":\"/home/kodek-sleuth/Desktop/Quick-credit/Api/Verifications/rejectUser.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/kodek-sleuth/Desktop/Quick-credit\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/kodek-sleuth/Desktop/Quick-credit/Api/Verifications",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/kodek-sleuth/Desktop/Quick-credit",
      "filename": "/home/kodek-sleuth/Desktop/Quick-credit/Api/Verifications/rejectUser.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/kodek-sleuth/Desktop/Quick-credit",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/kodek-sleuth/Desktop/Quick-credit/Api/Verifications/rejectUser.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/home/kodek-sleuth/Desktop/Quick-credit/Api/Verifications/rejectUser.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/kodek-sleuth/Desktop/Quick-credit/Api/Verifications",
        "sourceFileName": "rejectUser.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar express = require('express');\n\nvar reject = express.Router();\n\nvar rejectUserController = require('../Controllers/verifyFeature');\n\nvar jwtMiddleware = require('../Settings/checkAuthAdmin');\n/**\n* @swagger\n* /api/v1/admin/users/{:Email}/reject:\n*   patch:\n*     security:\n*        - bearerAuth: []\n*     tags:\n*       - Verifications, Approvals & Rejections\n*     name: Admin Reject user\n*     summary: Admin Reject user\n*     parameters:\n*       - name: \":Email\"\n*         in: path\n*         description: Id of Loan\n*         required: true\n*         type: string\n*     responses:\n*       200:\n*         description: Successfully Rejected User\n*/\n\n\nreject.patch('/:Email/reject', jwtMiddleware, rejectUserController.rejectUser);\nmodule.exports = reject;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJlamVjdFVzZXIuanMiXSwibmFtZXMiOlsiZXhwcmVzcyIsInJlcXVpcmUiLCJyZWplY3QiLCJSb3V0ZXIiLCJyZWplY3RVc2VyQ29udHJvbGxlciIsImp3dE1pZGRsZXdhcmUiLCJwYXRjaCIsInJlamVjdFVzZXIiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiOztBQUFBLElBQU1BLE9BQU8sR0FBR0MsT0FBTyxDQUFDLFNBQUQsQ0FBdkI7O0FBRUEsSUFBTUMsTUFBTSxHQUFHRixPQUFPLENBQUNHLE1BQVIsRUFBZjs7QUFFQSxJQUFNQyxvQkFBb0IsR0FBR0gsT0FBTyxDQUFDLDhCQUFELENBQXBDOztBQUVBLElBQU1JLGFBQWEsR0FBR0osT0FBTyxDQUFDLDRCQUFELENBQTdCO0FBRUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFxQkFDLE1BQU0sQ0FBQ0ksS0FBUCxDQUFhLGdCQUFiLEVBQStCRCxhQUEvQixFQUE4Q0Qsb0JBQW9CLENBQUNHLFVBQW5FO0FBRUFDLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQlAsTUFBakIiLCJzb3VyY2VSb290IjoiL2hvbWUva29kZWstc2xldXRoL0Rlc2t0b3AvUXVpY2stY3JlZGl0L0FwaS9WZXJpZmljYXRpb25zIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgZXhwcmVzcyA9IHJlcXVpcmUoJ2V4cHJlc3MnKTtcblxuY29uc3QgcmVqZWN0ID0gZXhwcmVzcy5Sb3V0ZXIoKTtcblxuY29uc3QgcmVqZWN0VXNlckNvbnRyb2xsZXIgPSByZXF1aXJlKCcuLi9Db250cm9sbGVycy92ZXJpZnlGZWF0dXJlJyk7XG5cbmNvbnN0IGp3dE1pZGRsZXdhcmUgPSByZXF1aXJlKCcuLi9TZXR0aW5ncy9jaGVja0F1dGhBZG1pbicpO1xuXG4vKipcbiogQHN3YWdnZXJcbiogL2FwaS92MS9hZG1pbi91c2Vycy97OkVtYWlsfS9yZWplY3Q6XG4qICAgcGF0Y2g6XG4qICAgICBzZWN1cml0eTpcbiogICAgICAgIC0gYmVhcmVyQXV0aDogW11cbiogICAgIHRhZ3M6XG4qICAgICAgIC0gVmVyaWZpY2F0aW9ucywgQXBwcm92YWxzICYgUmVqZWN0aW9uc1xuKiAgICAgbmFtZTogQWRtaW4gUmVqZWN0IHVzZXJcbiogICAgIHN1bW1hcnk6IEFkbWluIFJlamVjdCB1c2VyXG4qICAgICBwYXJhbWV0ZXJzOlxuKiAgICAgICAtIG5hbWU6IFwiOkVtYWlsXCJcbiogICAgICAgICBpbjogcGF0aFxuKiAgICAgICAgIGRlc2NyaXB0aW9uOiBJZCBvZiBMb2FuXG4qICAgICAgICAgcmVxdWlyZWQ6IHRydWVcbiogICAgICAgICB0eXBlOiBzdHJpbmdcbiogICAgIHJlc3BvbnNlczpcbiogICAgICAgMjAwOlxuKiAgICAgICAgIGRlc2NyaXB0aW9uOiBTdWNjZXNzZnVsbHkgUmVqZWN0ZWQgVXNlclxuKi9cblxucmVqZWN0LnBhdGNoKCcvOkVtYWlsL3JlamVjdCcsIGp3dE1pZGRsZXdhcmUsIHJlamVjdFVzZXJDb250cm9sbGVyLnJlamVjdFVzZXIpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IHJlamVjdDtcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "rejectUser.js"
      ],
      "names": [
        "express",
        "require",
        "reject",
        "Router",
        "rejectUserController",
        "jwtMiddleware",
        "patch",
        "rejectUser",
        "module",
        "exports"
      ],
      "mappings": ";;AAAA,IAAMA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;AAEA,IAAMC,MAAM,GAAGF,OAAO,CAACG,MAAR,EAAf;;AAEA,IAAMC,oBAAoB,GAAGH,OAAO,CAAC,8BAAD,CAApC;;AAEA,IAAMI,aAAa,GAAGJ,OAAO,CAAC,4BAAD,CAA7B;AAEA;;;;;;;;;;;;;;;;;;;;;;AAqBAC,MAAM,CAACI,KAAP,CAAa,gBAAb,EAA+BD,aAA/B,EAA8CD,oBAAoB,CAACG,UAAnE;AAEAC,MAAM,CAACC,OAAP,GAAiBP,MAAjB",
      "sourceRoot": "/home/kodek-sleuth/Desktop/Quick-credit/Api/Verifications",
      "sourcesContent": [
        "const express = require('express');\n\nconst reject = express.Router();\n\nconst rejectUserController = require('../Controllers/verifyFeature');\n\nconst jwtMiddleware = require('../Settings/checkAuthAdmin');\n\n/**\n* @swagger\n* /api/v1/admin/users/{:Email}/reject:\n*   patch:\n*     security:\n*        - bearerAuth: []\n*     tags:\n*       - Verifications, Approvals & Rejections\n*     name: Admin Reject user\n*     summary: Admin Reject user\n*     parameters:\n*       - name: \":Email\"\n*         in: path\n*         description: Id of Loan\n*         required: true\n*         type: string\n*     responses:\n*       200:\n*         description: Successfully Rejected User\n*/\n\nreject.patch('/:Email/reject', jwtMiddleware, rejectUserController.rejectUser);\n\nmodule.exports = reject;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1557385196462
  },
  "{\"sourceRoot\":\"/home/kodek-sleuth/Desktop/Quick-credit/Api/Loans\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/kodek-sleuth/Desktop/Quick-credit\",\"filename\":\"/home/kodek-sleuth/Desktop/Quick-credit/Api/Loans/applyLoan.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/kodek-sleuth/Desktop/Quick-credit\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/kodek-sleuth/Desktop/Quick-credit/Api/Loans",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/kodek-sleuth/Desktop/Quick-credit",
      "filename": "/home/kodek-sleuth/Desktop/Quick-credit/Api/Loans/applyLoan.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/kodek-sleuth/Desktop/Quick-credit",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/kodek-sleuth/Desktop/Quick-credit/Api/Loans/applyLoan.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/home/kodek-sleuth/Desktop/Quick-credit/Api/Loans/applyLoan.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/kodek-sleuth/Desktop/Quick-credit/Api/Loans",
        "sourceFileName": "applyLoan.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar express = require('express');\n\nvar reqLoan = express.Router();\n\nvar reqLoanController = require('../Controllers/applyLoanController'); // Middleware for checking Auth and Access Rights\n\n\nvar jwtMiddleware = require('../Settings/checkAuthUser');\n/**\n* @swagger\n* /api/v1/user/loans/apply:\n*   post:\n*     security:\n*        - bearerAuth: []\n*     tags:\n*       - User\n*     name: Apply for a Loan\n*     summary: Apply for a Loan\n*     consumes:\n*       - application/json\n*     parameters:\n*       - name: body\n*         in: body\n*         properties:\n*           Fullname:\n*             type: string\n*             example: Mugerwa Joseph\n*           Email:\n*             type: string\n*             example: mugerwa@gmail.com\n*           Tenor:\n*             type: integer\n*             example: 5\n*           Amount:\n*             type: integer\n*             example: 500000\n*         required:\n*           - FullName\n*           - Email\n*           - Tenor\n*           - Amount\n*     responses:\n*       201:\n*         description: Customer Successfully Signed Up\n*       500:\n*         description: Failed To Authenticate\n*/\n\n\nreqLoan.post('/loans/apply', jwtMiddleware, reqLoanController.applyLoan);\nmodule.exports = reqLoan;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcGx5TG9hbi5qcyJdLCJuYW1lcyI6WyJleHByZXNzIiwicmVxdWlyZSIsInJlcUxvYW4iLCJSb3V0ZXIiLCJyZXFMb2FuQ29udHJvbGxlciIsImp3dE1pZGRsZXdhcmUiLCJwb3N0IiwiYXBwbHlMb2FuIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6Ijs7QUFBQSxJQUFNQSxPQUFPLEdBQUdDLE9BQU8sQ0FBQyxTQUFELENBQXZCOztBQUVBLElBQU1DLE9BQU8sR0FBR0YsT0FBTyxDQUFDRyxNQUFSLEVBQWhCOztBQUVBLElBQU1DLGlCQUFpQixHQUFHSCxPQUFPLENBQUMsb0NBQUQsQ0FBakMsQyxDQUVBOzs7QUFDQSxJQUFNSSxhQUFhLEdBQUdKLE9BQU8sQ0FBQywyQkFBRCxDQUE3QjtBQUVBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQXdDQUMsT0FBTyxDQUFDSSxJQUFSLENBQWEsY0FBYixFQUE2QkQsYUFBN0IsRUFBNENELGlCQUFpQixDQUFDRyxTQUE5RDtBQUVBQyxNQUFNLENBQUNDLE9BQVAsR0FBaUJQLE9BQWpCIiwic291cmNlUm9vdCI6Ii9ob21lL2tvZGVrLXNsZXV0aC9EZXNrdG9wL1F1aWNrLWNyZWRpdC9BcGkvTG9hbnMiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBleHByZXNzID0gcmVxdWlyZSgnZXhwcmVzcycpO1xuXG5jb25zdCByZXFMb2FuID0gZXhwcmVzcy5Sb3V0ZXIoKTtcblxuY29uc3QgcmVxTG9hbkNvbnRyb2xsZXIgPSByZXF1aXJlKCcuLi9Db250cm9sbGVycy9hcHBseUxvYW5Db250cm9sbGVyJyk7XG5cbi8vIE1pZGRsZXdhcmUgZm9yIGNoZWNraW5nIEF1dGggYW5kIEFjY2VzcyBSaWdodHNcbmNvbnN0IGp3dE1pZGRsZXdhcmUgPSByZXF1aXJlKCcuLi9TZXR0aW5ncy9jaGVja0F1dGhVc2VyJyk7XG5cbi8qKlxuKiBAc3dhZ2dlclxuKiAvYXBpL3YxL3VzZXIvbG9hbnMvYXBwbHk6XG4qICAgcG9zdDpcbiogICAgIHNlY3VyaXR5OlxuKiAgICAgICAgLSBiZWFyZXJBdXRoOiBbXVxuKiAgICAgdGFnczpcbiogICAgICAgLSBVc2VyXG4qICAgICBuYW1lOiBBcHBseSBmb3IgYSBMb2FuXG4qICAgICBzdW1tYXJ5OiBBcHBseSBmb3IgYSBMb2FuXG4qICAgICBjb25zdW1lczpcbiogICAgICAgLSBhcHBsaWNhdGlvbi9qc29uXG4qICAgICBwYXJhbWV0ZXJzOlxuKiAgICAgICAtIG5hbWU6IGJvZHlcbiogICAgICAgICBpbjogYm9keVxuKiAgICAgICAgIHByb3BlcnRpZXM6XG4qICAgICAgICAgICBGdWxsbmFtZTpcbiogICAgICAgICAgICAgdHlwZTogc3RyaW5nXG4qICAgICAgICAgICAgIGV4YW1wbGU6IE11Z2Vyd2EgSm9zZXBoXG4qICAgICAgICAgICBFbWFpbDpcbiogICAgICAgICAgICAgdHlwZTogc3RyaW5nXG4qICAgICAgICAgICAgIGV4YW1wbGU6IG11Z2Vyd2FAZ21haWwuY29tXG4qICAgICAgICAgICBUZW5vcjpcbiogICAgICAgICAgICAgdHlwZTogaW50ZWdlclxuKiAgICAgICAgICAgICBleGFtcGxlOiA1XG4qICAgICAgICAgICBBbW91bnQ6XG4qICAgICAgICAgICAgIHR5cGU6IGludGVnZXJcbiogICAgICAgICAgICAgZXhhbXBsZTogNTAwMDAwXG4qICAgICAgICAgcmVxdWlyZWQ6XG4qICAgICAgICAgICAtIEZ1bGxOYW1lXG4qICAgICAgICAgICAtIEVtYWlsXG4qICAgICAgICAgICAtIFRlbm9yXG4qICAgICAgICAgICAtIEFtb3VudFxuKiAgICAgcmVzcG9uc2VzOlxuKiAgICAgICAyMDE6XG4qICAgICAgICAgZGVzY3JpcHRpb246IEN1c3RvbWVyIFN1Y2Nlc3NmdWxseSBTaWduZWQgVXBcbiogICAgICAgNTAwOlxuKiAgICAgICAgIGRlc2NyaXB0aW9uOiBGYWlsZWQgVG8gQXV0aGVudGljYXRlXG4qL1xuXG5yZXFMb2FuLnBvc3QoJy9sb2Fucy9hcHBseScsIGp3dE1pZGRsZXdhcmUsIHJlcUxvYW5Db250cm9sbGVyLmFwcGx5TG9hbik7XG5cbm1vZHVsZS5leHBvcnRzID0gcmVxTG9hbjtcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "applyLoan.js"
      ],
      "names": [
        "express",
        "require",
        "reqLoan",
        "Router",
        "reqLoanController",
        "jwtMiddleware",
        "post",
        "applyLoan",
        "module",
        "exports"
      ],
      "mappings": ";;AAAA,IAAMA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;AAEA,IAAMC,OAAO,GAAGF,OAAO,CAACG,MAAR,EAAhB;;AAEA,IAAMC,iBAAiB,GAAGH,OAAO,CAAC,oCAAD,CAAjC,C,CAEA;;;AACA,IAAMI,aAAa,GAAGJ,OAAO,CAAC,2BAAD,CAA7B;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwCAC,OAAO,CAACI,IAAR,CAAa,cAAb,EAA6BD,aAA7B,EAA4CD,iBAAiB,CAACG,SAA9D;AAEAC,MAAM,CAACC,OAAP,GAAiBP,OAAjB",
      "sourceRoot": "/home/kodek-sleuth/Desktop/Quick-credit/Api/Loans",
      "sourcesContent": [
        "const express = require('express');\n\nconst reqLoan = express.Router();\n\nconst reqLoanController = require('../Controllers/applyLoanController');\n\n// Middleware for checking Auth and Access Rights\nconst jwtMiddleware = require('../Settings/checkAuthUser');\n\n/**\n* @swagger\n* /api/v1/user/loans/apply:\n*   post:\n*     security:\n*        - bearerAuth: []\n*     tags:\n*       - User\n*     name: Apply for a Loan\n*     summary: Apply for a Loan\n*     consumes:\n*       - application/json\n*     parameters:\n*       - name: body\n*         in: body\n*         properties:\n*           Fullname:\n*             type: string\n*             example: Mugerwa Joseph\n*           Email:\n*             type: string\n*             example: mugerwa@gmail.com\n*           Tenor:\n*             type: integer\n*             example: 5\n*           Amount:\n*             type: integer\n*             example: 500000\n*         required:\n*           - FullName\n*           - Email\n*           - Tenor\n*           - Amount\n*     responses:\n*       201:\n*         description: Customer Successfully Signed Up\n*       500:\n*         description: Failed To Authenticate\n*/\n\nreqLoan.post('/loans/apply', jwtMiddleware, reqLoanController.applyLoan);\n\nmodule.exports = reqLoan;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1557385196458
  },
  "{\"sourceRoot\":\"/home/kodek-sleuth/Desktop/Quick-credit/Api/Controllers\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/kodek-sleuth/Desktop/Quick-credit\",\"filename\":\"/home/kodek-sleuth/Desktop/Quick-credit/Api/Controllers/applyLoanController.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/kodek-sleuth/Desktop/Quick-credit\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/kodek-sleuth/Desktop/Quick-credit/Api/Controllers",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/kodek-sleuth/Desktop/Quick-credit",
      "filename": "/home/kodek-sleuth/Desktop/Quick-credit/Api/Controllers/applyLoanController.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/kodek-sleuth/Desktop/Quick-credit",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/kodek-sleuth/Desktop/Quick-credit/Api/Controllers/applyLoanController.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/home/kodek-sleuth/Desktop/Quick-credit/Api/Controllers/applyLoanController.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/kodek-sleuth/Desktop/Quick-credit/Api/Controllers",
        "sourceFileName": "applyLoanController.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\n/* eslint-disable no-lonely-if */\n\n/* eslint-disable object-shorthand */\n\n/* eslint-disable prefer-destructuring */\n\n/* eslint-disable max-len */\n\n/* eslint-disable no-trailing-spaces */\n\n/* eslint-disable brace-style */\n\n/* eslint-disable no-console */\n\n/* eslint-disable comma-dangle */\n\n/* eslint-disable no-unused-vars */\n\n/* eslint-disable eqeqeq */\n\n/* eslint-disable indent */\nvar jwt = require('jsonwebtoken');\n\nvar Pool = require('pg').Pool;\n\nvar connectionString = process.env.QUICK_CREDIT_DB_TEST;\nvar pool = new Pool({\n  connectionString: connectionString\n});\n\nexports.applyLoan = function (req, res, next) {\n  var queryReqLoan = 'INSERT INTO loan(investee_email, investee_name, createdOn, tenor, amount, paymentInstallment, balance, interest) VALUES($1, $2, $3, $4, $5, $6, $7, $8)'; // Making sure that user who request for loan exists\n\n  pool.query(\"Select * from users WHERE email='\".concat(req.body.Email, \"' and fullname='\").concat(req.body.Fullname, \"'\")).then(function (data) {\n    if (data.rowCount > 0) {\n      var dataFetched = data.rows;\n      console.log(dataFetched); // Making sure that user is Verified\n\n      if (dataFetched[0].status == 'Verified') {\n        // Querying to make sure user does not apply for a new loan minus paying for the old one\n        // Remember as an Investee can only have one unrepaid loan at a time\n        // We check if the user has an unrepaid loan, if so then he cant apply for a new one else he can apply\n        pool.query(\"Select * from loan WHERE investee_email='\".concat(req.body.Email, \"' and investee_name='\").concat(req.body.Fullname, \"' and repaid='False'\")).then(function (loanData) {\n          if (loanData.rowCount > 0) {\n            res.status(401).json({\n              Status: '401',\n              Error: 'Please repay old loan before applying for a new one'\n            });\n          } else {\n            // Making sure that user does not use a longer extension peroid than 12 months\n            var userLoanData = loanData.rows;\n\n            if (req.body.Tenor > 12) {\n              res.status(401).json({\n                Status: '401',\n                Error: 'Tenor must be 12 or less'\n              });\n            } else {\n              // Making sure that user does not apply for loan exceeding 20000000\n              if (req.body.Amount > 20000000) {\n                res.status(401).json({\n                  Status: '401',\n                  Error: 'User can only request for a loan less than 20,000,001'\n                });\n              } else {\n                // Creating current date\n                var today = new Date();\n                var currentDate = \"\".concat(today.getFullYear(), \"-\").concat(today.getMonth() + 1, \"-\").concat(today.getDate());\n                var interest = 5 * req.body.Amount / 100;\n                var paymentInstallment = (req.body.Amount + interest) / req.body.Tenor;\n                var balance = req.body.Amount + interest;\n                var queryReqValues = [req.body.Email, req.body.Fullname, currentDate, req.body.Tenor, req.body.Amount, paymentInstallment, balance, interest]; // Posting the Loan to Database\n\n                pool.query(queryReqLoan, queryReqValues).then(function (result) {\n                  res.status(201).json({\n                    Status: '201',\n                    Data: {\n                      Investee_Email: req.body.Email,\n                      Investee_Name: req.body.Fullname,\n                      Amount: req.body.Amount,\n                      Tenor: req.body.Tenor,\n                      CreatedOn: currentDate,\n                      Balance: balance,\n                      Interest: interest,\n                      PaymentInstallment: paymentInstallment\n                    },\n                    Success: 'Successfully Applied For Loan'\n                  });\n                })[\"catch\"](function (error) {\n                  res.status(409).json({\n                    Status: '409',\n                    Error: error.message\n                  });\n                });\n              }\n            }\n          }\n        })[\"catch\"](function (err) {\n          res.status(409).json({\n            Status: '409',\n            Error: err\n          });\n        });\n      } else {\n        res.status(401).json({\n          Status: '401',\n          Error: 'User must be Verified To make this request'\n        });\n      }\n    } else {\n      res.status(409).json({\n        Status: '409',\n        Error: 'Failed to process request, Try again later'\n      });\n    }\n  })[\"catch\"](function (error) {\n    res.status(500).json({\n      Status: '500',\n      Error: 'Failed to process request, Try again later'\n    });\n  });\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "applyLoanController.js"
      ],
      "names": [
        "jwt",
        "require",
        "Pool",
        "connectionString",
        "process",
        "env",
        "QUICK_CREDIT_DB_TEST",
        "pool",
        "exports",
        "applyLoan",
        "req",
        "res",
        "next",
        "queryReqLoan",
        "query",
        "body",
        "Email",
        "Fullname",
        "then",
        "data",
        "rowCount",
        "dataFetched",
        "rows",
        "console",
        "log",
        "status",
        "loanData",
        "json",
        "Status",
        "Error",
        "userLoanData",
        "Tenor",
        "Amount",
        "today",
        "Date",
        "currentDate",
        "getFullYear",
        "getMonth",
        "getDate",
        "interest",
        "paymentInstallment",
        "balance",
        "queryReqValues",
        "result",
        "Data",
        "Investee_Email",
        "Investee_Name",
        "CreatedOn",
        "Balance",
        "Interest",
        "PaymentInstallment",
        "Success",
        "error",
        "message",
        "err"
      ],
      "mappings": ";;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;AAEA,IAAMA,GAAG,GAAGC,OAAO,CAAC,cAAD,CAAnB;;AAEA,IAAMC,IAAI,GAAGD,OAAO,CAAC,IAAD,CAAP,CAAcC,IAA3B;;AAEA,IAAMC,gBAAgB,GAAGC,OAAO,CAACC,GAAR,CAAYC,oBAArC;AAEA,IAAMC,IAAI,GAAG,IAAIL,IAAJ,CAAS;AAAEC,EAAAA,gBAAgB,EAAEA;AAApB,CAAT,CAAb;;AAEAK,OAAO,CAACC,SAAR,GAAoB,UAACC,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AACpC,MAAMC,YAAY,GAAG,yJAArB,CADoC,CAGpC;;AACAN,EAAAA,IAAI,CAACO,KAAL,4CAA+CJ,GAAG,CAACK,IAAJ,CAASC,KAAxD,6BAAgFN,GAAG,CAACK,IAAJ,CAASE,QAAzF,QACCC,IADD,CACM,UAACC,IAAD,EAAU;AACZ,QAAIA,IAAI,CAACC,QAAL,GAAgB,CAApB,EACA;AACI,UAAMC,WAAW,GAAGF,IAAI,CAACG,IAAzB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYH,WAAZ,EAFJ,CAII;;AACA,UAAIA,WAAW,CAAC,CAAD,CAAX,CAAeI,MAAf,IAAyB,UAA7B,EACA;AACI;AACA;AACA;AAEAlB,QAAAA,IAAI,CAACO,KAAL,oDAAuDJ,GAAG,CAACK,IAAJ,CAASC,KAAhE,kCAA6FN,GAAG,CAACK,IAAJ,CAASE,QAAtG,2BACCC,IADD,CACM,UAACQ,QAAD,EAAc;AAChB,cAAIA,QAAQ,CAACN,QAAT,GAAoB,CAAxB,EACA;AACIT,YAAAA,GAAG,CAACc,MAAJ,CAAW,GAAX,EAAgBE,IAAhB,CAAqB;AACjBC,cAAAA,MAAM,EAAE,KADS;AAEjBC,cAAAA,KAAK,EAAE;AAFU,aAArB;AAIH,WAND,MASI;AACI;AACA,gBAAMC,YAAY,GAAGJ,QAAQ,CAACJ,IAA9B;;AACA,gBAAIZ,GAAG,CAACK,IAAJ,CAASgB,KAAT,GAAiB,EAArB,EACA;AACIpB,cAAAA,GAAG,CAACc,MAAJ,CAAW,GAAX,EAAgBE,IAAhB,CAAqB;AACjBC,gBAAAA,MAAM,EAAE,KADS;AAEjBC,gBAAAA,KAAK,EAAE;AAFU,eAArB;AAIH,aAND,MASA;AACI;AACA,kBAAInB,GAAG,CAACK,IAAJ,CAASiB,MAAT,GAAkB,QAAtB,EACA;AACIrB,gBAAAA,GAAG,CAACc,MAAJ,CAAW,GAAX,EAAgBE,IAAhB,CAAqB;AACjBC,kBAAAA,MAAM,EAAE,KADS;AAEjBC,kBAAAA,KAAK,EAAE;AAFU,iBAArB;AAIH,eAND,MASA;AACI;AACA,oBAAMI,KAAK,GAAG,IAAIC,IAAJ,EAAd;AACA,oBAAMC,WAAW,aAAMF,KAAK,CAACG,WAAN,EAAN,cAA6BH,KAAK,CAACI,QAAN,KAAmB,CAAhD,cAAqDJ,KAAK,CAACK,OAAN,EAArD,CAAjB;AAEA,oBAAMC,QAAQ,GAAI,IAAI7B,GAAG,CAACK,IAAJ,CAASiB,MAAd,GAAwB,GAAzC;AACA,oBAAMQ,kBAAkB,GAAG,CAAC9B,GAAG,CAACK,IAAJ,CAASiB,MAAT,GAAkBO,QAAnB,IAA+B7B,GAAG,CAACK,IAAJ,CAASgB,KAAnE;AACA,oBAAMU,OAAO,GAAG/B,GAAG,CAACK,IAAJ,CAASiB,MAAT,GAAkBO,QAAlC;AACA,oBAAMG,cAAc,GAAG,CAAChC,GAAG,CAACK,IAAJ,CAASC,KAAV,EAAiBN,GAAG,CAACK,IAAJ,CAASE,QAA1B,EAAoCkB,WAApC,EAAiDzB,GAAG,CAACK,IAAJ,CAASgB,KAA1D,EAAiErB,GAAG,CAACK,IAAJ,CAASiB,MAA1E,EAAkFQ,kBAAlF,EAAsGC,OAAtG,EAA+GF,QAA/G,CAAvB,CARJ,CAUI;;AACAhC,gBAAAA,IAAI,CAACO,KAAL,CAAWD,YAAX,EAAyB6B,cAAzB,EACCxB,IADD,CACM,UAACyB,MAAD,EAAY;AACdhC,kBAAAA,GAAG,CAACc,MAAJ,CAAW,GAAX,EAAgBE,IAAhB,CAAqB;AACjBC,oBAAAA,MAAM,EAAE,KADS;AAEjBgB,oBAAAA,IAAI,EAAE;AACFC,sBAAAA,cAAc,EAAEnC,GAAG,CAACK,IAAJ,CAASC,KADvB;AAEF8B,sBAAAA,aAAa,EAAEpC,GAAG,CAACK,IAAJ,CAASE,QAFtB;AAGFe,sBAAAA,MAAM,EAAEtB,GAAG,CAACK,IAAJ,CAASiB,MAHf;AAIFD,sBAAAA,KAAK,EAAErB,GAAG,CAACK,IAAJ,CAASgB,KAJd;AAKFgB,sBAAAA,SAAS,EAAEZ,WALT;AAMFa,sBAAAA,OAAO,EAAEP,OANP;AAOFQ,sBAAAA,QAAQ,EAAEV,QAPR;AAQFW,sBAAAA,kBAAkB,EAAEV;AARlB,qBAFW;AAYjBW,oBAAAA,OAAO,EAAE;AAZQ,mBAArB;AAcH,iBAhBD,WAkBG,UAACC,KAAD,EAAW;AACdzC,kBAAAA,GAAG,CAACc,MAAJ,CAAW,GAAX,EAAgBE,IAAhB,CAAqB;AACjBC,oBAAAA,MAAM,EAAE,KADS;AAEjBC,oBAAAA,KAAK,EAAEuB,KAAK,CAACC;AAFI,mBAArB;AAIP,iBAvBO;AAwBX;AACJ;AACR;AACJ,SAxEO,WAyEG,UAACC,GAAD,EAAS;AACZ3C,UAAAA,GAAG,CAACc,MAAJ,CAAW,GAAX,EAAgBE,IAAhB,CAAqB;AACjBC,YAAAA,MAAM,EAAE,KADS;AAEjBC,YAAAA,KAAK,EAAEyB;AAFU,WAArB;AAIH,SA9EG;AA+EP,OArFG,MAwFJ;AACI3C,QAAAA,GAAG,CAACc,MAAJ,CAAW,GAAX,EAAgBE,IAAhB,CAAqB;AACjBC,UAAAA,MAAM,EAAE,KADS;AAEjBC,UAAAA,KAAK,EAAE;AAFU,SAArB;AAIH;AACJ,KApGG,MAuGA;AACIlB,MAAAA,GAAG,CAACc,MAAJ,CAAW,GAAX,EAAgBE,IAAhB,CAAqB;AACjBC,QAAAA,MAAM,EAAE,KADS;AAEjBC,QAAAA,KAAK,EAAE;AAFU,OAArB;AAIH;AACJ,GA/GD,WAiHO,UAACuB,KAAD,EAAW;AACdzC,IAAAA,GAAG,CAACc,MAAJ,CAAW,GAAX,EAAgBE,IAAhB,CAAqB;AACjBC,MAAAA,MAAM,EAAE,KADS;AAEjBC,MAAAA,KAAK,EAAE;AAFU,KAArB;AAIH,GAtHD;AAuHH,CA3HD",
      "sourceRoot": "/home/kodek-sleuth/Desktop/Quick-credit/Api/Controllers",
      "sourcesContent": [
        "/* eslint-disable no-lonely-if */\n/* eslint-disable object-shorthand */\n/* eslint-disable prefer-destructuring */\n/* eslint-disable max-len */\n/* eslint-disable no-trailing-spaces */\n/* eslint-disable brace-style */\n/* eslint-disable no-console */\n/* eslint-disable comma-dangle */\n/* eslint-disable no-unused-vars */\n/* eslint-disable eqeqeq */\n/* eslint-disable indent */\n\nconst jwt = require('jsonwebtoken');\n\nconst Pool = require('pg').Pool;\n\nconst connectionString = process.env.QUICK_CREDIT_DB_TEST;\n\nconst pool = new Pool({ connectionString: connectionString });\n\nexports.applyLoan = (req, res, next) => {\n    const queryReqLoan = 'INSERT INTO loan(investee_email, investee_name, createdOn, tenor, amount, paymentInstallment, balance, interest) VALUES($1, $2, $3, $4, $5, $6, $7, $8)';\n\n    // Making sure that user who request for loan exists\n    pool.query(`Select * from users WHERE email='${req.body.Email}' and fullname='${req.body.Fullname}'`)\n    .then((data) => {\n        if (data.rowCount > 0)\n        {\n            const dataFetched = data.rows;\n            console.log(dataFetched);\n            \n            // Making sure that user is Verified\n            if (dataFetched[0].status == 'Verified')\n            {\n                // Querying to make sure user does not apply for a new loan minus paying for the old one\n                // Remember as an Investee can only have one unrepaid loan at a time\n                // We check if the user has an unrepaid loan, if so then he cant apply for a new one else he can apply\n\n                pool.query(`Select * from loan WHERE investee_email='${req.body.Email}' and investee_name='${req.body.Fullname}' and repaid='False'`)\n                .then((loanData) => {\n                    if (loanData.rowCount > 0)\n                    {\n                        res.status(401).json({\n                            Status: '401',\n                            Error: 'Please repay old loan before applying for a new one'\n                        });\n                    }    \n                    \n                    else\n                        {\n                            // Making sure that user does not use a longer extension peroid than 12 months\n                            const userLoanData = loanData.rows;\n                            if (req.body.Tenor > 12)\n                            {\n                                res.status(401).json({\n                                    Status: '401',\n                                    Error: 'Tenor must be 12 or less'\n                                });\n                            }\n\n                            else \n                            {\n                                // Making sure that user does not apply for loan exceeding 20000000\n                                if (req.body.Amount > 20000000)\n                                {\n                                    res.status(401).json({\n                                        Status: '401',\n                                        Error: 'User can only request for a loan less than 20,000,001'\n                                    });\n                                }\n\n                                else\n                                {                        \n                                    // Creating current date\n                                    const today = new Date();\n                                    const currentDate = `${today.getFullYear()}-${today.getMonth() + 1}-${today.getDate()}`;\n\n                                    const interest = (5 * req.body.Amount) / 100;\n                                    const paymentInstallment = (req.body.Amount + interest) / req.body.Tenor;\n                                    const balance = req.body.Amount + interest;\n                                    const queryReqValues = [req.body.Email, req.body.Fullname, currentDate, req.body.Tenor, req.body.Amount, paymentInstallment, balance, interest];\n                                \n                                    // Posting the Loan to Database\n                                    pool.query(queryReqLoan, queryReqValues)\n                                    .then((result) => {\n                                        res.status(201).json({\n                                            Status: '201',\n                                            Data: {\n                                                Investee_Email: req.body.Email,\n                                                Investee_Name: req.body.Fullname,\n                                                Amount: req.body.Amount,\n                                                Tenor: req.body.Tenor,\n                                                CreatedOn: currentDate,\n                                                Balance: balance,\n                                                Interest: interest,\n                                                PaymentInstallment: paymentInstallment\n                                            },\n                                            Success: 'Successfully Applied For Loan'\n                                        });\n                                    })\n\n                                .catch((error) => {\n                                    res.status(409).json({\n                                        Status: '409',\n                                        Error: error.message\n                                });\n                            });\n                        }\n                    }   \n            }\n        })\n            .catch((err) => {\n                res.status(409).json({\n                    Status: '409',\n                    Error: err\n                });\n            });\n        }\n\n        else\n        {\n            res.status(401).json({\n                Status: '401',\n                Error: 'User must be Verified To make this request'\n            });\n        }\n    }\n\n        else\n        {\n            res.status(409).json({\n                Status: '409',\n                Error: 'Failed to process request, Try again later'\n            });\n        }\n    })\n\n    .catch((error) => {\n        res.status(500).json({\n            Status: '500',\n            Error: 'Failed to process request, Try again later'\n        });\n    });\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1557385196458
  },
  "{\"sourceRoot\":\"/home/kodek-sleuth/Desktop/Quick-credit/Api/Settings\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/kodek-sleuth/Desktop/Quick-credit\",\"filename\":\"/home/kodek-sleuth/Desktop/Quick-credit/Api/Settings/checkAuthUser.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/kodek-sleuth/Desktop/Quick-credit\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/kodek-sleuth/Desktop/Quick-credit/Api/Settings",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/kodek-sleuth/Desktop/Quick-credit",
      "filename": "/home/kodek-sleuth/Desktop/Quick-credit/Api/Settings/checkAuthUser.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/kodek-sleuth/Desktop/Quick-credit",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/kodek-sleuth/Desktop/Quick-credit/Api/Settings/checkAuthUser.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/home/kodek-sleuth/Desktop/Quick-credit/Api/Settings/checkAuthUser.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/kodek-sleuth/Desktop/Quick-credit/Api/Settings",
        "sourceFileName": "checkAuthUser.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\n/* eslint-disable indent */\n\n/* eslint-disable brace-style */\nvar jwt = require('jsonwebtoken');\n\nmodule.exports = function (req, res, next) {\n  try {\n    var token = req.headers.authorization.split(' ')[1];\n    var decode = jwt.verify(token, process.env.JWT_KEY_USER);\n    req.userData = decode;\n    next();\n  } catch (error) {\n    res.status(401).json({\n      Message: 'User Authorisation required to access resource'\n    });\n  }\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNoZWNrQXV0aFVzZXIuanMiXSwibmFtZXMiOlsiand0IiwicmVxdWlyZSIsIm1vZHVsZSIsImV4cG9ydHMiLCJyZXEiLCJyZXMiLCJuZXh0IiwidG9rZW4iLCJoZWFkZXJzIiwiYXV0aG9yaXphdGlvbiIsInNwbGl0IiwiZGVjb2RlIiwidmVyaWZ5IiwicHJvY2VzcyIsImVudiIsIkpXVF9LRVlfVVNFUiIsInVzZXJEYXRhIiwiZXJyb3IiLCJzdGF0dXMiLCJqc29uIiwiTWVzc2FnZSJdLCJtYXBwaW5ncyI6Ijs7QUFBQTs7QUFDQTtBQUNBLElBQU1BLEdBQUcsR0FBR0MsT0FBTyxDQUFDLGNBQUQsQ0FBbkI7O0FBRUFDLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQixVQUFDQyxHQUFELEVBQU1DLEdBQU4sRUFBV0MsSUFBWCxFQUFvQjtBQUNqQyxNQUNBO0FBQ0ksUUFBTUMsS0FBSyxHQUFHSCxHQUFHLENBQUNJLE9BQUosQ0FBWUMsYUFBWixDQUEwQkMsS0FBMUIsQ0FBZ0MsR0FBaEMsRUFBcUMsQ0FBckMsQ0FBZDtBQUNBLFFBQU1DLE1BQU0sR0FBR1gsR0FBRyxDQUFDWSxNQUFKLENBQVdMLEtBQVgsRUFBa0JNLE9BQU8sQ0FBQ0MsR0FBUixDQUFZQyxZQUE5QixDQUFmO0FBQ0FYLElBQUFBLEdBQUcsQ0FBQ1ksUUFBSixHQUFlTCxNQUFmO0FBQ0FMLElBQUFBLElBQUk7QUFDUCxHQU5ELENBUUEsT0FBT1csS0FBUCxFQUNBO0FBQ0laLElBQUFBLEdBQUcsQ0FBQ2EsTUFBSixDQUFXLEdBQVgsRUFBZ0JDLElBQWhCLENBQXFCO0FBQ2pCQyxNQUFBQSxPQUFPLEVBQUU7QUFEUSxLQUFyQjtBQUdIO0FBQ0osQ0FmRCIsInNvdXJjZVJvb3QiOiIvaG9tZS9rb2Rlay1zbGV1dGgvRGVza3RvcC9RdWljay1jcmVkaXQvQXBpL1NldHRpbmdzIiwic291cmNlc0NvbnRlbnQiOlsiLyogZXNsaW50LWRpc2FibGUgaW5kZW50ICovXG4vKiBlc2xpbnQtZGlzYWJsZSBicmFjZS1zdHlsZSAqL1xuY29uc3Qgand0ID0gcmVxdWlyZSgnanNvbndlYnRva2VuJyk7XG5cbm1vZHVsZS5leHBvcnRzID0gKHJlcSwgcmVzLCBuZXh0KSA9PiB7XG4gICAgdHJ5XG4gICAge1xuICAgICAgICBjb25zdCB0b2tlbiA9IHJlcS5oZWFkZXJzLmF1dGhvcml6YXRpb24uc3BsaXQoJyAnKVsxXTtcbiAgICAgICAgY29uc3QgZGVjb2RlID0gand0LnZlcmlmeSh0b2tlbiwgcHJvY2Vzcy5lbnYuSldUX0tFWV9VU0VSKTtcbiAgICAgICAgcmVxLnVzZXJEYXRhID0gZGVjb2RlO1xuICAgICAgICBuZXh0KCk7XG4gICAgfVxuXG4gICAgY2F0Y2ggKGVycm9yKVxuICAgIHtcbiAgICAgICAgcmVzLnN0YXR1cyg0MDEpLmpzb24oe1xuICAgICAgICAgICAgTWVzc2FnZTogJ1VzZXIgQXV0aG9yaXNhdGlvbiByZXF1aXJlZCB0byBhY2Nlc3MgcmVzb3VyY2UnLFxuICAgICAgICB9KTtcbiAgICB9XG59O1xuIl19",
    "map": {
      "version": 3,
      "sources": [
        "checkAuthUser.js"
      ],
      "names": [
        "jwt",
        "require",
        "module",
        "exports",
        "req",
        "res",
        "next",
        "token",
        "headers",
        "authorization",
        "split",
        "decode",
        "verify",
        "process",
        "env",
        "JWT_KEY_USER",
        "userData",
        "error",
        "status",
        "json",
        "Message"
      ],
      "mappings": ";;AAAA;;AACA;AACA,IAAMA,GAAG,GAAGC,OAAO,CAAC,cAAD,CAAnB;;AAEAC,MAAM,CAACC,OAAP,GAAiB,UAACC,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AACjC,MACA;AACI,QAAMC,KAAK,GAAGH,GAAG,CAACI,OAAJ,CAAYC,aAAZ,CAA0BC,KAA1B,CAAgC,GAAhC,EAAqC,CAArC,CAAd;AACA,QAAMC,MAAM,GAAGX,GAAG,CAACY,MAAJ,CAAWL,KAAX,EAAkBM,OAAO,CAACC,GAAR,CAAYC,YAA9B,CAAf;AACAX,IAAAA,GAAG,CAACY,QAAJ,GAAeL,MAAf;AACAL,IAAAA,IAAI;AACP,GAND,CAQA,OAAOW,KAAP,EACA;AACIZ,IAAAA,GAAG,CAACa,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACjBC,MAAAA,OAAO,EAAE;AADQ,KAArB;AAGH;AACJ,CAfD",
      "sourceRoot": "/home/kodek-sleuth/Desktop/Quick-credit/Api/Settings",
      "sourcesContent": [
        "/* eslint-disable indent */\n/* eslint-disable brace-style */\nconst jwt = require('jsonwebtoken');\n\nmodule.exports = (req, res, next) => {\n    try\n    {\n        const token = req.headers.authorization.split(' ')[1];\n        const decode = jwt.verify(token, process.env.JWT_KEY_USER);\n        req.userData = decode;\n        next();\n    }\n\n    catch (error)\n    {\n        res.status(401).json({\n            Message: 'User Authorisation required to access resource',\n        });\n    }\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1556948101084
  },
  "{\"sourceRoot\":\"/home/kodek-sleuth/Desktop/Quick-credit/Api/Loans\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/kodek-sleuth/Desktop/Quick-credit\",\"filename\":\"/home/kodek-sleuth/Desktop/Quick-credit/Api/Loans/repayLoan.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/kodek-sleuth/Desktop/Quick-credit\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/kodek-sleuth/Desktop/Quick-credit/Api/Loans",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/kodek-sleuth/Desktop/Quick-credit",
      "filename": "/home/kodek-sleuth/Desktop/Quick-credit/Api/Loans/repayLoan.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/kodek-sleuth/Desktop/Quick-credit",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/kodek-sleuth/Desktop/Quick-credit/Api/Loans/repayLoan.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/home/kodek-sleuth/Desktop/Quick-credit/Api/Loans/repayLoan.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/kodek-sleuth/Desktop/Quick-credit/Api/Loans",
        "sourceFileName": "repayLoan.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar express = require('express');\n\nvar payLoan = express.Router();\n\nvar payLoanController = require('../Controllers/repayLoanController'); // Middleware for checking Auth and Access Rights\n\n\nvar jwtMiddleware = require('../Settings/checkAuthUser');\n/**\n* @swagger\n* /api/v1/user/loans/repay:\n*   post:\n*     security:\n*        - bearerAuth: []\n*     tags:\n*       - User\n*     name: Repay a Loan\n*     summary: Repay for a Loan\n*     consumes:\n*       - application/json\n*     parameters:\n*       - name: body\n*         in: body\n*         properties:\n*           FullName:\n*             type: string\n*             example: Mugerwa Joseph\n*           Email:\n*             type: string\n*             example: mugerwa@gmail.com\n*           Amount:\n*             type: integer\n*             example: 500000\n*         required:\n*           - FullName\n*           - Email\n*           - Amount\n*     responses:\n*       201:\n*         description: Successfully Placed Repayment\n*       401:\n*         description: Failed to process request, Try again later\n*/\n\n\npayLoan.post('/loans/repay', jwtMiddleware, payLoanController.repayLoan);\nmodule.exports = payLoan;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJlcGF5TG9hbi5qcyJdLCJuYW1lcyI6WyJleHByZXNzIiwicmVxdWlyZSIsInBheUxvYW4iLCJSb3V0ZXIiLCJwYXlMb2FuQ29udHJvbGxlciIsImp3dE1pZGRsZXdhcmUiLCJwb3N0IiwicmVwYXlMb2FuIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6Ijs7QUFBQSxJQUFNQSxPQUFPLEdBQUdDLE9BQU8sQ0FBQyxTQUFELENBQXZCOztBQUVBLElBQU1DLE9BQU8sR0FBR0YsT0FBTyxDQUFDRyxNQUFSLEVBQWhCOztBQUVBLElBQU1DLGlCQUFpQixHQUFHSCxPQUFPLENBQUMsb0NBQUQsQ0FBakMsQyxDQUVBOzs7QUFDQSxJQUFNSSxhQUFhLEdBQUdKLE9BQU8sQ0FBQywyQkFBRCxDQUE3QjtBQUVBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBb0NBQyxPQUFPLENBQUNJLElBQVIsQ0FBYSxjQUFiLEVBQTZCRCxhQUE3QixFQUE0Q0QsaUJBQWlCLENBQUNHLFNBQTlEO0FBRUFDLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQlAsT0FBakIiLCJzb3VyY2VSb290IjoiL2hvbWUva29kZWstc2xldXRoL0Rlc2t0b3AvUXVpY2stY3JlZGl0L0FwaS9Mb2FucyIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IGV4cHJlc3MgPSByZXF1aXJlKCdleHByZXNzJyk7XG5cbmNvbnN0IHBheUxvYW4gPSBleHByZXNzLlJvdXRlcigpO1xuXG5jb25zdCBwYXlMb2FuQ29udHJvbGxlciA9IHJlcXVpcmUoJy4uL0NvbnRyb2xsZXJzL3JlcGF5TG9hbkNvbnRyb2xsZXInKTtcblxuLy8gTWlkZGxld2FyZSBmb3IgY2hlY2tpbmcgQXV0aCBhbmQgQWNjZXNzIFJpZ2h0c1xuY29uc3Qgand0TWlkZGxld2FyZSA9IHJlcXVpcmUoJy4uL1NldHRpbmdzL2NoZWNrQXV0aFVzZXInKTtcblxuLyoqXG4qIEBzd2FnZ2VyXG4qIC9hcGkvdjEvdXNlci9sb2Fucy9yZXBheTpcbiogICBwb3N0OlxuKiAgICAgc2VjdXJpdHk6XG4qICAgICAgICAtIGJlYXJlckF1dGg6IFtdXG4qICAgICB0YWdzOlxuKiAgICAgICAtIFVzZXJcbiogICAgIG5hbWU6IFJlcGF5IGEgTG9hblxuKiAgICAgc3VtbWFyeTogUmVwYXkgZm9yIGEgTG9hblxuKiAgICAgY29uc3VtZXM6XG4qICAgICAgIC0gYXBwbGljYXRpb24vanNvblxuKiAgICAgcGFyYW1ldGVyczpcbiogICAgICAgLSBuYW1lOiBib2R5XG4qICAgICAgICAgaW46IGJvZHlcbiogICAgICAgICBwcm9wZXJ0aWVzOlxuKiAgICAgICAgICAgRnVsbE5hbWU6XG4qICAgICAgICAgICAgIHR5cGU6IHN0cmluZ1xuKiAgICAgICAgICAgICBleGFtcGxlOiBNdWdlcndhIEpvc2VwaFxuKiAgICAgICAgICAgRW1haWw6XG4qICAgICAgICAgICAgIHR5cGU6IHN0cmluZ1xuKiAgICAgICAgICAgICBleGFtcGxlOiBtdWdlcndhQGdtYWlsLmNvbVxuKiAgICAgICAgICAgQW1vdW50OlxuKiAgICAgICAgICAgICB0eXBlOiBpbnRlZ2VyXG4qICAgICAgICAgICAgIGV4YW1wbGU6IDUwMDAwMFxuKiAgICAgICAgIHJlcXVpcmVkOlxuKiAgICAgICAgICAgLSBGdWxsTmFtZVxuKiAgICAgICAgICAgLSBFbWFpbFxuKiAgICAgICAgICAgLSBBbW91bnRcbiogICAgIHJlc3BvbnNlczpcbiogICAgICAgMjAxOlxuKiAgICAgICAgIGRlc2NyaXB0aW9uOiBTdWNjZXNzZnVsbHkgUGxhY2VkIFJlcGF5bWVudFxuKiAgICAgICA0MDE6XG4qICAgICAgICAgZGVzY3JpcHRpb246IEZhaWxlZCB0byBwcm9jZXNzIHJlcXVlc3QsIFRyeSBhZ2FpbiBsYXRlclxuKi9cblxucGF5TG9hbi5wb3N0KCcvbG9hbnMvcmVwYXknLCBqd3RNaWRkbGV3YXJlLCBwYXlMb2FuQ29udHJvbGxlci5yZXBheUxvYW4pO1xuXG5tb2R1bGUuZXhwb3J0cyA9IHBheUxvYW47XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "repayLoan.js"
      ],
      "names": [
        "express",
        "require",
        "payLoan",
        "Router",
        "payLoanController",
        "jwtMiddleware",
        "post",
        "repayLoan",
        "module",
        "exports"
      ],
      "mappings": ";;AAAA,IAAMA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;AAEA,IAAMC,OAAO,GAAGF,OAAO,CAACG,MAAR,EAAhB;;AAEA,IAAMC,iBAAiB,GAAGH,OAAO,CAAC,oCAAD,CAAjC,C,CAEA;;;AACA,IAAMI,aAAa,GAAGJ,OAAO,CAAC,2BAAD,CAA7B;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoCAC,OAAO,CAACI,IAAR,CAAa,cAAb,EAA6BD,aAA7B,EAA4CD,iBAAiB,CAACG,SAA9D;AAEAC,MAAM,CAACC,OAAP,GAAiBP,OAAjB",
      "sourceRoot": "/home/kodek-sleuth/Desktop/Quick-credit/Api/Loans",
      "sourcesContent": [
        "const express = require('express');\n\nconst payLoan = express.Router();\n\nconst payLoanController = require('../Controllers/repayLoanController');\n\n// Middleware for checking Auth and Access Rights\nconst jwtMiddleware = require('../Settings/checkAuthUser');\n\n/**\n* @swagger\n* /api/v1/user/loans/repay:\n*   post:\n*     security:\n*        - bearerAuth: []\n*     tags:\n*       - User\n*     name: Repay a Loan\n*     summary: Repay for a Loan\n*     consumes:\n*       - application/json\n*     parameters:\n*       - name: body\n*         in: body\n*         properties:\n*           FullName:\n*             type: string\n*             example: Mugerwa Joseph\n*           Email:\n*             type: string\n*             example: mugerwa@gmail.com\n*           Amount:\n*             type: integer\n*             example: 500000\n*         required:\n*           - FullName\n*           - Email\n*           - Amount\n*     responses:\n*       201:\n*         description: Successfully Placed Repayment\n*       401:\n*         description: Failed to process request, Try again later\n*/\n\npayLoan.post('/loans/repay', jwtMiddleware, payLoanController.repayLoan);\n\nmodule.exports = payLoan;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1557385196462
  },
  "{\"sourceRoot\":\"/home/kodek-sleuth/Desktop/Quick-credit/Api/Controllers\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/kodek-sleuth/Desktop/Quick-credit\",\"filename\":\"/home/kodek-sleuth/Desktop/Quick-credit/Api/Controllers/repayLoanController.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/kodek-sleuth/Desktop/Quick-credit\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/kodek-sleuth/Desktop/Quick-credit/Api/Controllers",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/kodek-sleuth/Desktop/Quick-credit",
      "filename": "/home/kodek-sleuth/Desktop/Quick-credit/Api/Controllers/repayLoanController.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/kodek-sleuth/Desktop/Quick-credit",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/kodek-sleuth/Desktop/Quick-credit/Api/Controllers/repayLoanController.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/home/kodek-sleuth/Desktop/Quick-credit/Api/Controllers/repayLoanController.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/kodek-sleuth/Desktop/Quick-credit/Api/Controllers",
        "sourceFileName": "repayLoanController.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\n/* eslint-disable no-lonely-if */\n\n/* eslint-disable object-shorthand */\n\n/* eslint-disable prefer-destructuring */\n\n/* eslint-disable max-len */\n\n/* eslint-disable no-trailing-spaces */\n\n/* eslint-disable brace-style */\n\n/* eslint-disable no-console */\n\n/* eslint-disable comma-dangle */\n\n/* eslint-disable no-unused-vars */\n\n/* eslint-disable eqeqeq */\n\n/* eslint-disable indent */\n// Object That creates a connection to Postgres Server Instance\nvar Pool = require('pg').Pool; // Object that defines db Properties\n\n\nvar connectionString = process.env.QUICK_CREDIT_DB_TEST; // Creating a connection with connection string\n\nvar pool = new Pool({\n  connectionString: connectionString\n});\n\nexports.repayLoan = function (req, res, next) {\n  var makeRepaymentQuery = 'INSERT INTO repayments(loanId, investee_email, investee_name, createdOn, amount, paidAmount, monthlyInstallment) VALUES($1, $2, $3, $4, $5, $6, $7)'; // We first want to make sure that user exists in the Database\n\n  pool.query(\"SELECT * FROM users WHERE email='\".concat(req.body.Email, \"' and fullname='\").concat(req.body.Fullname, \"'\")).then(function (data) {\n    if (data.rowCount > 0) {\n      var dataFetched = data.rows; // Since a repay will always be to that one unrepaid loan we may/many not user an id because a user will only have a loan after paying a new one \n\n      pool.query(\"SELECT * FROM loan WHERE investee_email='\".concat(dataFetched[0].email, \"' and investee_name='\").concat(dataFetched[0].fullname, \"' and repaid='False'\")).then(function (result) {\n        if (result.rowCount > 0) {\n          var loanData = result.rows;\n          console.log(loanData); // We make sure that the loan to be repaid has to first be approved else error\n\n          if (loanData[0].status == 'Approved') {\n            // We make sure that the user does not exceed a 20million limit\n            if (req.body.Amount < 20000001) {\n              // We check if the existing loan is repaid or not, if repaid then this else we accept the repay\n              if (loanData[0].repaid == 'True') {\n                res.status(200).json({\n                  Status: '200',\n                  Data: {\n                    Email: loanData[0].investee_email,\n                    Fullname: loanData[0].investee_name,\n                    Paid: req.body.Amount,\n                    Balance: loanData[0].balance,\n                    Installment: loanData[0].paymentinstallment\n                  },\n                  Repaid: 'True'\n                });\n              }\n\n              if (loanData[0].balance == 0.00) {\n                pool.query(\"UPDATE loan set repaid='True' where id=\".concat(loanData[0].id)).then(function (updateResult) {\n                  console.log(updateResult);\n                })[\"catch\"](function (error) {\n                  console.log(error);\n                });\n              } else {\n                // Now loan is unrepaid and user exists we now accept and track the repayment   \n                var today = new Date();\n                var currentDate = \"\".concat(today.getFullYear(), \"-\").concat(today.getMonth() + 1, \"-\").concat(today.getDate());\n                var makeRepaymentQueryValues = [loanData[0].id, req.body.Email, req.body.Fullname, currentDate, loanData[0].amount, req.body.Amount, loanData[0].paymentinstallment];\n                pool.query(makeRepaymentQuery, makeRepaymentQueryValues).then(function (feedback) {\n                  // if Loan balance is less than zero we confirm that it is repaid\n                  if (loanData[0].balance <= 0.00) {\n                    pool.query(\"UPDATE loan set repaid='True' where id=\".concat(loanData[0].id)).then(function (result2) {\n                      res.status(200).json({\n                        Status: '200',\n                        Data: {\n                          Email: loanData[0].investee_email,\n                          Fullname: loanData[0].investee_name,\n                          Paid: req.body.Amount,\n                          Balance: loanData[0].balance,\n                          Installment: loanData[0].paymentinstallment\n                        },\n                        Repaid: 'True'\n                      });\n                    })[\"catch\"](function (errror) {\n                      res.status(401).json({\n                        Status: '401',\n                        Error: errror.message\n                      });\n                    });\n                  } else {\n                    // Now -> Loan balance is not zero we can calculate and send back the balance to be paid\n                    var newBalance = loanData[0].balance - req.body.Amount;\n                    pool.query(\"Update loan set balance='\".concat(newBalance, \"' where id=\").concat(loanData[0].id)).then(function (updated) {\n                      // This is sending back the correct Updated details back to user  \n                      pool.query(\"SELECT * FROM loan WHERE id=\".concat(loanData[0].id)).then(function (currentData) {\n                        if (currentData.rowCount > 0) {\n                          var updatedData = currentData.rows;\n                          res.status(201).json({\n                            Status: '201',\n                            Data: {\n                              Email: updatedData[0].investee_email,\n                              Fullname: updatedData[0].investee_name,\n                              Amount: updatedData[0].amount,\n                              Paid: req.body.Amount,\n                              Balance: updatedData[0].balance,\n                              Repaid: updatedData[0].repaid,\n                              Installment: updatedData[0].paymentinstallment\n                            },\n                            Success: 'Successfully Placed Repayment'\n                          });\n                        }\n                      });\n                    })[\"catch\"](function (errr) {\n                      res.status(401).json({\n                        Status: '401',\n                        Error: errr.message\n                      });\n                    });\n                  }\n                })[\"catch\"](function (error) {\n                  res.status(401).json({\n                    Status: '401',\n                    Error: error.message\n                  });\n                });\n              }\n            }\n          } else {\n            res.status(401).json({\n              Status: '401',\n              Error: 'Please Loan Has to be verified inorder to make Repayment'\n            });\n          }\n        }\n      })[\"catch\"](function (err) {\n        res.status(401).json({\n          Status: '401',\n          Error: err.message\n        });\n      });\n    } else {\n      res.status(401).json({\n        Status: '401',\n        Error: 'Signup or Login To access resource'\n      });\n    }\n  })[\"catch\"](function (err) {\n    res.status(401).json({\n      Status: '401',\n      Error: 'Failed to process request, Try again later'\n    });\n  });\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "repayLoanController.js"
      ],
      "names": [
        "Pool",
        "require",
        "connectionString",
        "process",
        "env",
        "QUICK_CREDIT_DB_TEST",
        "pool",
        "exports",
        "repayLoan",
        "req",
        "res",
        "next",
        "makeRepaymentQuery",
        "query",
        "body",
        "Email",
        "Fullname",
        "then",
        "data",
        "rowCount",
        "dataFetched",
        "rows",
        "email",
        "fullname",
        "result",
        "loanData",
        "console",
        "log",
        "status",
        "Amount",
        "repaid",
        "json",
        "Status",
        "Data",
        "investee_email",
        "investee_name",
        "Paid",
        "Balance",
        "balance",
        "Installment",
        "paymentinstallment",
        "Repaid",
        "id",
        "updateResult",
        "error",
        "today",
        "Date",
        "currentDate",
        "getFullYear",
        "getMonth",
        "getDate",
        "makeRepaymentQueryValues",
        "amount",
        "feedback",
        "result2",
        "errror",
        "Error",
        "message",
        "newBalance",
        "updated",
        "currentData",
        "updatedData",
        "Success",
        "errr",
        "err"
      ],
      "mappings": ";;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;AAEA;AACA,IAAMA,IAAI,GAAGC,OAAO,CAAC,IAAD,CAAP,CAAcD,IAA3B,C,CAEA;;;AACA,IAAME,gBAAgB,GAAGC,OAAO,CAACC,GAAR,CAAYC,oBAArC,C,CAEA;;AACA,IAAMC,IAAI,GAAG,IAAIN,IAAJ,CAAS;AAAEE,EAAAA,gBAAgB,EAAEA;AAApB,CAAT,CAAb;;AAEAK,OAAO,CAACC,SAAR,GAAoB,UAACC,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AACpC,MAAMC,kBAAkB,GAAG,qJAA3B,CADoC,CAGpC;;AACAN,EAAAA,IAAI,CAACO,KAAL,4CAA+CJ,GAAG,CAACK,IAAJ,CAASC,KAAxD,6BAAgFN,GAAG,CAACK,IAAJ,CAASE,QAAzF,QACCC,IADD,CACM,UAACC,IAAD,EAAU;AACZ,QAAIA,IAAI,CAACC,QAAL,GAAgB,CAApB,EACA;AACI,UAAMC,WAAW,GAAGF,IAAI,CAACG,IAAzB,CADJ,CAGI;;AACAf,MAAAA,IAAI,CAACO,KAAL,oDAAuDO,WAAW,CAAC,CAAD,CAAX,CAAeE,KAAtE,kCAAmGF,WAAW,CAAC,CAAD,CAAX,CAAeG,QAAlH,2BACCN,IADD,CACM,UAACO,MAAD,EAAY;AACd,YAAIA,MAAM,CAACL,QAAP,GAAkB,CAAtB,EACA;AACI,cAAMM,QAAQ,GAAGD,MAAM,CAACH,IAAxB;AACAK,UAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ,EAFJ,CAII;;AACA,cAAIA,QAAQ,CAAC,CAAD,CAAR,CAAYG,MAAZ,IAAsB,UAA1B,EACA;AACI;AACA,gBAAInB,GAAG,CAACK,IAAJ,CAASe,MAAT,GAAkB,QAAtB,EACA;AACI;AACA,kBAAIJ,QAAQ,CAAC,CAAD,CAAR,CAAYK,MAAZ,IAAsB,MAA1B,EACA;AACIpB,gBAAAA,GAAG,CAACkB,MAAJ,CAAW,GAAX,EAAgBG,IAAhB,CAAqB;AACjBC,kBAAAA,MAAM,EAAE,KADS;AAEjBC,kBAAAA,IAAI,EAAE;AACFlB,oBAAAA,KAAK,EAAEU,QAAQ,CAAC,CAAD,CAAR,CAAYS,cADjB;AAEFlB,oBAAAA,QAAQ,EAAES,QAAQ,CAAC,CAAD,CAAR,CAAYU,aAFpB;AAGFC,oBAAAA,IAAI,EAAE3B,GAAG,CAACK,IAAJ,CAASe,MAHb;AAIFQ,oBAAAA,OAAO,EAAEZ,QAAQ,CAAC,CAAD,CAAR,CAAYa,OAJnB;AAKFC,oBAAAA,WAAW,EAAEd,QAAQ,CAAC,CAAD,CAAR,CAAYe;AALvB,mBAFW;AASjBC,kBAAAA,MAAM,EAAE;AATS,iBAArB;AAWH;;AAED,kBAAIhB,QAAQ,CAAC,CAAD,CAAR,CAAYa,OAAZ,IAAuB,IAA3B,EACA;AACIhC,gBAAAA,IAAI,CAACO,KAAL,kDAAqDY,QAAQ,CAAC,CAAD,CAAR,CAAYiB,EAAjE,GACCzB,IADD,CACM,UAAC0B,YAAD,EAAkB;AACpBjB,kBAAAA,OAAO,CAACC,GAAR,CAAYgB,YAAZ;AACH,iBAHD,WAIO,UAACC,KAAD,EAAW;AACdlB,kBAAAA,OAAO,CAACC,GAAR,CAAYiB,KAAZ;AACH,iBAND;AAOH,eATD,MAYA;AACI;AACA,oBAAMC,KAAK,GAAG,IAAIC,IAAJ,EAAd;AACA,oBAAMC,WAAW,aAAMF,KAAK,CAACG,WAAN,EAAN,cAA6BH,KAAK,CAACI,QAAN,KAAmB,CAAhD,cAAqDJ,KAAK,CAACK,OAAN,EAArD,CAAjB;AACA,oBAAMC,wBAAwB,GAAG,CAAC1B,QAAQ,CAAC,CAAD,CAAR,CAAYiB,EAAb,EAAiBjC,GAAG,CAACK,IAAJ,CAASC,KAA1B,EAAiCN,GAAG,CAACK,IAAJ,CAASE,QAA1C,EAAoD+B,WAApD,EAAiEtB,QAAQ,CAAC,CAAD,CAAR,CAAY2B,MAA7E,EAAqF3C,GAAG,CAACK,IAAJ,CAASe,MAA9F,EAAsGJ,QAAQ,CAAC,CAAD,CAAR,CAAYe,kBAAlH,CAAjC;AAEAlC,gBAAAA,IAAI,CAACO,KAAL,CAAWD,kBAAX,EAA+BuC,wBAA/B,EACClC,IADD,CACM,UAACoC,QAAD,EAAc;AAChB;AACA,sBAAI5B,QAAQ,CAAC,CAAD,CAAR,CAAYa,OAAZ,IAAuB,IAA3B,EACA;AACIhC,oBAAAA,IAAI,CAACO,KAAL,kDAAqDY,QAAQ,CAAC,CAAD,CAAR,CAAYiB,EAAjE,GACCzB,IADD,CACM,UAACqC,OAAD,EAAa;AACf5C,sBAAAA,GAAG,CAACkB,MAAJ,CAAW,GAAX,EAAgBG,IAAhB,CAAqB;AACjBC,wBAAAA,MAAM,EAAE,KADS;AAEjBC,wBAAAA,IAAI,EAAE;AACFlB,0BAAAA,KAAK,EAAEU,QAAQ,CAAC,CAAD,CAAR,CAAYS,cADjB;AAEFlB,0BAAAA,QAAQ,EAAES,QAAQ,CAAC,CAAD,CAAR,CAAYU,aAFpB;AAGFC,0BAAAA,IAAI,EAAE3B,GAAG,CAACK,IAAJ,CAASe,MAHb;AAIFQ,0BAAAA,OAAO,EAAEZ,QAAQ,CAAC,CAAD,CAAR,CAAYa,OAJnB;AAKFC,0BAAAA,WAAW,EAAEd,QAAQ,CAAC,CAAD,CAAR,CAAYe;AALvB,yBAFW;AASjBC,wBAAAA,MAAM,EAAE;AATS,uBAArB;AAWH,qBAbD,WAcO,UAACc,MAAD,EAAY;AACf7C,sBAAAA,GAAG,CAACkB,MAAJ,CAAW,GAAX,EAAgBG,IAAhB,CAAqB;AACjBC,wBAAAA,MAAM,EAAE,KADS;AAEjBwB,wBAAAA,KAAK,EAAED,MAAM,CAACE;AAFG,uBAArB;AAIH,qBAnBD;AAoBH,mBAtBD,MAyBA;AACI;AACA,wBAAMC,UAAU,GAAGjC,QAAQ,CAAC,CAAD,CAAR,CAAYa,OAAZ,GAAsB7B,GAAG,CAACK,IAAJ,CAASe,MAAlD;AACAvB,oBAAAA,IAAI,CAACO,KAAL,oCAAuC6C,UAAvC,wBAA+DjC,QAAQ,CAAC,CAAD,CAAR,CAAYiB,EAA3E,GACCzB,IADD,CACM,UAAC0C,OAAD,EAAa;AACf;AACArD,sBAAAA,IAAI,CAACO,KAAL,uCAA0CY,QAAQ,CAAC,CAAD,CAAR,CAAYiB,EAAtD,GACCzB,IADD,CACM,UAAC2C,WAAD,EAAiB;AACnB,4BAAIA,WAAW,CAACzC,QAAZ,GAAuB,CAA3B,EACA;AACI,8BAAM0C,WAAW,GAAGD,WAAW,CAACvC,IAAhC;AAEAX,0BAAAA,GAAG,CAACkB,MAAJ,CAAW,GAAX,EAAgBG,IAAhB,CAAqB;AACjBC,4BAAAA,MAAM,EAAE,KADS;AAEjBC,4BAAAA,IAAI,EAAE;AACFlB,8BAAAA,KAAK,EAAE8C,WAAW,CAAC,CAAD,CAAX,CAAe3B,cADpB;AAEFlB,8BAAAA,QAAQ,EAAE6C,WAAW,CAAC,CAAD,CAAX,CAAe1B,aAFvB;AAGFN,8BAAAA,MAAM,EAAEgC,WAAW,CAAC,CAAD,CAAX,CAAeT,MAHrB;AAIFhB,8BAAAA,IAAI,EAAE3B,GAAG,CAACK,IAAJ,CAASe,MAJb;AAKFQ,8BAAAA,OAAO,EAAEwB,WAAW,CAAC,CAAD,CAAX,CAAevB,OALtB;AAMFG,8BAAAA,MAAM,EAAEoB,WAAW,CAAC,CAAD,CAAX,CAAe/B,MANrB;AAOFS,8BAAAA,WAAW,EAAEsB,WAAW,CAAC,CAAD,CAAX,CAAerB;AAP1B,6BAFW;AAWjBsB,4BAAAA,OAAO,EAAE;AAXQ,2BAArB;AAaH;AACJ,uBApBD;AAqBH,qBAxBD,WAyBO,UAACC,IAAD,EAAU;AACbrD,sBAAAA,GAAG,CAACkB,MAAJ,CAAW,GAAX,EAAgBG,IAAhB,CAAqB;AACjBC,wBAAAA,MAAM,EAAE,KADS;AAEjBwB,wBAAAA,KAAK,EAAEO,IAAI,CAACN;AAFK,uBAArB;AAIH,qBA9BD;AA+BH;AACJ,iBA/DD,WAiEO,UAACb,KAAD,EAAW;AACdlC,kBAAAA,GAAG,CAACkB,MAAJ,CAAW,GAAX,EAAgBG,IAAhB,CAAqB;AACjBC,oBAAAA,MAAM,EAAE,KADS;AAEjBwB,oBAAAA,KAAK,EAAEZ,KAAK,CAACa;AAFI,mBAArB;AAIP,iBAtEG;AAuEP;AACJ;AACJ,WAhHG,MAmHJ;AACI/C,YAAAA,GAAG,CAACkB,MAAJ,CAAW,GAAX,EAAgBG,IAAhB,CAAqB;AACjBC,cAAAA,MAAM,EAAE,KADS;AAEjBwB,cAAAA,KAAK,EAAE;AAFU,aAArB;AAIH;AACA;AACJ,OAlID,WAoIO,UAACQ,GAAD,EAAS;AACZtD,QAAAA,GAAG,CAACkB,MAAJ,CAAW,GAAX,EAAgBG,IAAhB,CAAqB;AACjBC,UAAAA,MAAM,EAAE,KADS;AAEjBwB,UAAAA,KAAK,EAAEQ,GAAG,CAACP;AAFM,SAArB;AAIH,OAzID;AA0IH,KA/ID,MAkJA;AACI/C,MAAAA,GAAG,CAACkB,MAAJ,CAAW,GAAX,EAAgBG,IAAhB,CAAqB;AACrBC,QAAAA,MAAM,EAAE,KADa;AAErBwB,QAAAA,KAAK,EAAE;AAFc,OAArB;AAIH;AACJ,GA1JD,WA4JO,UAACQ,GAAD,EAAS;AACZtD,IAAAA,GAAG,CAACkB,MAAJ,CAAW,GAAX,EAAgBG,IAAhB,CAAqB;AACjBC,MAAAA,MAAM,EAAE,KADS;AAEjBwB,MAAAA,KAAK,EAAE;AAFU,KAArB;AAIH,GAjKD;AAkKH,CAtKD",
      "sourceRoot": "/home/kodek-sleuth/Desktop/Quick-credit/Api/Controllers",
      "sourcesContent": [
        "/* eslint-disable no-lonely-if */\n/* eslint-disable object-shorthand */\n/* eslint-disable prefer-destructuring */\n/* eslint-disable max-len */\n/* eslint-disable no-trailing-spaces */\n/* eslint-disable brace-style */\n/* eslint-disable no-console */\n/* eslint-disable comma-dangle */\n/* eslint-disable no-unused-vars */\n/* eslint-disable eqeqeq */\n/* eslint-disable indent */\n\n// Object That creates a connection to Postgres Server Instance\nconst Pool = require('pg').Pool;\n\n// Object that defines db Properties\nconst connectionString = process.env.QUICK_CREDIT_DB_TEST;\n\n// Creating a connection with connection string\nconst pool = new Pool({ connectionString: connectionString });\n\nexports.repayLoan = (req, res, next) => {\n    const makeRepaymentQuery = 'INSERT INTO repayments(loanId, investee_email, investee_name, createdOn, amount, paidAmount, monthlyInstallment) VALUES($1, $2, $3, $4, $5, $6, $7)';\n  \n    // We first want to make sure that user exists in the Database\n    pool.query(`SELECT * FROM users WHERE email='${req.body.Email}' and fullname='${req.body.Fullname}'`)\n    .then((data) => {\n        if (data.rowCount > 0)\n        {\n            const dataFetched = data.rows;\n\n            // Since a repay will always be to that one unrepaid loan we may/many not user an id because a user will only have a loan after paying a new one \n            pool.query(`SELECT * FROM loan WHERE investee_email='${dataFetched[0].email}' and investee_name='${dataFetched[0].fullname}' and repaid='False'`)\n            .then((result) => {\n                if (result.rowCount > 0)\n                {\n                    const loanData = result.rows;\n                    console.log(loanData);\n\n                    // We make sure that the loan to be repaid has to first be approved else error\n                    if (loanData[0].status == 'Approved')\n                    {\n                        // We make sure that the user does not exceed a 20million limit\n                        if (req.body.Amount < 20000001)\n                        {\n                            // We check if the existing loan is repaid or not, if repaid then this else we accept the repay\n                            if (loanData[0].repaid == 'True')\n                            {\n                                res.status(200).json({\n                                    Status: '200',\n                                    Data: {\n                                        Email: loanData[0].investee_email,\n                                        Fullname: loanData[0].investee_name,\n                                        Paid: req.body.Amount,\n                                        Balance: loanData[0].balance,\n                                        Installment: loanData[0].paymentinstallment\n                                    },\n                                    Repaid: 'True'\n                                });\n                            }\n\n                            if (loanData[0].balance == 0.00)\n                            {\n                                pool.query(`UPDATE loan set repaid='True' where id=${loanData[0].id}`)\n                                .then((updateResult) => {\n                                    console.log(updateResult);\n                                })\n                                .catch((error) => {\n                                    console.log(error);\n                                });\n                            }\n    \n                            else\n                            {      \n                                // Now loan is unrepaid and user exists we now accept and track the repayment   \n                                const today = new Date();\n                                const currentDate = `${today.getFullYear()}-${today.getMonth() + 1}-${today.getDate()}`;\n                                const makeRepaymentQueryValues = [loanData[0].id, req.body.Email, req.body.Fullname, currentDate, loanData[0].amount, req.body.Amount, loanData[0].paymentinstallment];\n                                \n                                pool.query(makeRepaymentQuery, makeRepaymentQueryValues)\n                                .then((feedback) => {\n                                    // if Loan balance is less than zero we confirm that it is repaid\n                                    if (loanData[0].balance <= 0.00)\n                                    {\n                                        pool.query(`UPDATE loan set repaid='True' where id=${loanData[0].id}`)\n                                        .then((result2) => {\n                                            res.status(200).json({\n                                                Status: '200',\n                                                Data: {\n                                                    Email: loanData[0].investee_email,\n                                                    Fullname: loanData[0].investee_name,\n                                                    Paid: req.body.Amount,\n                                                    Balance: loanData[0].balance,\n                                                    Installment: loanData[0].paymentinstallment\n                                                },\n                                                Repaid: 'True'\n                                            });\n                                        })\n                                        .catch((errror) => {\n                                            res.status(401).json({\n                                                Status: '401',\n                                                Error: errror.message\n                                            }); \n                                        });\n                                    }\n    \n                                    else\n                                    {\n                                        // Now -> Loan balance is not zero we can calculate and send back the balance to be paid\n                                        const newBalance = loanData[0].balance - req.body.Amount;\n                                        pool.query(`Update loan set balance='${newBalance}' where id=${loanData[0].id}`)\n                                        .then((updated) => {\n                                            // This is sending back the correct Updated details back to user  \n                                            pool.query(`SELECT * FROM loan WHERE id=${loanData[0].id}`)\n                                            .then((currentData) => {\n                                                if (currentData.rowCount > 0)\n                                                {\n                                                    const updatedData = currentData.rows;\n                                                    \n                                                    res.status(201).json({\n                                                        Status: '201',\n                                                        Data: {\n                                                            Email: updatedData[0].investee_email,\n                                                            Fullname: updatedData[0].investee_name,\n                                                            Amount: updatedData[0].amount,\n                                                            Paid: req.body.Amount,\n                                                            Balance: updatedData[0].balance,\n                                                            Repaid: updatedData[0].repaid,\n                                                            Installment: updatedData[0].paymentinstallment\n                                                        },\n                                                        Success: 'Successfully Placed Repayment'\n                                                    });     \n                                                }     \n                                            });\n                                        })\n                                        .catch((errr) => {\n                                            res.status(401).json({\n                                                Status: '401',\n                                                Error: errr.message\n                                            }); \n                                        });\n                                    }\n                                })\n    \n                                .catch((error) => {\n                                    res.status(401).json({\n                                        Status: '401',\n                                        Error: error.message\n                                    });     \n                            });\n                        }\n                    }\n                }\n\n                else\n                {\n                    res.status(401).json({\n                        Status: '401',\n                        Error: 'Please Loan Has to be verified inorder to make Repayment' \n                    });\n                }\n                }\n            })\n\n            .catch((err) => {\n                res.status(401).json({\n                    Status: '401',\n                    Error: err.message\n                });\n            });\n        }\n\n        else\n        {\n            res.status(401).json({\n            Status: '401',\n            Error: 'Signup or Login To access resource' \n          });\n        }\n    })\n\n    .catch((err) => {\n        res.status(401).json({\n            Status: '401',\n            Error: 'Failed to process request, Try again later'\n        });\n    });\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1557385196458
  },
  "{\"sourceRoot\":\"/home/kodek-sleuth/Desktop/Quick-credit/Api/Loans\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/kodek-sleuth/Desktop/Quick-credit\",\"filename\":\"/home/kodek-sleuth/Desktop/Quick-credit/Api/Loans/approveLoan.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/kodek-sleuth/Desktop/Quick-credit\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/kodek-sleuth/Desktop/Quick-credit/Api/Loans",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/kodek-sleuth/Desktop/Quick-credit",
      "filename": "/home/kodek-sleuth/Desktop/Quick-credit/Api/Loans/approveLoan.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/kodek-sleuth/Desktop/Quick-credit",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/kodek-sleuth/Desktop/Quick-credit/Api/Loans/approveLoan.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/home/kodek-sleuth/Desktop/Quick-credit/Api/Loans/approveLoan.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/kodek-sleuth/Desktop/Quick-credit/Api/Loans",
        "sourceFileName": "approveLoan.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar express = require('express');\n\nvar approveLoan = express.Router();\n\nvar approveLoanController = require('../Controllers/approveLoanController');\n\nvar jwtMiddleware = require('../Settings/checkAuthAdmin');\n/**\n* @swagger\n* /api/v1/admin/loans/{:loanId}/approve:\n*   patch:\n*     security:\n*        - bearerAuth: []\n*     tags:\n*       - Verifications, Approvals & Rejections\n*     name: Approve Loan\n*     summary: Approves Loan\n*     parameters:\n*       - name: \":loanId\"\n*         in: path\n*         description: Id of Loan\n*         required: true\n*         type: integer\n*     responses:\n*       201:\n*         description: Successfully Applied For Loan\n*       401:\n*         description: Failed to process request, Try again later\n*/\n\n\napproveLoan.patch('/loans/:loanId/approve', jwtMiddleware, approveLoanController.approveLoan);\nmodule.exports = approveLoan;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcHJvdmVMb2FuLmpzIl0sIm5hbWVzIjpbImV4cHJlc3MiLCJyZXF1aXJlIiwiYXBwcm92ZUxvYW4iLCJSb3V0ZXIiLCJhcHByb3ZlTG9hbkNvbnRyb2xsZXIiLCJqd3RNaWRkbGV3YXJlIiwicGF0Y2giLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiOztBQUFBLElBQU1BLE9BQU8sR0FBR0MsT0FBTyxDQUFDLFNBQUQsQ0FBdkI7O0FBRUEsSUFBTUMsV0FBVyxHQUFHRixPQUFPLENBQUNHLE1BQVIsRUFBcEI7O0FBRUEsSUFBTUMscUJBQXFCLEdBQUdILE9BQU8sQ0FBQyxzQ0FBRCxDQUFyQzs7QUFFQSxJQUFNSSxhQUFhLEdBQUdKLE9BQU8sQ0FBQyw0QkFBRCxDQUE3QjtBQUVBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUF1QkFDLFdBQVcsQ0FBQ0ksS0FBWixDQUFrQix3QkFBbEIsRUFBNENELGFBQTVDLEVBQTJERCxxQkFBcUIsQ0FBQ0YsV0FBakY7QUFFQUssTUFBTSxDQUFDQyxPQUFQLEdBQWlCTixXQUFqQiIsInNvdXJjZVJvb3QiOiIvaG9tZS9rb2Rlay1zbGV1dGgvRGVza3RvcC9RdWljay1jcmVkaXQvQXBpL0xvYW5zIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgZXhwcmVzcyA9IHJlcXVpcmUoJ2V4cHJlc3MnKTtcblxuY29uc3QgYXBwcm92ZUxvYW4gPSBleHByZXNzLlJvdXRlcigpO1xuXG5jb25zdCBhcHByb3ZlTG9hbkNvbnRyb2xsZXIgPSByZXF1aXJlKCcuLi9Db250cm9sbGVycy9hcHByb3ZlTG9hbkNvbnRyb2xsZXInKTtcblxuY29uc3Qgand0TWlkZGxld2FyZSA9IHJlcXVpcmUoJy4uL1NldHRpbmdzL2NoZWNrQXV0aEFkbWluJyk7XG5cbi8qKlxuKiBAc3dhZ2dlclxuKiAvYXBpL3YxL2FkbWluL2xvYW5zL3s6bG9hbklkfS9hcHByb3ZlOlxuKiAgIHBhdGNoOlxuKiAgICAgc2VjdXJpdHk6XG4qICAgICAgICAtIGJlYXJlckF1dGg6IFtdXG4qICAgICB0YWdzOlxuKiAgICAgICAtIFZlcmlmaWNhdGlvbnMsIEFwcHJvdmFscyAmIFJlamVjdGlvbnNcbiogICAgIG5hbWU6IEFwcHJvdmUgTG9hblxuKiAgICAgc3VtbWFyeTogQXBwcm92ZXMgTG9hblxuKiAgICAgcGFyYW1ldGVyczpcbiogICAgICAgLSBuYW1lOiBcIjpsb2FuSWRcIlxuKiAgICAgICAgIGluOiBwYXRoXG4qICAgICAgICAgZGVzY3JpcHRpb246IElkIG9mIExvYW5cbiogICAgICAgICByZXF1aXJlZDogdHJ1ZVxuKiAgICAgICAgIHR5cGU6IGludGVnZXJcbiogICAgIHJlc3BvbnNlczpcbiogICAgICAgMjAxOlxuKiAgICAgICAgIGRlc2NyaXB0aW9uOiBTdWNjZXNzZnVsbHkgQXBwbGllZCBGb3IgTG9hblxuKiAgICAgICA0MDE6XG4qICAgICAgICAgZGVzY3JpcHRpb246IEZhaWxlZCB0byBwcm9jZXNzIHJlcXVlc3QsIFRyeSBhZ2FpbiBsYXRlclxuKi9cblxuYXBwcm92ZUxvYW4ucGF0Y2goJy9sb2Fucy86bG9hbklkL2FwcHJvdmUnLCBqd3RNaWRkbGV3YXJlLCBhcHByb3ZlTG9hbkNvbnRyb2xsZXIuYXBwcm92ZUxvYW4pO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGFwcHJvdmVMb2FuO1xuIl19",
    "map": {
      "version": 3,
      "sources": [
        "approveLoan.js"
      ],
      "names": [
        "express",
        "require",
        "approveLoan",
        "Router",
        "approveLoanController",
        "jwtMiddleware",
        "patch",
        "module",
        "exports"
      ],
      "mappings": ";;AAAA,IAAMA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;AAEA,IAAMC,WAAW,GAAGF,OAAO,CAACG,MAAR,EAApB;;AAEA,IAAMC,qBAAqB,GAAGH,OAAO,CAAC,sCAAD,CAArC;;AAEA,IAAMI,aAAa,GAAGJ,OAAO,CAAC,4BAAD,CAA7B;AAEA;;;;;;;;;;;;;;;;;;;;;;;;AAuBAC,WAAW,CAACI,KAAZ,CAAkB,wBAAlB,EAA4CD,aAA5C,EAA2DD,qBAAqB,CAACF,WAAjF;AAEAK,MAAM,CAACC,OAAP,GAAiBN,WAAjB",
      "sourceRoot": "/home/kodek-sleuth/Desktop/Quick-credit/Api/Loans",
      "sourcesContent": [
        "const express = require('express');\n\nconst approveLoan = express.Router();\n\nconst approveLoanController = require('../Controllers/approveLoanController');\n\nconst jwtMiddleware = require('../Settings/checkAuthAdmin');\n\n/**\n* @swagger\n* /api/v1/admin/loans/{:loanId}/approve:\n*   patch:\n*     security:\n*        - bearerAuth: []\n*     tags:\n*       - Verifications, Approvals & Rejections\n*     name: Approve Loan\n*     summary: Approves Loan\n*     parameters:\n*       - name: \":loanId\"\n*         in: path\n*         description: Id of Loan\n*         required: true\n*         type: integer\n*     responses:\n*       201:\n*         description: Successfully Applied For Loan\n*       401:\n*         description: Failed to process request, Try again later\n*/\n\napproveLoan.patch('/loans/:loanId/approve', jwtMiddleware, approveLoanController.approveLoan);\n\nmodule.exports = approveLoan;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1557385196458
  },
  "{\"sourceRoot\":\"/home/kodek-sleuth/Desktop/Quick-credit/Api/Controllers\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/kodek-sleuth/Desktop/Quick-credit\",\"filename\":\"/home/kodek-sleuth/Desktop/Quick-credit/Api/Controllers/approveLoanController.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/kodek-sleuth/Desktop/Quick-credit\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/kodek-sleuth/Desktop/Quick-credit/Api/Controllers",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/kodek-sleuth/Desktop/Quick-credit",
      "filename": "/home/kodek-sleuth/Desktop/Quick-credit/Api/Controllers/approveLoanController.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/kodek-sleuth/Desktop/Quick-credit",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/kodek-sleuth/Desktop/Quick-credit/Api/Controllers/approveLoanController.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/home/kodek-sleuth/Desktop/Quick-credit/Api/Controllers/approveLoanController.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/kodek-sleuth/Desktop/Quick-credit/Api/Controllers",
        "sourceFileName": "approveLoanController.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\n/* eslint-disable brace-style */\n\n/* eslint-disable no-trailing-spaces */\n\n/* eslint-disable comma-dangle */\n\n/* eslint-disable indent */\n\n/* eslint-disable no-unused-vars */\n\n/* eslint-disable object-shorthand */\n\n/* eslint-disable prefer-destructuring */\nvar Pool = require('pg').Pool;\n\nvar connectionString = process.env.QUICK_CREDIT_DB_TEST;\nvar pool = new Pool({\n  connectionString: connectionString\n}); // An Approval is an update on the status\n\nexports.approveLoan = function (req, res, next) {\n  var loanId = req.params.loanId;\n  var verifyLoanQuery = \"Update loan SET status='Approved' where id='\".concat(loanId, \"'\");\n  pool.query(verifyLoanQuery).then(function (result) {\n    pool.query(\"Select * from loan where id='\".concat(loanId, \"'\")).then(function (data) {\n      if (data.rowCount > 0) {\n        var dataFound = data.rows;\n        res.status(200).json({\n          Status: 200,\n          Data: {\n            Fullname: dataFound[0].investee_name,\n            Email: dataFound[0].investee_email,\n            Status: dataFound[0].status,\n            Amount: dataFound[0].amount,\n            Installment: dataFound[0].paymentinstallment,\n            Balance: dataFound[0].balance,\n            Repaid: dataFound[0].repaid,\n            Tenor: \"\".concat(dataFound[0].tenor, \" months\")\n          },\n          Success: 'Successfully Approved Loan'\n        });\n      }\n    })[\"catch\"](function (error) {\n      res.status(500).json({\n        Status: '500',\n        Error: error.message\n      });\n    });\n  })[\"catch\"](function (error) {\n    res.status(500).json({\n      Status: '500',\n      Error: error.message\n    });\n  });\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcHJvdmVMb2FuQ29udHJvbGxlci5qcyJdLCJuYW1lcyI6WyJQb29sIiwicmVxdWlyZSIsImNvbm5lY3Rpb25TdHJpbmciLCJwcm9jZXNzIiwiZW52IiwiUVVJQ0tfQ1JFRElUX0RCX1RFU1QiLCJwb29sIiwiZXhwb3J0cyIsImFwcHJvdmVMb2FuIiwicmVxIiwicmVzIiwibmV4dCIsImxvYW5JZCIsInBhcmFtcyIsInZlcmlmeUxvYW5RdWVyeSIsInF1ZXJ5IiwidGhlbiIsInJlc3VsdCIsImRhdGEiLCJyb3dDb3VudCIsImRhdGFGb3VuZCIsInJvd3MiLCJzdGF0dXMiLCJqc29uIiwiU3RhdHVzIiwiRGF0YSIsIkZ1bGxuYW1lIiwiaW52ZXN0ZWVfbmFtZSIsIkVtYWlsIiwiaW52ZXN0ZWVfZW1haWwiLCJBbW91bnQiLCJhbW91bnQiLCJJbnN0YWxsbWVudCIsInBheW1lbnRpbnN0YWxsbWVudCIsIkJhbGFuY2UiLCJiYWxhbmNlIiwiUmVwYWlkIiwicmVwYWlkIiwiVGVub3IiLCJ0ZW5vciIsIlN1Y2Nlc3MiLCJlcnJvciIsIkVycm9yIiwibWVzc2FnZSJdLCJtYXBwaW5ncyI6Ijs7QUFBQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTtBQUVBLElBQU1BLElBQUksR0FBR0MsT0FBTyxDQUFDLElBQUQsQ0FBUCxDQUFjRCxJQUEzQjs7QUFFQSxJQUFNRSxnQkFBZ0IsR0FBR0MsT0FBTyxDQUFDQyxHQUFSLENBQVlDLG9CQUFyQztBQUVBLElBQU1DLElBQUksR0FBRyxJQUFJTixJQUFKLENBQVM7QUFBRUUsRUFBQUEsZ0JBQWdCLEVBQUVBO0FBQXBCLENBQVQsQ0FBYixDLENBRUE7O0FBQ0FLLE9BQU8sQ0FBQ0MsV0FBUixHQUFzQixVQUFDQyxHQUFELEVBQU1DLEdBQU4sRUFBV0MsSUFBWCxFQUFvQjtBQUN0QyxNQUFNQyxNQUFNLEdBQUdILEdBQUcsQ0FBQ0ksTUFBSixDQUFXRCxNQUExQjtBQUVBLE1BQU1FLGVBQWUseURBQWtERixNQUFsRCxNQUFyQjtBQUVBTixFQUFBQSxJQUFJLENBQUNTLEtBQUwsQ0FBV0QsZUFBWCxFQUNDRSxJQURELENBQ00sVUFBQ0MsTUFBRCxFQUFZO0FBQ2RYLElBQUFBLElBQUksQ0FBQ1MsS0FBTCx3Q0FBMkNILE1BQTNDLFFBQ0NJLElBREQsQ0FDTSxVQUFDRSxJQUFELEVBQVU7QUFDWixVQUFJQSxJQUFJLENBQUNDLFFBQUwsR0FBZ0IsQ0FBcEIsRUFDQTtBQUNJLFlBQU1DLFNBQVMsR0FBR0YsSUFBSSxDQUFDRyxJQUF2QjtBQUNBWCxRQUFBQSxHQUFHLENBQUNZLE1BQUosQ0FBVyxHQUFYLEVBQWdCQyxJQUFoQixDQUFxQjtBQUNqQkMsVUFBQUEsTUFBTSxFQUFFLEdBRFM7QUFFakJDLFVBQUFBLElBQUksRUFBRTtBQUNGQyxZQUFBQSxRQUFRLEVBQUVOLFNBQVMsQ0FBQyxDQUFELENBQVQsQ0FBYU8sYUFEckI7QUFFRkMsWUFBQUEsS0FBSyxFQUFFUixTQUFTLENBQUMsQ0FBRCxDQUFULENBQWFTLGNBRmxCO0FBR0ZMLFlBQUFBLE1BQU0sRUFBRUosU0FBUyxDQUFDLENBQUQsQ0FBVCxDQUFhRSxNQUhuQjtBQUlGUSxZQUFBQSxNQUFNLEVBQUVWLFNBQVMsQ0FBQyxDQUFELENBQVQsQ0FBYVcsTUFKbkI7QUFLRkMsWUFBQUEsV0FBVyxFQUFFWixTQUFTLENBQUMsQ0FBRCxDQUFULENBQWFhLGtCQUx4QjtBQU1GQyxZQUFBQSxPQUFPLEVBQUVkLFNBQVMsQ0FBQyxDQUFELENBQVQsQ0FBYWUsT0FOcEI7QUFPRkMsWUFBQUEsTUFBTSxFQUFFaEIsU0FBUyxDQUFDLENBQUQsQ0FBVCxDQUFhaUIsTUFQbkI7QUFRRkMsWUFBQUEsS0FBSyxZQUFLbEIsU0FBUyxDQUFDLENBQUQsQ0FBVCxDQUFhbUIsS0FBbEI7QUFSSCxXQUZXO0FBWWpCQyxVQUFBQSxPQUFPLEVBQUU7QUFaUSxTQUFyQjtBQWNIO0FBQ0osS0FwQkQsV0FxQk8sVUFBQ0MsS0FBRCxFQUFXO0FBQ2QvQixNQUFBQSxHQUFHLENBQUNZLE1BQUosQ0FBVyxHQUFYLEVBQWdCQyxJQUFoQixDQUFxQjtBQUNqQkMsUUFBQUEsTUFBTSxFQUFFLEtBRFM7QUFFakJrQixRQUFBQSxLQUFLLEVBQUVELEtBQUssQ0FBQ0U7QUFGSSxPQUFyQjtBQUlILEtBMUJEO0FBMkJILEdBN0JELFdBOEJPLFVBQUNGLEtBQUQsRUFBVztBQUNkL0IsSUFBQUEsR0FBRyxDQUFDWSxNQUFKLENBQVcsR0FBWCxFQUFnQkMsSUFBaEIsQ0FBcUI7QUFDakJDLE1BQUFBLE1BQU0sRUFBRSxLQURTO0FBRWpCa0IsTUFBQUEsS0FBSyxFQUFFRCxLQUFLLENBQUNFO0FBRkksS0FBckI7QUFJSCxHQW5DRDtBQW9DSCxDQXpDRCIsInNvdXJjZVJvb3QiOiIvaG9tZS9rb2Rlay1zbGV1dGgvRGVza3RvcC9RdWljay1jcmVkaXQvQXBpL0NvbnRyb2xsZXJzIiwic291cmNlc0NvbnRlbnQiOlsiLyogZXNsaW50LWRpc2FibGUgYnJhY2Utc3R5bGUgKi9cbi8qIGVzbGludC1kaXNhYmxlIG5vLXRyYWlsaW5nLXNwYWNlcyAqL1xuLyogZXNsaW50LWRpc2FibGUgY29tbWEtZGFuZ2xlICovXG4vKiBlc2xpbnQtZGlzYWJsZSBpbmRlbnQgKi9cbi8qIGVzbGludC1kaXNhYmxlIG5vLXVudXNlZC12YXJzICovXG4vKiBlc2xpbnQtZGlzYWJsZSBvYmplY3Qtc2hvcnRoYW5kICovXG4vKiBlc2xpbnQtZGlzYWJsZSBwcmVmZXItZGVzdHJ1Y3R1cmluZyAqL1xuXG5jb25zdCBQb29sID0gcmVxdWlyZSgncGcnKS5Qb29sO1xuXG5jb25zdCBjb25uZWN0aW9uU3RyaW5nID0gcHJvY2Vzcy5lbnYuUVVJQ0tfQ1JFRElUX0RCX1RFU1Q7XG5cbmNvbnN0IHBvb2wgPSBuZXcgUG9vbCh7IGNvbm5lY3Rpb25TdHJpbmc6IGNvbm5lY3Rpb25TdHJpbmcgfSk7XG5cbi8vIEFuIEFwcHJvdmFsIGlzIGFuIHVwZGF0ZSBvbiB0aGUgc3RhdHVzXG5leHBvcnRzLmFwcHJvdmVMb2FuID0gKHJlcSwgcmVzLCBuZXh0KSA9PiB7XG4gICAgY29uc3QgbG9hbklkID0gcmVxLnBhcmFtcy5sb2FuSWQ7XG5cbiAgICBjb25zdCB2ZXJpZnlMb2FuUXVlcnkgPSBgVXBkYXRlIGxvYW4gU0VUIHN0YXR1cz0nQXBwcm92ZWQnIHdoZXJlIGlkPScke2xvYW5JZH0nYDtcblxuICAgIHBvb2wucXVlcnkodmVyaWZ5TG9hblF1ZXJ5KVxuICAgIC50aGVuKChyZXN1bHQpID0+IHtcbiAgICAgICAgcG9vbC5xdWVyeShgU2VsZWN0ICogZnJvbSBsb2FuIHdoZXJlIGlkPScke2xvYW5JZH0nYClcbiAgICAgICAgLnRoZW4oKGRhdGEpID0+IHtcbiAgICAgICAgICAgIGlmIChkYXRhLnJvd0NvdW50ID4gMClcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBjb25zdCBkYXRhRm91bmQgPSBkYXRhLnJvd3M7XG4gICAgICAgICAgICAgICAgcmVzLnN0YXR1cygyMDApLmpzb24oe1xuICAgICAgICAgICAgICAgICAgICBTdGF0dXM6IDIwMCxcbiAgICAgICAgICAgICAgICAgICAgRGF0YToge1xuICAgICAgICAgICAgICAgICAgICAgICAgRnVsbG5hbWU6IGRhdGFGb3VuZFswXS5pbnZlc3RlZV9uYW1lLFxuICAgICAgICAgICAgICAgICAgICAgICAgRW1haWw6IGRhdGFGb3VuZFswXS5pbnZlc3RlZV9lbWFpbCxcbiAgICAgICAgICAgICAgICAgICAgICAgIFN0YXR1czogZGF0YUZvdW5kWzBdLnN0YXR1cyxcbiAgICAgICAgICAgICAgICAgICAgICAgIEFtb3VudDogZGF0YUZvdW5kWzBdLmFtb3VudCxcbiAgICAgICAgICAgICAgICAgICAgICAgIEluc3RhbGxtZW50OiBkYXRhRm91bmRbMF0ucGF5bWVudGluc3RhbGxtZW50LFxuICAgICAgICAgICAgICAgICAgICAgICAgQmFsYW5jZTogZGF0YUZvdW5kWzBdLmJhbGFuY2UsXG4gICAgICAgICAgICAgICAgICAgICAgICBSZXBhaWQ6IGRhdGFGb3VuZFswXS5yZXBhaWQsXG4gICAgICAgICAgICAgICAgICAgICAgICBUZW5vcjogYCR7ZGF0YUZvdW5kWzBdLnRlbm9yfSBtb250aHNgXG4gICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgIFN1Y2Nlc3M6ICdTdWNjZXNzZnVsbHkgQXBwcm92ZWQgTG9hbidcbiAgICAgICAgICAgICAgICB9KTsgXG4gICAgICAgICAgICB9XG4gICAgICAgIH0pXG4gICAgICAgIC5jYXRjaCgoZXJyb3IpID0+IHtcbiAgICAgICAgICAgIHJlcy5zdGF0dXMoNTAwKS5qc29uKHtcbiAgICAgICAgICAgICAgICBTdGF0dXM6ICc1MDAnLFxuICAgICAgICAgICAgICAgIEVycm9yOiBlcnJvci5tZXNzYWdlXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfSk7XG4gICAgfSlcbiAgICAuY2F0Y2goKGVycm9yKSA9PiB7XG4gICAgICAgIHJlcy5zdGF0dXMoNTAwKS5qc29uKHtcbiAgICAgICAgICAgIFN0YXR1czogJzUwMCcsXG4gICAgICAgICAgICBFcnJvcjogZXJyb3IubWVzc2FnZVxuICAgICAgICB9KTtcbiAgICB9KTtcbn07XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "approveLoanController.js"
      ],
      "names": [
        "Pool",
        "require",
        "connectionString",
        "process",
        "env",
        "QUICK_CREDIT_DB_TEST",
        "pool",
        "exports",
        "approveLoan",
        "req",
        "res",
        "next",
        "loanId",
        "params",
        "verifyLoanQuery",
        "query",
        "then",
        "result",
        "data",
        "rowCount",
        "dataFound",
        "rows",
        "status",
        "json",
        "Status",
        "Data",
        "Fullname",
        "investee_name",
        "Email",
        "investee_email",
        "Amount",
        "amount",
        "Installment",
        "paymentinstallment",
        "Balance",
        "balance",
        "Repaid",
        "repaid",
        "Tenor",
        "tenor",
        "Success",
        "error",
        "Error",
        "message"
      ],
      "mappings": ";;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;AAEA,IAAMA,IAAI,GAAGC,OAAO,CAAC,IAAD,CAAP,CAAcD,IAA3B;;AAEA,IAAME,gBAAgB,GAAGC,OAAO,CAACC,GAAR,CAAYC,oBAArC;AAEA,IAAMC,IAAI,GAAG,IAAIN,IAAJ,CAAS;AAAEE,EAAAA,gBAAgB,EAAEA;AAApB,CAAT,CAAb,C,CAEA;;AACAK,OAAO,CAACC,WAAR,GAAsB,UAACC,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AACtC,MAAMC,MAAM,GAAGH,GAAG,CAACI,MAAJ,CAAWD,MAA1B;AAEA,MAAME,eAAe,yDAAkDF,MAAlD,MAArB;AAEAN,EAAAA,IAAI,CAACS,KAAL,CAAWD,eAAX,EACCE,IADD,CACM,UAACC,MAAD,EAAY;AACdX,IAAAA,IAAI,CAACS,KAAL,wCAA2CH,MAA3C,QACCI,IADD,CACM,UAACE,IAAD,EAAU;AACZ,UAAIA,IAAI,CAACC,QAAL,GAAgB,CAApB,EACA;AACI,YAAMC,SAAS,GAAGF,IAAI,CAACG,IAAvB;AACAX,QAAAA,GAAG,CAACY,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACjBC,UAAAA,MAAM,EAAE,GADS;AAEjBC,UAAAA,IAAI,EAAE;AACFC,YAAAA,QAAQ,EAAEN,SAAS,CAAC,CAAD,CAAT,CAAaO,aADrB;AAEFC,YAAAA,KAAK,EAAER,SAAS,CAAC,CAAD,CAAT,CAAaS,cAFlB;AAGFL,YAAAA,MAAM,EAAEJ,SAAS,CAAC,CAAD,CAAT,CAAaE,MAHnB;AAIFQ,YAAAA,MAAM,EAAEV,SAAS,CAAC,CAAD,CAAT,CAAaW,MAJnB;AAKFC,YAAAA,WAAW,EAAEZ,SAAS,CAAC,CAAD,CAAT,CAAaa,kBALxB;AAMFC,YAAAA,OAAO,EAAEd,SAAS,CAAC,CAAD,CAAT,CAAae,OANpB;AAOFC,YAAAA,MAAM,EAAEhB,SAAS,CAAC,CAAD,CAAT,CAAaiB,MAPnB;AAQFC,YAAAA,KAAK,YAAKlB,SAAS,CAAC,CAAD,CAAT,CAAamB,KAAlB;AARH,WAFW;AAYjBC,UAAAA,OAAO,EAAE;AAZQ,SAArB;AAcH;AACJ,KApBD,WAqBO,UAACC,KAAD,EAAW;AACd/B,MAAAA,GAAG,CAACY,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACjBC,QAAAA,MAAM,EAAE,KADS;AAEjBkB,QAAAA,KAAK,EAAED,KAAK,CAACE;AAFI,OAArB;AAIH,KA1BD;AA2BH,GA7BD,WA8BO,UAACF,KAAD,EAAW;AACd/B,IAAAA,GAAG,CAACY,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACjBC,MAAAA,MAAM,EAAE,KADS;AAEjBkB,MAAAA,KAAK,EAAED,KAAK,CAACE;AAFI,KAArB;AAIH,GAnCD;AAoCH,CAzCD",
      "sourceRoot": "/home/kodek-sleuth/Desktop/Quick-credit/Api/Controllers",
      "sourcesContent": [
        "/* eslint-disable brace-style */\n/* eslint-disable no-trailing-spaces */\n/* eslint-disable comma-dangle */\n/* eslint-disable indent */\n/* eslint-disable no-unused-vars */\n/* eslint-disable object-shorthand */\n/* eslint-disable prefer-destructuring */\n\nconst Pool = require('pg').Pool;\n\nconst connectionString = process.env.QUICK_CREDIT_DB_TEST;\n\nconst pool = new Pool({ connectionString: connectionString });\n\n// An Approval is an update on the status\nexports.approveLoan = (req, res, next) => {\n    const loanId = req.params.loanId;\n\n    const verifyLoanQuery = `Update loan SET status='Approved' where id='${loanId}'`;\n\n    pool.query(verifyLoanQuery)\n    .then((result) => {\n        pool.query(`Select * from loan where id='${loanId}'`)\n        .then((data) => {\n            if (data.rowCount > 0)\n            {\n                const dataFound = data.rows;\n                res.status(200).json({\n                    Status: 200,\n                    Data: {\n                        Fullname: dataFound[0].investee_name,\n                        Email: dataFound[0].investee_email,\n                        Status: dataFound[0].status,\n                        Amount: dataFound[0].amount,\n                        Installment: dataFound[0].paymentinstallment,\n                        Balance: dataFound[0].balance,\n                        Repaid: dataFound[0].repaid,\n                        Tenor: `${dataFound[0].tenor} months`\n                    },\n                    Success: 'Successfully Approved Loan'\n                }); \n            }\n        })\n        .catch((error) => {\n            res.status(500).json({\n                Status: '500',\n                Error: error.message\n            });\n        });\n    })\n    .catch((error) => {\n        res.status(500).json({\n            Status: '500',\n            Error: error.message\n        });\n    });\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1557385196458
  },
  "{\"sourceRoot\":\"/home/kodek-sleuth/Desktop/Quick-credit/Api/Loans\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/kodek-sleuth/Desktop/Quick-credit\",\"filename\":\"/home/kodek-sleuth/Desktop/Quick-credit/Api/Loans/postTransaction.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/kodek-sleuth/Desktop/Quick-credit\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/kodek-sleuth/Desktop/Quick-credit/Api/Loans",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/kodek-sleuth/Desktop/Quick-credit",
      "filename": "/home/kodek-sleuth/Desktop/Quick-credit/Api/Loans/postTransaction.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/kodek-sleuth/Desktop/Quick-credit",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/kodek-sleuth/Desktop/Quick-credit/Api/Loans/postTransaction.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/home/kodek-sleuth/Desktop/Quick-credit/Api/Loans/postTransaction.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/kodek-sleuth/Desktop/Quick-credit/Api/Loans",
        "sourceFileName": "postTransaction.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar express = require('express');\n\nvar postTransLoan = express.Router();\n\nvar jwtMiddleware = require('../Settings/checkAuthAdmin');\n\nvar postTransLoanController = require('../Controllers/adminPostTransactionController');\n/**\n* @swagger\n* /api/v1/admin/loans/{:loanId}/transact:\n*   patch:\n*     security:\n*        - bearerAuth: []\n*     tags:\n*       - Admin\n*     name: Admin Post Transaction for user\n*     summary: Admin Post Transaction for user\n*     parameters:\n*       - name: \":loanId\"\n*         in: path\n*         description: Id of Loan\n*         required: true\n*         type: integer\n*     responses:\n*       200:\n*         description: Successfully Placed Transaction for User\n*/\n\n\npostTransLoan.patch('/loans/:loanId/transact', jwtMiddleware, postTransLoanController.postTransaction);\nmodule.exports = postTransLoan;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInBvc3RUcmFuc2FjdGlvbi5qcyJdLCJuYW1lcyI6WyJleHByZXNzIiwicmVxdWlyZSIsInBvc3RUcmFuc0xvYW4iLCJSb3V0ZXIiLCJqd3RNaWRkbGV3YXJlIiwicG9zdFRyYW5zTG9hbkNvbnRyb2xsZXIiLCJwYXRjaCIsInBvc3RUcmFuc2FjdGlvbiIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiI7O0FBQUEsSUFBTUEsT0FBTyxHQUFHQyxPQUFPLENBQUMsU0FBRCxDQUF2Qjs7QUFFQSxJQUFNQyxhQUFhLEdBQUdGLE9BQU8sQ0FBQ0csTUFBUixFQUF0Qjs7QUFFQSxJQUFNQyxhQUFhLEdBQUdILE9BQU8sQ0FBQyw0QkFBRCxDQUE3Qjs7QUFFQSxJQUFNSSx1QkFBdUIsR0FBR0osT0FBTyxDQUFDLCtDQUFELENBQXZDO0FBRUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFxQkFDLGFBQWEsQ0FBQ0ksS0FBZCxDQUFvQix5QkFBcEIsRUFBK0NGLGFBQS9DLEVBQThEQyx1QkFBdUIsQ0FBQ0UsZUFBdEY7QUFFQUMsTUFBTSxDQUFDQyxPQUFQLEdBQWlCUCxhQUFqQiIsInNvdXJjZVJvb3QiOiIvaG9tZS9rb2Rlay1zbGV1dGgvRGVza3RvcC9RdWljay1jcmVkaXQvQXBpL0xvYW5zIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgZXhwcmVzcyA9IHJlcXVpcmUoJ2V4cHJlc3MnKTtcblxuY29uc3QgcG9zdFRyYW5zTG9hbiA9IGV4cHJlc3MuUm91dGVyKCk7XG5cbmNvbnN0IGp3dE1pZGRsZXdhcmUgPSByZXF1aXJlKCcuLi9TZXR0aW5ncy9jaGVja0F1dGhBZG1pbicpO1xuXG5jb25zdCBwb3N0VHJhbnNMb2FuQ29udHJvbGxlciA9IHJlcXVpcmUoJy4uL0NvbnRyb2xsZXJzL2FkbWluUG9zdFRyYW5zYWN0aW9uQ29udHJvbGxlcicpO1xuXG4vKipcbiogQHN3YWdnZXJcbiogL2FwaS92MS9hZG1pbi9sb2Fucy97OmxvYW5JZH0vdHJhbnNhY3Q6XG4qICAgcGF0Y2g6XG4qICAgICBzZWN1cml0eTpcbiogICAgICAgIC0gYmVhcmVyQXV0aDogW11cbiogICAgIHRhZ3M6XG4qICAgICAgIC0gQWRtaW5cbiogICAgIG5hbWU6IEFkbWluIFBvc3QgVHJhbnNhY3Rpb24gZm9yIHVzZXJcbiogICAgIHN1bW1hcnk6IEFkbWluIFBvc3QgVHJhbnNhY3Rpb24gZm9yIHVzZXJcbiogICAgIHBhcmFtZXRlcnM6XG4qICAgICAgIC0gbmFtZTogXCI6bG9hbklkXCJcbiogICAgICAgICBpbjogcGF0aFxuKiAgICAgICAgIGRlc2NyaXB0aW9uOiBJZCBvZiBMb2FuXG4qICAgICAgICAgcmVxdWlyZWQ6IHRydWVcbiogICAgICAgICB0eXBlOiBpbnRlZ2VyXG4qICAgICByZXNwb25zZXM6XG4qICAgICAgIDIwMDpcbiogICAgICAgICBkZXNjcmlwdGlvbjogU3VjY2Vzc2Z1bGx5IFBsYWNlZCBUcmFuc2FjdGlvbiBmb3IgVXNlclxuKi9cblxucG9zdFRyYW5zTG9hbi5wYXRjaCgnL2xvYW5zLzpsb2FuSWQvdHJhbnNhY3QnLCBqd3RNaWRkbGV3YXJlLCBwb3N0VHJhbnNMb2FuQ29udHJvbGxlci5wb3N0VHJhbnNhY3Rpb24pO1xuXG5tb2R1bGUuZXhwb3J0cyA9IHBvc3RUcmFuc0xvYW47XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "postTransaction.js"
      ],
      "names": [
        "express",
        "require",
        "postTransLoan",
        "Router",
        "jwtMiddleware",
        "postTransLoanController",
        "patch",
        "postTransaction",
        "module",
        "exports"
      ],
      "mappings": ";;AAAA,IAAMA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;AAEA,IAAMC,aAAa,GAAGF,OAAO,CAACG,MAAR,EAAtB;;AAEA,IAAMC,aAAa,GAAGH,OAAO,CAAC,4BAAD,CAA7B;;AAEA,IAAMI,uBAAuB,GAAGJ,OAAO,CAAC,+CAAD,CAAvC;AAEA;;;;;;;;;;;;;;;;;;;;;;AAqBAC,aAAa,CAACI,KAAd,CAAoB,yBAApB,EAA+CF,aAA/C,EAA8DC,uBAAuB,CAACE,eAAtF;AAEAC,MAAM,CAACC,OAAP,GAAiBP,aAAjB",
      "sourceRoot": "/home/kodek-sleuth/Desktop/Quick-credit/Api/Loans",
      "sourcesContent": [
        "const express = require('express');\n\nconst postTransLoan = express.Router();\n\nconst jwtMiddleware = require('../Settings/checkAuthAdmin');\n\nconst postTransLoanController = require('../Controllers/adminPostTransactionController');\n\n/**\n* @swagger\n* /api/v1/admin/loans/{:loanId}/transact:\n*   patch:\n*     security:\n*        - bearerAuth: []\n*     tags:\n*       - Admin\n*     name: Admin Post Transaction for user\n*     summary: Admin Post Transaction for user\n*     parameters:\n*       - name: \":loanId\"\n*         in: path\n*         description: Id of Loan\n*         required: true\n*         type: integer\n*     responses:\n*       200:\n*         description: Successfully Placed Transaction for User\n*/\n\npostTransLoan.patch('/loans/:loanId/transact', jwtMiddleware, postTransLoanController.postTransaction);\n\nmodule.exports = postTransLoan;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1557385196458
  },
  "{\"sourceRoot\":\"/home/kodek-sleuth/Desktop/Quick-credit/Api/Controllers\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/kodek-sleuth/Desktop/Quick-credit\",\"filename\":\"/home/kodek-sleuth/Desktop/Quick-credit/Api/Controllers/adminPostTransactionController.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/kodek-sleuth/Desktop/Quick-credit\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/kodek-sleuth/Desktop/Quick-credit/Api/Controllers",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/kodek-sleuth/Desktop/Quick-credit",
      "filename": "/home/kodek-sleuth/Desktop/Quick-credit/Api/Controllers/adminPostTransactionController.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/kodek-sleuth/Desktop/Quick-credit",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/kodek-sleuth/Desktop/Quick-credit/Api/Controllers/adminPostTransactionController.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/home/kodek-sleuth/Desktop/Quick-credit/Api/Controllers/adminPostTransactionController.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/kodek-sleuth/Desktop/Quick-credit/Api/Controllers",
        "sourceFileName": "adminPostTransactionController.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\n/* eslint-disable max-len */\n\n/* eslint-disable eqeqeq */\n\n/* eslint-disable brace-style */\n\n/* eslint-disable no-trailing-spaces */\n\n/* eslint-disable comma-dangle */\n\n/* eslint-disable indent */\n\n/* eslint-disable no-unused-vars */\n\n/* eslint-disable object-shorthand */\n\n/* eslint-disable prefer-destructuring */\nvar Pool = require('pg').Pool;\n\nvar connectionString = process.env.QUICK_CREDIT_DB_TEST;\nvar pool = new Pool({\n  connectionString: connectionString\n}); // The main objective here is to create un update in repaid field of that loan \n\nexports.postTransaction = function (req, res, next) {\n  var loanId = req.params.loanId;\n  var verifyLoanQuery = \"Update loan SET repaid='True' where id='\".concat(loanId, \"'\"); // We checkif the loan Exists \n\n  pool.query(\"Select * from loan where id='\".concat(loanId, \"'\")).then(function (data) {\n    if (data.rowCount > 0) {\n      var dataFound = data.rows; // We make sure that Admin can only Post Transaction of un approved Loan\n\n      if (dataFound[0].status == 'Approved') {\n        // We then make the Update and then make another check to send back current data to the User\n        pool.query(verifyLoanQuery).then(function (feedback) {\n          pool.query(\"SELECT * FROM loan WHERE id=\".concat(loanId)).then(function (newData) {\n            if (newData.rowCount > 0) {\n              var fetchedData = newData.rows;\n              res.status(200).json({\n                Status: 200,\n                Data: {\n                  Fullname: fetchedData[0].investee_name,\n                  Email: fetchedData[0].investee_email,\n                  Status: fetchedData[0].status,\n                  Amount: fetchedData[0].amount,\n                  Installment: fetchedData[0].paymentinstallment,\n                  Balance: fetchedData[0].balance,\n                  Repaid: fetchedData[0].repaid,\n                  Tenor: \"\".concat(fetchedData[0].tenor, \" months\")\n                },\n                Success: 'Successfully Placed Transaction for User'\n              });\n            } else {\n              res.status(500).json({\n                Status: '500',\n                Error: 'No rows Found'\n              });\n            }\n          })[\"catch\"](function (error) {\n            res.status(500).json({\n              Status: '500',\n              Error: error.message\n            });\n          });\n        })[\"catch\"](function (error) {\n          res.status(500).json({\n            Status: '500',\n            Error: error.message\n          });\n        });\n      } else {\n        res.status(500).json({\n          Status: '500',\n          Error: 'Loan has to be Approved inorder to Post Transaction'\n        });\n      }\n    }\n  })[\"catch\"](function (error) {\n    res.status(500).json({\n      Status: '500',\n      Error: error.message\n    });\n  });\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFkbWluUG9zdFRyYW5zYWN0aW9uQ29udHJvbGxlci5qcyJdLCJuYW1lcyI6WyJQb29sIiwicmVxdWlyZSIsImNvbm5lY3Rpb25TdHJpbmciLCJwcm9jZXNzIiwiZW52IiwiUVVJQ0tfQ1JFRElUX0RCX1RFU1QiLCJwb29sIiwiZXhwb3J0cyIsInBvc3RUcmFuc2FjdGlvbiIsInJlcSIsInJlcyIsIm5leHQiLCJsb2FuSWQiLCJwYXJhbXMiLCJ2ZXJpZnlMb2FuUXVlcnkiLCJxdWVyeSIsInRoZW4iLCJkYXRhIiwicm93Q291bnQiLCJkYXRhRm91bmQiLCJyb3dzIiwic3RhdHVzIiwiZmVlZGJhY2siLCJuZXdEYXRhIiwiZmV0Y2hlZERhdGEiLCJqc29uIiwiU3RhdHVzIiwiRGF0YSIsIkZ1bGxuYW1lIiwiaW52ZXN0ZWVfbmFtZSIsIkVtYWlsIiwiaW52ZXN0ZWVfZW1haWwiLCJBbW91bnQiLCJhbW91bnQiLCJJbnN0YWxsbWVudCIsInBheW1lbnRpbnN0YWxsbWVudCIsIkJhbGFuY2UiLCJiYWxhbmNlIiwiUmVwYWlkIiwicmVwYWlkIiwiVGVub3IiLCJ0ZW5vciIsIlN1Y2Nlc3MiLCJFcnJvciIsImVycm9yIiwibWVzc2FnZSJdLCJtYXBwaW5ncyI6Ijs7QUFBQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTtBQUVBLElBQU1BLElBQUksR0FBR0MsT0FBTyxDQUFDLElBQUQsQ0FBUCxDQUFjRCxJQUEzQjs7QUFFQSxJQUFNRSxnQkFBZ0IsR0FBR0MsT0FBTyxDQUFDQyxHQUFSLENBQVlDLG9CQUFyQztBQUVBLElBQU1DLElBQUksR0FBRyxJQUFJTixJQUFKLENBQVM7QUFBRUUsRUFBQUEsZ0JBQWdCLEVBQUVBO0FBQXBCLENBQVQsQ0FBYixDLENBRUE7O0FBQ0FLLE9BQU8sQ0FBQ0MsZUFBUixHQUEwQixVQUFDQyxHQUFELEVBQU1DLEdBQU4sRUFBV0MsSUFBWCxFQUFvQjtBQUMxQyxNQUFNQyxNQUFNLEdBQUdILEdBQUcsQ0FBQ0ksTUFBSixDQUFXRCxNQUExQjtBQUVBLE1BQU1FLGVBQWUscURBQThDRixNQUE5QyxNQUFyQixDQUgwQyxDQUsxQzs7QUFDQU4sRUFBQUEsSUFBSSxDQUFDUyxLQUFMLHdDQUEyQ0gsTUFBM0MsUUFDS0ksSUFETCxDQUNVLFVBQUNDLElBQUQsRUFBVTtBQUNaLFFBQUlBLElBQUksQ0FBQ0MsUUFBTCxHQUFnQixDQUFwQixFQUNBO0FBQ0ksVUFBTUMsU0FBUyxHQUFHRixJQUFJLENBQUNHLElBQXZCLENBREosQ0FHSTs7QUFDQSxVQUFJRCxTQUFTLENBQUMsQ0FBRCxDQUFULENBQWFFLE1BQWIsSUFBdUIsVUFBM0IsRUFDQTtBQUNJO0FBQ0FmLFFBQUFBLElBQUksQ0FBQ1MsS0FBTCxDQUFXRCxlQUFYLEVBQ0NFLElBREQsQ0FDTSxVQUFDTSxRQUFELEVBQWM7QUFDaEJoQixVQUFBQSxJQUFJLENBQUNTLEtBQUwsdUNBQTBDSCxNQUExQyxHQUNDSSxJQURELENBQ00sVUFBQ08sT0FBRCxFQUFhO0FBQ2YsZ0JBQUlBLE9BQU8sQ0FBQ0wsUUFBUixHQUFtQixDQUF2QixFQUNBO0FBQ0ksa0JBQU1NLFdBQVcsR0FBR0QsT0FBTyxDQUFDSCxJQUE1QjtBQUVBVixjQUFBQSxHQUFHLENBQUNXLE1BQUosQ0FBVyxHQUFYLEVBQWdCSSxJQUFoQixDQUFxQjtBQUNqQkMsZ0JBQUFBLE1BQU0sRUFBRSxHQURTO0FBRWpCQyxnQkFBQUEsSUFBSSxFQUFFO0FBQ0ZDLGtCQUFBQSxRQUFRLEVBQUVKLFdBQVcsQ0FBQyxDQUFELENBQVgsQ0FBZUssYUFEdkI7QUFFRkMsa0JBQUFBLEtBQUssRUFBRU4sV0FBVyxDQUFDLENBQUQsQ0FBWCxDQUFlTyxjQUZwQjtBQUdGTCxrQkFBQUEsTUFBTSxFQUFFRixXQUFXLENBQUMsQ0FBRCxDQUFYLENBQWVILE1BSHJCO0FBSUZXLGtCQUFBQSxNQUFNLEVBQUVSLFdBQVcsQ0FBQyxDQUFELENBQVgsQ0FBZVMsTUFKckI7QUFLRkMsa0JBQUFBLFdBQVcsRUFBRVYsV0FBVyxDQUFDLENBQUQsQ0FBWCxDQUFlVyxrQkFMMUI7QUFNRkMsa0JBQUFBLE9BQU8sRUFBRVosV0FBVyxDQUFDLENBQUQsQ0FBWCxDQUFlYSxPQU50QjtBQU9GQyxrQkFBQUEsTUFBTSxFQUFFZCxXQUFXLENBQUMsQ0FBRCxDQUFYLENBQWVlLE1BUHJCO0FBUUZDLGtCQUFBQSxLQUFLLFlBQUtoQixXQUFXLENBQUMsQ0FBRCxDQUFYLENBQWVpQixLQUFwQjtBQVJILGlCQUZXO0FBWWpCQyxnQkFBQUEsT0FBTyxFQUFFO0FBWlEsZUFBckI7QUFjSCxhQWxCRCxNQXFCQTtBQUNJaEMsY0FBQUEsR0FBRyxDQUFDVyxNQUFKLENBQVcsR0FBWCxFQUFnQkksSUFBaEIsQ0FBcUI7QUFDakJDLGdCQUFBQSxNQUFNLEVBQUUsS0FEUztBQUVqQmlCLGdCQUFBQSxLQUFLLEVBQUU7QUFGVSxlQUFyQjtBQUlIO0FBQ0osV0E3QkQsV0ErQk8sVUFBQ0MsS0FBRCxFQUFXO0FBQ2RsQyxZQUFBQSxHQUFHLENBQUNXLE1BQUosQ0FBVyxHQUFYLEVBQWdCSSxJQUFoQixDQUFxQjtBQUNqQkMsY0FBQUEsTUFBTSxFQUFFLEtBRFM7QUFFakJpQixjQUFBQSxLQUFLLEVBQUVDLEtBQUssQ0FBQ0M7QUFGSSxhQUFyQjtBQUlILFdBcENEO0FBcUNILFNBdkNELFdBeUNPLFVBQUNELEtBQUQsRUFBVztBQUNkbEMsVUFBQUEsR0FBRyxDQUFDVyxNQUFKLENBQVcsR0FBWCxFQUFnQkksSUFBaEIsQ0FBcUI7QUFDakJDLFlBQUFBLE1BQU0sRUFBRSxLQURTO0FBRWpCaUIsWUFBQUEsS0FBSyxFQUFFQyxLQUFLLENBQUNDO0FBRkksV0FBckI7QUFJSCxTQTlDRDtBQStDSCxPQWxERCxNQXFEQTtBQUNJbkMsUUFBQUEsR0FBRyxDQUFDVyxNQUFKLENBQVcsR0FBWCxFQUFnQkksSUFBaEIsQ0FBcUI7QUFDakJDLFVBQUFBLE1BQU0sRUFBRSxLQURTO0FBRWpCaUIsVUFBQUEsS0FBSyxFQUFFO0FBRlUsU0FBckI7QUFJSDtBQUNKO0FBQ0osR0FuRUwsV0FxRU8sVUFBQ0MsS0FBRCxFQUFXO0FBQ2RsQyxJQUFBQSxHQUFHLENBQUNXLE1BQUosQ0FBVyxHQUFYLEVBQWdCSSxJQUFoQixDQUFxQjtBQUNqQkMsTUFBQUEsTUFBTSxFQUFFLEtBRFM7QUFFakJpQixNQUFBQSxLQUFLLEVBQUVDLEtBQUssQ0FBQ0M7QUFGSSxLQUFyQjtBQUlILEdBMUVEO0FBMkVILENBakZEIiwic291cmNlUm9vdCI6Ii9ob21lL2tvZGVrLXNsZXV0aC9EZXNrdG9wL1F1aWNrLWNyZWRpdC9BcGkvQ29udHJvbGxlcnMiLCJzb3VyY2VzQ29udGVudCI6WyIvKiBlc2xpbnQtZGlzYWJsZSBtYXgtbGVuICovXG4vKiBlc2xpbnQtZGlzYWJsZSBlcWVxZXEgKi9cbi8qIGVzbGludC1kaXNhYmxlIGJyYWNlLXN0eWxlICovXG4vKiBlc2xpbnQtZGlzYWJsZSBuby10cmFpbGluZy1zcGFjZXMgKi9cbi8qIGVzbGludC1kaXNhYmxlIGNvbW1hLWRhbmdsZSAqL1xuLyogZXNsaW50LWRpc2FibGUgaW5kZW50ICovXG4vKiBlc2xpbnQtZGlzYWJsZSBuby11bnVzZWQtdmFycyAqL1xuLyogZXNsaW50LWRpc2FibGUgb2JqZWN0LXNob3J0aGFuZCAqL1xuLyogZXNsaW50LWRpc2FibGUgcHJlZmVyLWRlc3RydWN0dXJpbmcgKi9cblxuY29uc3QgUG9vbCA9IHJlcXVpcmUoJ3BnJykuUG9vbDtcblxuY29uc3QgY29ubmVjdGlvblN0cmluZyA9IHByb2Nlc3MuZW52LlFVSUNLX0NSRURJVF9EQl9URVNUO1xuXG5jb25zdCBwb29sID0gbmV3IFBvb2woeyBjb25uZWN0aW9uU3RyaW5nOiBjb25uZWN0aW9uU3RyaW5nIH0pO1xuXG4vLyBUaGUgbWFpbiBvYmplY3RpdmUgaGVyZSBpcyB0byBjcmVhdGUgdW4gdXBkYXRlIGluIHJlcGFpZCBmaWVsZCBvZiB0aGF0IGxvYW4gXG5leHBvcnRzLnBvc3RUcmFuc2FjdGlvbiA9IChyZXEsIHJlcywgbmV4dCkgPT4ge1xuICAgIGNvbnN0IGxvYW5JZCA9IHJlcS5wYXJhbXMubG9hbklkO1xuXG4gICAgY29uc3QgdmVyaWZ5TG9hblF1ZXJ5ID0gYFVwZGF0ZSBsb2FuIFNFVCByZXBhaWQ9J1RydWUnIHdoZXJlIGlkPScke2xvYW5JZH0nYDtcblxuICAgIC8vIFdlIGNoZWNraWYgdGhlIGxvYW4gRXhpc3RzIFxuICAgIHBvb2wucXVlcnkoYFNlbGVjdCAqIGZyb20gbG9hbiB3aGVyZSBpZD0nJHtsb2FuSWR9J2ApXG4gICAgICAgIC50aGVuKChkYXRhKSA9PiB7XG4gICAgICAgICAgICBpZiAoZGF0YS5yb3dDb3VudCA+IDApXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgY29uc3QgZGF0YUZvdW5kID0gZGF0YS5yb3dzO1xuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIC8vIFdlIG1ha2Ugc3VyZSB0aGF0IEFkbWluIGNhbiBvbmx5IFBvc3QgVHJhbnNhY3Rpb24gb2YgdW4gYXBwcm92ZWQgTG9hblxuICAgICAgICAgICAgICAgIGlmIChkYXRhRm91bmRbMF0uc3RhdHVzID09ICdBcHByb3ZlZCcpXG4gICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICAvLyBXZSB0aGVuIG1ha2UgdGhlIFVwZGF0ZSBhbmQgdGhlbiBtYWtlIGFub3RoZXIgY2hlY2sgdG8gc2VuZCBiYWNrIGN1cnJlbnQgZGF0YSB0byB0aGUgVXNlclxuICAgICAgICAgICAgICAgICAgICBwb29sLnF1ZXJ5KHZlcmlmeUxvYW5RdWVyeSlcbiAgICAgICAgICAgICAgICAgICAgLnRoZW4oKGZlZWRiYWNrKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgICBwb29sLnF1ZXJ5KGBTRUxFQ1QgKiBGUk9NIGxvYW4gV0hFUkUgaWQ9JHtsb2FuSWR9YClcbiAgICAgICAgICAgICAgICAgICAgICAgIC50aGVuKChuZXdEYXRhKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKG5ld0RhdGEucm93Q291bnQgPiAwKVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgZmV0Y2hlZERhdGEgPSBuZXdEYXRhLnJvd3M7XG5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVzLnN0YXR1cygyMDApLmpzb24oe1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgU3RhdHVzOiAyMDAsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBEYXRhOiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgRnVsbG5hbWU6IGZldGNoZWREYXRhWzBdLmludmVzdGVlX25hbWUsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgRW1haWw6IGZldGNoZWREYXRhWzBdLmludmVzdGVlX2VtYWlsLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFN0YXR1czogZmV0Y2hlZERhdGFbMF0uc3RhdHVzLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIEFtb3VudDogZmV0Y2hlZERhdGFbMF0uYW1vdW50LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIEluc3RhbGxtZW50OiBmZXRjaGVkRGF0YVswXS5wYXltZW50aW5zdGFsbG1lbnQsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgQmFsYW5jZTogZmV0Y2hlZERhdGFbMF0uYmFsYW5jZSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBSZXBhaWQ6IGZldGNoZWREYXRhWzBdLnJlcGFpZCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBUZW5vcjogYCR7ZmV0Y2hlZERhdGFbMF0udGVub3J9IG1vbnRoc2BcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBTdWNjZXNzOiAnU3VjY2Vzc2Z1bGx5IFBsYWNlZCBUcmFuc2FjdGlvbiBmb3IgVXNlcidcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZWxzZVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVzLnN0YXR1cyg1MDApLmpzb24oe1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgU3RhdHVzOiAnNTAwJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIEVycm9yOiAnTm8gcm93cyBGb3VuZCdcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgfSlcblxuICAgICAgICAgICAgICAgICAgICAgICAgLmNhdGNoKChlcnJvcikgPT4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlcy5zdGF0dXMoNTAwKS5qc29uKHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgU3RhdHVzOiAnNTAwJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgRXJyb3I6IGVycm9yLm1lc3NhZ2VcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH0pOyBcbiAgICAgICAgICAgICAgICAgICAgfSlcblxuICAgICAgICAgICAgICAgICAgICAuY2F0Y2goKGVycm9yKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXMuc3RhdHVzKDUwMCkuanNvbih7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgU3RhdHVzOiAnNTAwJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBFcnJvcjogZXJyb3IubWVzc2FnZVxuICAgICAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgIGVsc2VcbiAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgIHJlcy5zdGF0dXMoNTAwKS5qc29uKHtcbiAgICAgICAgICAgICAgICAgICAgICAgIFN0YXR1czogJzUwMCcsXG4gICAgICAgICAgICAgICAgICAgICAgICBFcnJvcjogJ0xvYW4gaGFzIHRvIGJlIEFwcHJvdmVkIGlub3JkZXIgdG8gUG9zdCBUcmFuc2FjdGlvbidcbiAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgfSAgIFxuICAgICAgICAgICAgfVxuICAgICAgICB9KVxuXG4gICAgLmNhdGNoKChlcnJvcikgPT4ge1xuICAgICAgICByZXMuc3RhdHVzKDUwMCkuanNvbih7XG4gICAgICAgICAgICBTdGF0dXM6ICc1MDAnLFxuICAgICAgICAgICAgRXJyb3I6IGVycm9yLm1lc3NhZ2VcbiAgICAgICAgfSk7XG4gICAgfSk7XG59O1xuIl19",
    "map": {
      "version": 3,
      "sources": [
        "adminPostTransactionController.js"
      ],
      "names": [
        "Pool",
        "require",
        "connectionString",
        "process",
        "env",
        "QUICK_CREDIT_DB_TEST",
        "pool",
        "exports",
        "postTransaction",
        "req",
        "res",
        "next",
        "loanId",
        "params",
        "verifyLoanQuery",
        "query",
        "then",
        "data",
        "rowCount",
        "dataFound",
        "rows",
        "status",
        "feedback",
        "newData",
        "fetchedData",
        "json",
        "Status",
        "Data",
        "Fullname",
        "investee_name",
        "Email",
        "investee_email",
        "Amount",
        "amount",
        "Installment",
        "paymentinstallment",
        "Balance",
        "balance",
        "Repaid",
        "repaid",
        "Tenor",
        "tenor",
        "Success",
        "Error",
        "error",
        "message"
      ],
      "mappings": ";;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;AAEA,IAAMA,IAAI,GAAGC,OAAO,CAAC,IAAD,CAAP,CAAcD,IAA3B;;AAEA,IAAME,gBAAgB,GAAGC,OAAO,CAACC,GAAR,CAAYC,oBAArC;AAEA,IAAMC,IAAI,GAAG,IAAIN,IAAJ,CAAS;AAAEE,EAAAA,gBAAgB,EAAEA;AAApB,CAAT,CAAb,C,CAEA;;AACAK,OAAO,CAACC,eAAR,GAA0B,UAACC,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AAC1C,MAAMC,MAAM,GAAGH,GAAG,CAACI,MAAJ,CAAWD,MAA1B;AAEA,MAAME,eAAe,qDAA8CF,MAA9C,MAArB,CAH0C,CAK1C;;AACAN,EAAAA,IAAI,CAACS,KAAL,wCAA2CH,MAA3C,QACKI,IADL,CACU,UAACC,IAAD,EAAU;AACZ,QAAIA,IAAI,CAACC,QAAL,GAAgB,CAApB,EACA;AACI,UAAMC,SAAS,GAAGF,IAAI,CAACG,IAAvB,CADJ,CAGI;;AACA,UAAID,SAAS,CAAC,CAAD,CAAT,CAAaE,MAAb,IAAuB,UAA3B,EACA;AACI;AACAf,QAAAA,IAAI,CAACS,KAAL,CAAWD,eAAX,EACCE,IADD,CACM,UAACM,QAAD,EAAc;AAChBhB,UAAAA,IAAI,CAACS,KAAL,uCAA0CH,MAA1C,GACCI,IADD,CACM,UAACO,OAAD,EAAa;AACf,gBAAIA,OAAO,CAACL,QAAR,GAAmB,CAAvB,EACA;AACI,kBAAMM,WAAW,GAAGD,OAAO,CAACH,IAA5B;AAEAV,cAAAA,GAAG,CAACW,MAAJ,CAAW,GAAX,EAAgBI,IAAhB,CAAqB;AACjBC,gBAAAA,MAAM,EAAE,GADS;AAEjBC,gBAAAA,IAAI,EAAE;AACFC,kBAAAA,QAAQ,EAAEJ,WAAW,CAAC,CAAD,CAAX,CAAeK,aADvB;AAEFC,kBAAAA,KAAK,EAAEN,WAAW,CAAC,CAAD,CAAX,CAAeO,cAFpB;AAGFL,kBAAAA,MAAM,EAAEF,WAAW,CAAC,CAAD,CAAX,CAAeH,MAHrB;AAIFW,kBAAAA,MAAM,EAAER,WAAW,CAAC,CAAD,CAAX,CAAeS,MAJrB;AAKFC,kBAAAA,WAAW,EAAEV,WAAW,CAAC,CAAD,CAAX,CAAeW,kBAL1B;AAMFC,kBAAAA,OAAO,EAAEZ,WAAW,CAAC,CAAD,CAAX,CAAea,OANtB;AAOFC,kBAAAA,MAAM,EAAEd,WAAW,CAAC,CAAD,CAAX,CAAee,MAPrB;AAQFC,kBAAAA,KAAK,YAAKhB,WAAW,CAAC,CAAD,CAAX,CAAeiB,KAApB;AARH,iBAFW;AAYjBC,gBAAAA,OAAO,EAAE;AAZQ,eAArB;AAcH,aAlBD,MAqBA;AACIhC,cAAAA,GAAG,CAACW,MAAJ,CAAW,GAAX,EAAgBI,IAAhB,CAAqB;AACjBC,gBAAAA,MAAM,EAAE,KADS;AAEjBiB,gBAAAA,KAAK,EAAE;AAFU,eAArB;AAIH;AACJ,WA7BD,WA+BO,UAACC,KAAD,EAAW;AACdlC,YAAAA,GAAG,CAACW,MAAJ,CAAW,GAAX,EAAgBI,IAAhB,CAAqB;AACjBC,cAAAA,MAAM,EAAE,KADS;AAEjBiB,cAAAA,KAAK,EAAEC,KAAK,CAACC;AAFI,aAArB;AAIH,WApCD;AAqCH,SAvCD,WAyCO,UAACD,KAAD,EAAW;AACdlC,UAAAA,GAAG,CAACW,MAAJ,CAAW,GAAX,EAAgBI,IAAhB,CAAqB;AACjBC,YAAAA,MAAM,EAAE,KADS;AAEjBiB,YAAAA,KAAK,EAAEC,KAAK,CAACC;AAFI,WAArB;AAIH,SA9CD;AA+CH,OAlDD,MAqDA;AACInC,QAAAA,GAAG,CAACW,MAAJ,CAAW,GAAX,EAAgBI,IAAhB,CAAqB;AACjBC,UAAAA,MAAM,EAAE,KADS;AAEjBiB,UAAAA,KAAK,EAAE;AAFU,SAArB;AAIH;AACJ;AACJ,GAnEL,WAqEO,UAACC,KAAD,EAAW;AACdlC,IAAAA,GAAG,CAACW,MAAJ,CAAW,GAAX,EAAgBI,IAAhB,CAAqB;AACjBC,MAAAA,MAAM,EAAE,KADS;AAEjBiB,MAAAA,KAAK,EAAEC,KAAK,CAACC;AAFI,KAArB;AAIH,GA1ED;AA2EH,CAjFD",
      "sourceRoot": "/home/kodek-sleuth/Desktop/Quick-credit/Api/Controllers",
      "sourcesContent": [
        "/* eslint-disable max-len */\n/* eslint-disable eqeqeq */\n/* eslint-disable brace-style */\n/* eslint-disable no-trailing-spaces */\n/* eslint-disable comma-dangle */\n/* eslint-disable indent */\n/* eslint-disable no-unused-vars */\n/* eslint-disable object-shorthand */\n/* eslint-disable prefer-destructuring */\n\nconst Pool = require('pg').Pool;\n\nconst connectionString = process.env.QUICK_CREDIT_DB_TEST;\n\nconst pool = new Pool({ connectionString: connectionString });\n\n// The main objective here is to create un update in repaid field of that loan \nexports.postTransaction = (req, res, next) => {\n    const loanId = req.params.loanId;\n\n    const verifyLoanQuery = `Update loan SET repaid='True' where id='${loanId}'`;\n\n    // We checkif the loan Exists \n    pool.query(`Select * from loan where id='${loanId}'`)\n        .then((data) => {\n            if (data.rowCount > 0)\n            {\n                const dataFound = data.rows;\n                \n                // We make sure that Admin can only Post Transaction of un approved Loan\n                if (dataFound[0].status == 'Approved')\n                {\n                    // We then make the Update and then make another check to send back current data to the User\n                    pool.query(verifyLoanQuery)\n                    .then((feedback) => {\n                        pool.query(`SELECT * FROM loan WHERE id=${loanId}`)\n                        .then((newData) => {\n                            if (newData.rowCount > 0)\n                            {\n                                const fetchedData = newData.rows;\n\n                                res.status(200).json({\n                                    Status: 200,\n                                    Data: {\n                                        Fullname: fetchedData[0].investee_name,\n                                        Email: fetchedData[0].investee_email,\n                                        Status: fetchedData[0].status,\n                                        Amount: fetchedData[0].amount,\n                                        Installment: fetchedData[0].paymentinstallment,\n                                        Balance: fetchedData[0].balance,\n                                        Repaid: fetchedData[0].repaid,\n                                        Tenor: `${fetchedData[0].tenor} months`\n                                    },\n                                    Success: 'Successfully Placed Transaction for User'\n                                });\n                            }\n\n                            else\n                            {\n                                res.status(500).json({\n                                    Status: '500',\n                                    Error: 'No rows Found'\n                                });\n                            }\n                        })\n\n                        .catch((error) => {\n                            res.status(500).json({\n                                Status: '500',\n                                Error: error.message\n                            });\n                        }); \n                    })\n\n                    .catch((error) => {\n                        res.status(500).json({\n                            Status: '500',\n                            Error: error.message\n                        });\n                    });\n                }\n\n                else\n                {\n                    res.status(500).json({\n                        Status: '500',\n                        Error: 'Loan has to be Approved inorder to Post Transaction'\n                    });\n                }   \n            }\n        })\n\n    .catch((error) => {\n        res.status(500).json({\n            Status: '500',\n            Error: error.message\n        });\n    });\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1557385196454
  },
  "{\"sourceRoot\":\"/home/kodek-sleuth/Desktop/Quick-credit/Api/Loans\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/kodek-sleuth/Desktop/Quick-credit\",\"filename\":\"/home/kodek-sleuth/Desktop/Quick-credit/Api/Loans/rejectLoan.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/kodek-sleuth/Desktop/Quick-credit\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/kodek-sleuth/Desktop/Quick-credit/Api/Loans",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/kodek-sleuth/Desktop/Quick-credit",
      "filename": "/home/kodek-sleuth/Desktop/Quick-credit/Api/Loans/rejectLoan.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/kodek-sleuth/Desktop/Quick-credit",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/kodek-sleuth/Desktop/Quick-credit/Api/Loans/rejectLoan.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/home/kodek-sleuth/Desktop/Quick-credit/Api/Loans/rejectLoan.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/kodek-sleuth/Desktop/Quick-credit/Api/Loans",
        "sourceFileName": "rejectLoan.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar express = require('express');\n\nvar rejectLoan = express.Router();\n\nvar rejectLoanController = require('../Controllers/rejectLoanController');\n\nvar jwtMiddleware = require('../Settings/checkAuthAdmin');\n/**\n* @swagger\n* /api/v1/admin/loans/{:loanId}/reject:\n*   patch:\n*     security:\n*        - bearerAuth: []\n*     tags:\n*       - Verifications, Approvals & Rejections\n*     name: Admin Reject Loan for user\n*     summary: Admin Reject Loan for user\n*     parameters:\n*       - name: \":loanId\"\n*         in: path\n*         description: Id of Loan\n*         required: true\n*         type: integer\n*     responses:\n*       200:\n*         description: Successfully Rejected Loan\n*/\n\n\nrejectLoan.patch('/loans/:loanId/reject', jwtMiddleware, rejectLoanController.rejectLoan);\nmodule.exports = rejectLoan;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJlamVjdExvYW4uanMiXSwibmFtZXMiOlsiZXhwcmVzcyIsInJlcXVpcmUiLCJyZWplY3RMb2FuIiwiUm91dGVyIiwicmVqZWN0TG9hbkNvbnRyb2xsZXIiLCJqd3RNaWRkbGV3YXJlIiwicGF0Y2giLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiOztBQUFBLElBQU1BLE9BQU8sR0FBR0MsT0FBTyxDQUFDLFNBQUQsQ0FBdkI7O0FBRUEsSUFBTUMsVUFBVSxHQUFHRixPQUFPLENBQUNHLE1BQVIsRUFBbkI7O0FBRUEsSUFBTUMsb0JBQW9CLEdBQUdILE9BQU8sQ0FBQyxxQ0FBRCxDQUFwQzs7QUFFQSxJQUFNSSxhQUFhLEdBQUdKLE9BQU8sQ0FBQyw0QkFBRCxDQUE3QjtBQUVBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBcUJBQyxVQUFVLENBQUNJLEtBQVgsQ0FBaUIsdUJBQWpCLEVBQTBDRCxhQUExQyxFQUF5REQsb0JBQW9CLENBQUNGLFVBQTlFO0FBRUFLLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQk4sVUFBakIiLCJzb3VyY2VSb290IjoiL2hvbWUva29kZWstc2xldXRoL0Rlc2t0b3AvUXVpY2stY3JlZGl0L0FwaS9Mb2FucyIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IGV4cHJlc3MgPSByZXF1aXJlKCdleHByZXNzJyk7XG5cbmNvbnN0IHJlamVjdExvYW4gPSBleHByZXNzLlJvdXRlcigpO1xuXG5jb25zdCByZWplY3RMb2FuQ29udHJvbGxlciA9IHJlcXVpcmUoJy4uL0NvbnRyb2xsZXJzL3JlamVjdExvYW5Db250cm9sbGVyJyk7XG5cbmNvbnN0IGp3dE1pZGRsZXdhcmUgPSByZXF1aXJlKCcuLi9TZXR0aW5ncy9jaGVja0F1dGhBZG1pbicpO1xuXG4vKipcbiogQHN3YWdnZXJcbiogL2FwaS92MS9hZG1pbi9sb2Fucy97OmxvYW5JZH0vcmVqZWN0OlxuKiAgIHBhdGNoOlxuKiAgICAgc2VjdXJpdHk6XG4qICAgICAgICAtIGJlYXJlckF1dGg6IFtdXG4qICAgICB0YWdzOlxuKiAgICAgICAtIFZlcmlmaWNhdGlvbnMsIEFwcHJvdmFscyAmIFJlamVjdGlvbnNcbiogICAgIG5hbWU6IEFkbWluIFJlamVjdCBMb2FuIGZvciB1c2VyXG4qICAgICBzdW1tYXJ5OiBBZG1pbiBSZWplY3QgTG9hbiBmb3IgdXNlclxuKiAgICAgcGFyYW1ldGVyczpcbiogICAgICAgLSBuYW1lOiBcIjpsb2FuSWRcIlxuKiAgICAgICAgIGluOiBwYXRoXG4qICAgICAgICAgZGVzY3JpcHRpb246IElkIG9mIExvYW5cbiogICAgICAgICByZXF1aXJlZDogdHJ1ZVxuKiAgICAgICAgIHR5cGU6IGludGVnZXJcbiogICAgIHJlc3BvbnNlczpcbiogICAgICAgMjAwOlxuKiAgICAgICAgIGRlc2NyaXB0aW9uOiBTdWNjZXNzZnVsbHkgUmVqZWN0ZWQgTG9hblxuKi9cblxucmVqZWN0TG9hbi5wYXRjaCgnL2xvYW5zLzpsb2FuSWQvcmVqZWN0Jywgand0TWlkZGxld2FyZSwgcmVqZWN0TG9hbkNvbnRyb2xsZXIucmVqZWN0TG9hbik7XG5cbm1vZHVsZS5leHBvcnRzID0gcmVqZWN0TG9hbjtcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "rejectLoan.js"
      ],
      "names": [
        "express",
        "require",
        "rejectLoan",
        "Router",
        "rejectLoanController",
        "jwtMiddleware",
        "patch",
        "module",
        "exports"
      ],
      "mappings": ";;AAAA,IAAMA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;AAEA,IAAMC,UAAU,GAAGF,OAAO,CAACG,MAAR,EAAnB;;AAEA,IAAMC,oBAAoB,GAAGH,OAAO,CAAC,qCAAD,CAApC;;AAEA,IAAMI,aAAa,GAAGJ,OAAO,CAAC,4BAAD,CAA7B;AAEA;;;;;;;;;;;;;;;;;;;;;;AAqBAC,UAAU,CAACI,KAAX,CAAiB,uBAAjB,EAA0CD,aAA1C,EAAyDD,oBAAoB,CAACF,UAA9E;AAEAK,MAAM,CAACC,OAAP,GAAiBN,UAAjB",
      "sourceRoot": "/home/kodek-sleuth/Desktop/Quick-credit/Api/Loans",
      "sourcesContent": [
        "const express = require('express');\n\nconst rejectLoan = express.Router();\n\nconst rejectLoanController = require('../Controllers/rejectLoanController');\n\nconst jwtMiddleware = require('../Settings/checkAuthAdmin');\n\n/**\n* @swagger\n* /api/v1/admin/loans/{:loanId}/reject:\n*   patch:\n*     security:\n*        - bearerAuth: []\n*     tags:\n*       - Verifications, Approvals & Rejections\n*     name: Admin Reject Loan for user\n*     summary: Admin Reject Loan for user\n*     parameters:\n*       - name: \":loanId\"\n*         in: path\n*         description: Id of Loan\n*         required: true\n*         type: integer\n*     responses:\n*       200:\n*         description: Successfully Rejected Loan\n*/\n\nrejectLoan.patch('/loans/:loanId/reject', jwtMiddleware, rejectLoanController.rejectLoan);\n\nmodule.exports = rejectLoan;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1557385196462
  },
  "{\"sourceRoot\":\"/home/kodek-sleuth/Desktop/Quick-credit/Api/Controllers\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/kodek-sleuth/Desktop/Quick-credit\",\"filename\":\"/home/kodek-sleuth/Desktop/Quick-credit/Api/Controllers/rejectLoanController.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/kodek-sleuth/Desktop/Quick-credit\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/kodek-sleuth/Desktop/Quick-credit/Api/Controllers",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/kodek-sleuth/Desktop/Quick-credit",
      "filename": "/home/kodek-sleuth/Desktop/Quick-credit/Api/Controllers/rejectLoanController.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/kodek-sleuth/Desktop/Quick-credit",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/kodek-sleuth/Desktop/Quick-credit/Api/Controllers/rejectLoanController.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/home/kodek-sleuth/Desktop/Quick-credit/Api/Controllers/rejectLoanController.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/kodek-sleuth/Desktop/Quick-credit/Api/Controllers",
        "sourceFileName": "rejectLoanController.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\n/* eslint-disable brace-style */\n\n/* eslint-disable no-trailing-spaces */\n\n/* eslint-disable comma-dangle */\n\n/* eslint-disable indent */\n\n/* eslint-disable no-unused-vars */\n\n/* eslint-disable object-shorthand */\n\n/* eslint-disable prefer-destructuring */\nvar Pool = require('pg').Pool;\n\nvar connectionString = process.env.QUICK_CREDIT_DB_TEST;\nvar pool = new Pool({\n  connectionString: connectionString\n}); // This func creates un update in the status field and denies User Loan\n\nexports.rejectLoan = function (req, res, next) {\n  var loanId = req.params.loanId;\n  var verifyLoanQuery = \"Update loan SET status='Rejected' where id='\".concat(loanId, \"'\");\n  pool.query(verifyLoanQuery).then(function (result) {\n    pool.query(\"Select * from loan where id='\".concat(loanId, \"'\")).then(function (data) {\n      if (data.rowCount > 0) {\n        var dataFound = data.rows;\n        res.status(200).json({\n          Status: 200,\n          Data: {\n            Fullname: dataFound[0].investee_name,\n            Email: dataFound[0].investee_email,\n            Status: dataFound[0].status,\n            Amount: dataFound[0].amount,\n            Installment: dataFound[0].paymentinstallment,\n            Balance: dataFound[0].balance,\n            Repaid: dataFound[0].repaid,\n            Tenor: \"\".concat(dataFound[0].tenor, \" months\")\n          },\n          Success: 'Successfully Rejected Loan'\n        });\n      }\n    })[\"catch\"](function (error) {\n      res.status(500).json({\n        Status: '500',\n        Error: error.message\n      });\n    });\n  })[\"catch\"](function (error) {\n    res.status(500).json({\n      Status: '500',\n      Error: error.message\n    });\n  });\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJlamVjdExvYW5Db250cm9sbGVyLmpzIl0sIm5hbWVzIjpbIlBvb2wiLCJyZXF1aXJlIiwiY29ubmVjdGlvblN0cmluZyIsInByb2Nlc3MiLCJlbnYiLCJRVUlDS19DUkVESVRfREJfVEVTVCIsInBvb2wiLCJleHBvcnRzIiwicmVqZWN0TG9hbiIsInJlcSIsInJlcyIsIm5leHQiLCJsb2FuSWQiLCJwYXJhbXMiLCJ2ZXJpZnlMb2FuUXVlcnkiLCJxdWVyeSIsInRoZW4iLCJyZXN1bHQiLCJkYXRhIiwicm93Q291bnQiLCJkYXRhRm91bmQiLCJyb3dzIiwic3RhdHVzIiwianNvbiIsIlN0YXR1cyIsIkRhdGEiLCJGdWxsbmFtZSIsImludmVzdGVlX25hbWUiLCJFbWFpbCIsImludmVzdGVlX2VtYWlsIiwiQW1vdW50IiwiYW1vdW50IiwiSW5zdGFsbG1lbnQiLCJwYXltZW50aW5zdGFsbG1lbnQiLCJCYWxhbmNlIiwiYmFsYW5jZSIsIlJlcGFpZCIsInJlcGFpZCIsIlRlbm9yIiwidGVub3IiLCJTdWNjZXNzIiwiZXJyb3IiLCJFcnJvciIsIm1lc3NhZ2UiXSwibWFwcGluZ3MiOiI7O0FBQUE7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7QUFFQSxJQUFNQSxJQUFJLEdBQUdDLE9BQU8sQ0FBQyxJQUFELENBQVAsQ0FBY0QsSUFBM0I7O0FBRUEsSUFBTUUsZ0JBQWdCLEdBQUdDLE9BQU8sQ0FBQ0MsR0FBUixDQUFZQyxvQkFBckM7QUFFQSxJQUFNQyxJQUFJLEdBQUcsSUFBSU4sSUFBSixDQUFTO0FBQUVFLEVBQUFBLGdCQUFnQixFQUFFQTtBQUFwQixDQUFULENBQWIsQyxDQUVBOztBQUNBSyxPQUFPLENBQUNDLFVBQVIsR0FBcUIsVUFBQ0MsR0FBRCxFQUFNQyxHQUFOLEVBQVdDLElBQVgsRUFBb0I7QUFDckMsTUFBTUMsTUFBTSxHQUFHSCxHQUFHLENBQUNJLE1BQUosQ0FBV0QsTUFBMUI7QUFFQSxNQUFNRSxlQUFlLHlEQUFrREYsTUFBbEQsTUFBckI7QUFFQU4sRUFBQUEsSUFBSSxDQUFDUyxLQUFMLENBQVdELGVBQVgsRUFDQ0UsSUFERCxDQUNNLFVBQUNDLE1BQUQsRUFBWTtBQUNkWCxJQUFBQSxJQUFJLENBQUNTLEtBQUwsd0NBQTJDSCxNQUEzQyxRQUNDSSxJQURELENBQ00sVUFBQ0UsSUFBRCxFQUFVO0FBQ1osVUFBSUEsSUFBSSxDQUFDQyxRQUFMLEdBQWdCLENBQXBCLEVBQ0E7QUFDSSxZQUFNQyxTQUFTLEdBQUdGLElBQUksQ0FBQ0csSUFBdkI7QUFDQVgsUUFBQUEsR0FBRyxDQUFDWSxNQUFKLENBQVcsR0FBWCxFQUFnQkMsSUFBaEIsQ0FBcUI7QUFDakJDLFVBQUFBLE1BQU0sRUFBRSxHQURTO0FBRWpCQyxVQUFBQSxJQUFJLEVBQUU7QUFDRkMsWUFBQUEsUUFBUSxFQUFFTixTQUFTLENBQUMsQ0FBRCxDQUFULENBQWFPLGFBRHJCO0FBRUZDLFlBQUFBLEtBQUssRUFBRVIsU0FBUyxDQUFDLENBQUQsQ0FBVCxDQUFhUyxjQUZsQjtBQUdGTCxZQUFBQSxNQUFNLEVBQUVKLFNBQVMsQ0FBQyxDQUFELENBQVQsQ0FBYUUsTUFIbkI7QUFJRlEsWUFBQUEsTUFBTSxFQUFFVixTQUFTLENBQUMsQ0FBRCxDQUFULENBQWFXLE1BSm5CO0FBS0ZDLFlBQUFBLFdBQVcsRUFBRVosU0FBUyxDQUFDLENBQUQsQ0FBVCxDQUFhYSxrQkFMeEI7QUFNRkMsWUFBQUEsT0FBTyxFQUFFZCxTQUFTLENBQUMsQ0FBRCxDQUFULENBQWFlLE9BTnBCO0FBT0ZDLFlBQUFBLE1BQU0sRUFBRWhCLFNBQVMsQ0FBQyxDQUFELENBQVQsQ0FBYWlCLE1BUG5CO0FBUUZDLFlBQUFBLEtBQUssWUFBS2xCLFNBQVMsQ0FBQyxDQUFELENBQVQsQ0FBYW1CLEtBQWxCO0FBUkgsV0FGVztBQVlqQkMsVUFBQUEsT0FBTyxFQUFFO0FBWlEsU0FBckI7QUFjSDtBQUNKLEtBcEJELFdBcUJPLFVBQUNDLEtBQUQsRUFBVztBQUNkL0IsTUFBQUEsR0FBRyxDQUFDWSxNQUFKLENBQVcsR0FBWCxFQUFnQkMsSUFBaEIsQ0FBcUI7QUFDakJDLFFBQUFBLE1BQU0sRUFBRSxLQURTO0FBRWpCa0IsUUFBQUEsS0FBSyxFQUFFRCxLQUFLLENBQUNFO0FBRkksT0FBckI7QUFJSCxLQTFCRDtBQTJCSCxHQTdCRCxXQThCTyxVQUFDRixLQUFELEVBQVc7QUFDZC9CLElBQUFBLEdBQUcsQ0FBQ1ksTUFBSixDQUFXLEdBQVgsRUFBZ0JDLElBQWhCLENBQXFCO0FBQ2pCQyxNQUFBQSxNQUFNLEVBQUUsS0FEUztBQUVqQmtCLE1BQUFBLEtBQUssRUFBRUQsS0FBSyxDQUFDRTtBQUZJLEtBQXJCO0FBSUgsR0FuQ0Q7QUFvQ0gsQ0F6Q0QiLCJzb3VyY2VSb290IjoiL2hvbWUva29kZWstc2xldXRoL0Rlc2t0b3AvUXVpY2stY3JlZGl0L0FwaS9Db250cm9sbGVycyIsInNvdXJjZXNDb250ZW50IjpbIi8qIGVzbGludC1kaXNhYmxlIGJyYWNlLXN0eWxlICovXG4vKiBlc2xpbnQtZGlzYWJsZSBuby10cmFpbGluZy1zcGFjZXMgKi9cbi8qIGVzbGludC1kaXNhYmxlIGNvbW1hLWRhbmdsZSAqL1xuLyogZXNsaW50LWRpc2FibGUgaW5kZW50ICovXG4vKiBlc2xpbnQtZGlzYWJsZSBuby11bnVzZWQtdmFycyAqL1xuLyogZXNsaW50LWRpc2FibGUgb2JqZWN0LXNob3J0aGFuZCAqL1xuLyogZXNsaW50LWRpc2FibGUgcHJlZmVyLWRlc3RydWN0dXJpbmcgKi9cblxuY29uc3QgUG9vbCA9IHJlcXVpcmUoJ3BnJykuUG9vbDtcblxuY29uc3QgY29ubmVjdGlvblN0cmluZyA9IHByb2Nlc3MuZW52LlFVSUNLX0NSRURJVF9EQl9URVNUO1xuXG5jb25zdCBwb29sID0gbmV3IFBvb2woeyBjb25uZWN0aW9uU3RyaW5nOiBjb25uZWN0aW9uU3RyaW5nIH0pO1xuXG4vLyBUaGlzIGZ1bmMgY3JlYXRlcyB1biB1cGRhdGUgaW4gdGhlIHN0YXR1cyBmaWVsZCBhbmQgZGVuaWVzIFVzZXIgTG9hblxuZXhwb3J0cy5yZWplY3RMb2FuID0gKHJlcSwgcmVzLCBuZXh0KSA9PiB7XG4gICAgY29uc3QgbG9hbklkID0gcmVxLnBhcmFtcy5sb2FuSWQ7XG5cbiAgICBjb25zdCB2ZXJpZnlMb2FuUXVlcnkgPSBgVXBkYXRlIGxvYW4gU0VUIHN0YXR1cz0nUmVqZWN0ZWQnIHdoZXJlIGlkPScke2xvYW5JZH0nYDtcblxuICAgIHBvb2wucXVlcnkodmVyaWZ5TG9hblF1ZXJ5KVxuICAgIC50aGVuKChyZXN1bHQpID0+IHtcbiAgICAgICAgcG9vbC5xdWVyeShgU2VsZWN0ICogZnJvbSBsb2FuIHdoZXJlIGlkPScke2xvYW5JZH0nYClcbiAgICAgICAgLnRoZW4oKGRhdGEpID0+IHtcbiAgICAgICAgICAgIGlmIChkYXRhLnJvd0NvdW50ID4gMClcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBjb25zdCBkYXRhRm91bmQgPSBkYXRhLnJvd3M7XG4gICAgICAgICAgICAgICAgcmVzLnN0YXR1cygyMDApLmpzb24oe1xuICAgICAgICAgICAgICAgICAgICBTdGF0dXM6IDIwMCxcbiAgICAgICAgICAgICAgICAgICAgRGF0YToge1xuICAgICAgICAgICAgICAgICAgICAgICAgRnVsbG5hbWU6IGRhdGFGb3VuZFswXS5pbnZlc3RlZV9uYW1lLFxuICAgICAgICAgICAgICAgICAgICAgICAgRW1haWw6IGRhdGFGb3VuZFswXS5pbnZlc3RlZV9lbWFpbCxcbiAgICAgICAgICAgICAgICAgICAgICAgIFN0YXR1czogZGF0YUZvdW5kWzBdLnN0YXR1cyxcbiAgICAgICAgICAgICAgICAgICAgICAgIEFtb3VudDogZGF0YUZvdW5kWzBdLmFtb3VudCxcbiAgICAgICAgICAgICAgICAgICAgICAgIEluc3RhbGxtZW50OiBkYXRhRm91bmRbMF0ucGF5bWVudGluc3RhbGxtZW50LFxuICAgICAgICAgICAgICAgICAgICAgICAgQmFsYW5jZTogZGF0YUZvdW5kWzBdLmJhbGFuY2UsXG4gICAgICAgICAgICAgICAgICAgICAgICBSZXBhaWQ6IGRhdGFGb3VuZFswXS5yZXBhaWQsXG4gICAgICAgICAgICAgICAgICAgICAgICBUZW5vcjogYCR7ZGF0YUZvdW5kWzBdLnRlbm9yfSBtb250aHNgXG4gICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgIFN1Y2Nlc3M6ICdTdWNjZXNzZnVsbHkgUmVqZWN0ZWQgTG9hbidcbiAgICAgICAgICAgICAgICB9KTsgXG4gICAgICAgICAgICB9XG4gICAgICAgIH0pXG4gICAgICAgIC5jYXRjaCgoZXJyb3IpID0+IHtcbiAgICAgICAgICAgIHJlcy5zdGF0dXMoNTAwKS5qc29uKHtcbiAgICAgICAgICAgICAgICBTdGF0dXM6ICc1MDAnLFxuICAgICAgICAgICAgICAgIEVycm9yOiBlcnJvci5tZXNzYWdlXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfSk7XG4gICAgfSlcbiAgICAuY2F0Y2goKGVycm9yKSA9PiB7XG4gICAgICAgIHJlcy5zdGF0dXMoNTAwKS5qc29uKHtcbiAgICAgICAgICAgIFN0YXR1czogJzUwMCcsXG4gICAgICAgICAgICBFcnJvcjogZXJyb3IubWVzc2FnZVxuICAgICAgICB9KTtcbiAgICB9KTtcbn07XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "rejectLoanController.js"
      ],
      "names": [
        "Pool",
        "require",
        "connectionString",
        "process",
        "env",
        "QUICK_CREDIT_DB_TEST",
        "pool",
        "exports",
        "rejectLoan",
        "req",
        "res",
        "next",
        "loanId",
        "params",
        "verifyLoanQuery",
        "query",
        "then",
        "result",
        "data",
        "rowCount",
        "dataFound",
        "rows",
        "status",
        "json",
        "Status",
        "Data",
        "Fullname",
        "investee_name",
        "Email",
        "investee_email",
        "Amount",
        "amount",
        "Installment",
        "paymentinstallment",
        "Balance",
        "balance",
        "Repaid",
        "repaid",
        "Tenor",
        "tenor",
        "Success",
        "error",
        "Error",
        "message"
      ],
      "mappings": ";;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;AAEA,IAAMA,IAAI,GAAGC,OAAO,CAAC,IAAD,CAAP,CAAcD,IAA3B;;AAEA,IAAME,gBAAgB,GAAGC,OAAO,CAACC,GAAR,CAAYC,oBAArC;AAEA,IAAMC,IAAI,GAAG,IAAIN,IAAJ,CAAS;AAAEE,EAAAA,gBAAgB,EAAEA;AAApB,CAAT,CAAb,C,CAEA;;AACAK,OAAO,CAACC,UAAR,GAAqB,UAACC,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AACrC,MAAMC,MAAM,GAAGH,GAAG,CAACI,MAAJ,CAAWD,MAA1B;AAEA,MAAME,eAAe,yDAAkDF,MAAlD,MAArB;AAEAN,EAAAA,IAAI,CAACS,KAAL,CAAWD,eAAX,EACCE,IADD,CACM,UAACC,MAAD,EAAY;AACdX,IAAAA,IAAI,CAACS,KAAL,wCAA2CH,MAA3C,QACCI,IADD,CACM,UAACE,IAAD,EAAU;AACZ,UAAIA,IAAI,CAACC,QAAL,GAAgB,CAApB,EACA;AACI,YAAMC,SAAS,GAAGF,IAAI,CAACG,IAAvB;AACAX,QAAAA,GAAG,CAACY,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACjBC,UAAAA,MAAM,EAAE,GADS;AAEjBC,UAAAA,IAAI,EAAE;AACFC,YAAAA,QAAQ,EAAEN,SAAS,CAAC,CAAD,CAAT,CAAaO,aADrB;AAEFC,YAAAA,KAAK,EAAER,SAAS,CAAC,CAAD,CAAT,CAAaS,cAFlB;AAGFL,YAAAA,MAAM,EAAEJ,SAAS,CAAC,CAAD,CAAT,CAAaE,MAHnB;AAIFQ,YAAAA,MAAM,EAAEV,SAAS,CAAC,CAAD,CAAT,CAAaW,MAJnB;AAKFC,YAAAA,WAAW,EAAEZ,SAAS,CAAC,CAAD,CAAT,CAAaa,kBALxB;AAMFC,YAAAA,OAAO,EAAEd,SAAS,CAAC,CAAD,CAAT,CAAae,OANpB;AAOFC,YAAAA,MAAM,EAAEhB,SAAS,CAAC,CAAD,CAAT,CAAaiB,MAPnB;AAQFC,YAAAA,KAAK,YAAKlB,SAAS,CAAC,CAAD,CAAT,CAAamB,KAAlB;AARH,WAFW;AAYjBC,UAAAA,OAAO,EAAE;AAZQ,SAArB;AAcH;AACJ,KApBD,WAqBO,UAACC,KAAD,EAAW;AACd/B,MAAAA,GAAG,CAACY,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACjBC,QAAAA,MAAM,EAAE,KADS;AAEjBkB,QAAAA,KAAK,EAAED,KAAK,CAACE;AAFI,OAArB;AAIH,KA1BD;AA2BH,GA7BD,WA8BO,UAACF,KAAD,EAAW;AACd/B,IAAAA,GAAG,CAACY,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACjBC,MAAAA,MAAM,EAAE,KADS;AAEjBkB,MAAAA,KAAK,EAAED,KAAK,CAACE;AAFI,KAArB;AAIH,GAnCD;AAoCH,CAzCD",
      "sourceRoot": "/home/kodek-sleuth/Desktop/Quick-credit/Api/Controllers",
      "sourcesContent": [
        "/* eslint-disable brace-style */\n/* eslint-disable no-trailing-spaces */\n/* eslint-disable comma-dangle */\n/* eslint-disable indent */\n/* eslint-disable no-unused-vars */\n/* eslint-disable object-shorthand */\n/* eslint-disable prefer-destructuring */\n\nconst Pool = require('pg').Pool;\n\nconst connectionString = process.env.QUICK_CREDIT_DB_TEST;\n\nconst pool = new Pool({ connectionString: connectionString });\n\n// This func creates un update in the status field and denies User Loan\nexports.rejectLoan = (req, res, next) => {\n    const loanId = req.params.loanId;\n\n    const verifyLoanQuery = `Update loan SET status='Rejected' where id='${loanId}'`;\n\n    pool.query(verifyLoanQuery)\n    .then((result) => {\n        pool.query(`Select * from loan where id='${loanId}'`)\n        .then((data) => {\n            if (data.rowCount > 0)\n            {\n                const dataFound = data.rows;\n                res.status(200).json({\n                    Status: 200,\n                    Data: {\n                        Fullname: dataFound[0].investee_name,\n                        Email: dataFound[0].investee_email,\n                        Status: dataFound[0].status,\n                        Amount: dataFound[0].amount,\n                        Installment: dataFound[0].paymentinstallment,\n                        Balance: dataFound[0].balance,\n                        Repaid: dataFound[0].repaid,\n                        Tenor: `${dataFound[0].tenor} months`\n                    },\n                    Success: 'Successfully Rejected Loan'\n                }); \n            }\n        })\n        .catch((error) => {\n            res.status(500).json({\n                Status: '500',\n                Error: error.message\n            });\n        });\n    })\n    .catch((error) => {\n        res.status(500).json({\n            Status: '500',\n            Error: error.message\n        });\n    });\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1557385196458
  },
  "{\"sourceRoot\":\"/home/kodek-sleuth/Desktop/Quick-credit/Api/Loans\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/kodek-sleuth/Desktop/Quick-credit\",\"filename\":\"/home/kodek-sleuth/Desktop/Quick-credit/Api/Loans/userLoans.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/kodek-sleuth/Desktop/Quick-credit\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/kodek-sleuth/Desktop/Quick-credit/Api/Loans",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/kodek-sleuth/Desktop/Quick-credit",
      "filename": "/home/kodek-sleuth/Desktop/Quick-credit/Api/Loans/userLoans.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/kodek-sleuth/Desktop/Quick-credit",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/kodek-sleuth/Desktop/Quick-credit/Api/Loans/userLoans.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/home/kodek-sleuth/Desktop/Quick-credit/Api/Loans/userLoans.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/kodek-sleuth/Desktop/Quick-credit/Api/Loans",
        "sourceFileName": "userLoans.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar express = require('express');\n\nvar userLoans = express.Router();\n\nvar userLoansController = require('../Controllers/userLoansController');\n/**\n* @swagger\n* /api/v1/user/{:Email}/loans:\n*   get:\n*     security:\n*        - bearerAuth: []\n*     tags:\n*       - User\n*     name: Gets All User's loans in database\n*     summary: Gets All User's loans in database\n*     parameters:\n*       - name: \":Email\"\n*         in: path\n*         description: Email Id of Loan\n*         required: true\n*         type: string\n*     responses:\n*       200:\n*         description: Successfully Fetched Loans\n*/\n\n\nuserLoans.get('/:Email/loans', userLoansController.getLoansApplied);\n/**\n* @swagger\n* /api/v1/user/{:Email}/loans/approved:\n*   get:\n*     security:\n*        - bearerAuth: []\n*     tags:\n*       - User\n*     name: Gets All User's Approved loans in database\n*     summary: Gets All User's Approved loans in database\n*     parameters:\n*       - name: \":Email\"\n*         in: path\n*         description: Email Id of Loan\n*         required: true\n*         type: string\n*     responses:\n*       200:\n*         description: Successfully Fetched Loans\n*/\n\nuserLoans.get('/:Email/loans/approved', userLoansController.getLoansApproved);\n/**\n* @swagger\n* /api/v1/user/{:Email}/loans/rejected:\n*   get:\n*     security:\n*        - bearerAuth: []\n*     tags:\n*       - User\n*     name: Gets All User's Rejected loans in database\n*     summary: Gets All User's Rejected loans in database\n*     parameters:\n*       - name: \":Email\"\n*         in: path\n*         description: Email Id of Loan\n*         required: true\n*         type: string\n*     responses:\n*       200:\n*         description: Successfully Fetched Loans\n*/\n\nuserLoans.get('/:Email/loans/rejected', userLoansController.getLoansRejected);\n/**\n* @swagger\n* /api/v1/user/{:Email}/loans/repaid:\n*   get:\n*     security:\n*        - bearerAuth: []\n*     tags:\n*       - User\n*     name: Gets All User's Repaid loans in database\n*     summary: Gets All User's Repaid loans in database\n*     parameters:\n*       - name: \":Email\"\n*         in: path\n*         description: Email Id of Loan\n*         required: true\n*         type: string\n*     responses:\n*       200:\n*         description: Successfully Fetched Loans\n*/\n\nuserLoans.get('/:Email/loans/repaid', userLoansController.getLoansRepaid);\n/**\n* @swagger\n* /api/v1/user/{:Email}/loans/unrepaid:\n*   get:\n*     security:\n*        - bearerAuth: []\n*     tags:\n*       - User\n*     name: Gets All User's Unrepaid loans in database\n*     summary: Gets All User's Unrepaid loans in database\n*     parameters:\n*       - name: \":Email\"\n*         in: path\n*         description: Email Id of Loan\n*         required: true\n*         type: string\n*     responses:\n*       200:\n*         description: Successfully Fetched Loans\n*/\n\nuserLoans.get('/:Email/loans/unrepaid', userLoansController.getLoansUnrepaid);\nmodule.exports = userLoans;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVzZXJMb2Fucy5qcyJdLCJuYW1lcyI6WyJleHByZXNzIiwicmVxdWlyZSIsInVzZXJMb2FucyIsIlJvdXRlciIsInVzZXJMb2Fuc0NvbnRyb2xsZXIiLCJnZXQiLCJnZXRMb2Fuc0FwcGxpZWQiLCJnZXRMb2Fuc0FwcHJvdmVkIiwiZ2V0TG9hbnNSZWplY3RlZCIsImdldExvYW5zUmVwYWlkIiwiZ2V0TG9hbnNVbnJlcGFpZCIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiI7O0FBQUEsSUFBTUEsT0FBTyxHQUFHQyxPQUFPLENBQUMsU0FBRCxDQUF2Qjs7QUFFQSxJQUFNQyxTQUFTLEdBQUdGLE9BQU8sQ0FBQ0csTUFBUixFQUFsQjs7QUFFQSxJQUFNQyxtQkFBbUIsR0FBR0gsT0FBTyxDQUFDLG9DQUFELENBQW5DO0FBRUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFxQkFDLFNBQVMsQ0FBQ0csR0FBVixDQUFjLGVBQWQsRUFBK0JELG1CQUFtQixDQUFDRSxlQUFuRDtBQUVBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFxQkFKLFNBQVMsQ0FBQ0csR0FBVixDQUFjLHdCQUFkLEVBQXdDRCxtQkFBbUIsQ0FBQ0csZ0JBQTVEO0FBRUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQXFCQUwsU0FBUyxDQUFDRyxHQUFWLENBQWMsd0JBQWQsRUFBd0NELG1CQUFtQixDQUFDSSxnQkFBNUQ7QUFFQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBcUJBTixTQUFTLENBQUNHLEdBQVYsQ0FBYyxzQkFBZCxFQUFzQ0QsbUJBQW1CLENBQUNLLGNBQTFEO0FBRUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQXFCQVAsU0FBUyxDQUFDRyxHQUFWLENBQWMsd0JBQWQsRUFBd0NELG1CQUFtQixDQUFDTSxnQkFBNUQ7QUFFQUMsTUFBTSxDQUFDQyxPQUFQLEdBQWlCVixTQUFqQiIsInNvdXJjZVJvb3QiOiIvaG9tZS9rb2Rlay1zbGV1dGgvRGVza3RvcC9RdWljay1jcmVkaXQvQXBpL0xvYW5zIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgZXhwcmVzcyA9IHJlcXVpcmUoJ2V4cHJlc3MnKTtcblxuY29uc3QgdXNlckxvYW5zID0gZXhwcmVzcy5Sb3V0ZXIoKTtcblxuY29uc3QgdXNlckxvYW5zQ29udHJvbGxlciA9IHJlcXVpcmUoJy4uL0NvbnRyb2xsZXJzL3VzZXJMb2Fuc0NvbnRyb2xsZXInKTtcblxuLyoqXG4qIEBzd2FnZ2VyXG4qIC9hcGkvdjEvdXNlci97OkVtYWlsfS9sb2FuczpcbiogICBnZXQ6XG4qICAgICBzZWN1cml0eTpcbiogICAgICAgIC0gYmVhcmVyQXV0aDogW11cbiogICAgIHRhZ3M6XG4qICAgICAgIC0gVXNlclxuKiAgICAgbmFtZTogR2V0cyBBbGwgVXNlcidzIGxvYW5zIGluIGRhdGFiYXNlXG4qICAgICBzdW1tYXJ5OiBHZXRzIEFsbCBVc2VyJ3MgbG9hbnMgaW4gZGF0YWJhc2VcbiogICAgIHBhcmFtZXRlcnM6XG4qICAgICAgIC0gbmFtZTogXCI6RW1haWxcIlxuKiAgICAgICAgIGluOiBwYXRoXG4qICAgICAgICAgZGVzY3JpcHRpb246IEVtYWlsIElkIG9mIExvYW5cbiogICAgICAgICByZXF1aXJlZDogdHJ1ZVxuKiAgICAgICAgIHR5cGU6IHN0cmluZ1xuKiAgICAgcmVzcG9uc2VzOlxuKiAgICAgICAyMDA6XG4qICAgICAgICAgZGVzY3JpcHRpb246IFN1Y2Nlc3NmdWxseSBGZXRjaGVkIExvYW5zXG4qL1xuXG51c2VyTG9hbnMuZ2V0KCcvOkVtYWlsL2xvYW5zJywgdXNlckxvYW5zQ29udHJvbGxlci5nZXRMb2Fuc0FwcGxpZWQpO1xuXG4vKipcbiogQHN3YWdnZXJcbiogL2FwaS92MS91c2VyL3s6RW1haWx9L2xvYW5zL2FwcHJvdmVkOlxuKiAgIGdldDpcbiogICAgIHNlY3VyaXR5OlxuKiAgICAgICAgLSBiZWFyZXJBdXRoOiBbXVxuKiAgICAgdGFnczpcbiogICAgICAgLSBVc2VyXG4qICAgICBuYW1lOiBHZXRzIEFsbCBVc2VyJ3MgQXBwcm92ZWQgbG9hbnMgaW4gZGF0YWJhc2VcbiogICAgIHN1bW1hcnk6IEdldHMgQWxsIFVzZXIncyBBcHByb3ZlZCBsb2FucyBpbiBkYXRhYmFzZVxuKiAgICAgcGFyYW1ldGVyczpcbiogICAgICAgLSBuYW1lOiBcIjpFbWFpbFwiXG4qICAgICAgICAgaW46IHBhdGhcbiogICAgICAgICBkZXNjcmlwdGlvbjogRW1haWwgSWQgb2YgTG9hblxuKiAgICAgICAgIHJlcXVpcmVkOiB0cnVlXG4qICAgICAgICAgdHlwZTogc3RyaW5nXG4qICAgICByZXNwb25zZXM6XG4qICAgICAgIDIwMDpcbiogICAgICAgICBkZXNjcmlwdGlvbjogU3VjY2Vzc2Z1bGx5IEZldGNoZWQgTG9hbnNcbiovXG5cbnVzZXJMb2Fucy5nZXQoJy86RW1haWwvbG9hbnMvYXBwcm92ZWQnLCB1c2VyTG9hbnNDb250cm9sbGVyLmdldExvYW5zQXBwcm92ZWQpO1xuXG4vKipcbiogQHN3YWdnZXJcbiogL2FwaS92MS91c2VyL3s6RW1haWx9L2xvYW5zL3JlamVjdGVkOlxuKiAgIGdldDpcbiogICAgIHNlY3VyaXR5OlxuKiAgICAgICAgLSBiZWFyZXJBdXRoOiBbXVxuKiAgICAgdGFnczpcbiogICAgICAgLSBVc2VyXG4qICAgICBuYW1lOiBHZXRzIEFsbCBVc2VyJ3MgUmVqZWN0ZWQgbG9hbnMgaW4gZGF0YWJhc2VcbiogICAgIHN1bW1hcnk6IEdldHMgQWxsIFVzZXIncyBSZWplY3RlZCBsb2FucyBpbiBkYXRhYmFzZVxuKiAgICAgcGFyYW1ldGVyczpcbiogICAgICAgLSBuYW1lOiBcIjpFbWFpbFwiXG4qICAgICAgICAgaW46IHBhdGhcbiogICAgICAgICBkZXNjcmlwdGlvbjogRW1haWwgSWQgb2YgTG9hblxuKiAgICAgICAgIHJlcXVpcmVkOiB0cnVlXG4qICAgICAgICAgdHlwZTogc3RyaW5nXG4qICAgICByZXNwb25zZXM6XG4qICAgICAgIDIwMDpcbiogICAgICAgICBkZXNjcmlwdGlvbjogU3VjY2Vzc2Z1bGx5IEZldGNoZWQgTG9hbnNcbiovXG5cbnVzZXJMb2Fucy5nZXQoJy86RW1haWwvbG9hbnMvcmVqZWN0ZWQnLCB1c2VyTG9hbnNDb250cm9sbGVyLmdldExvYW5zUmVqZWN0ZWQpO1xuXG4vKipcbiogQHN3YWdnZXJcbiogL2FwaS92MS91c2VyL3s6RW1haWx9L2xvYW5zL3JlcGFpZDpcbiogICBnZXQ6XG4qICAgICBzZWN1cml0eTpcbiogICAgICAgIC0gYmVhcmVyQXV0aDogW11cbiogICAgIHRhZ3M6XG4qICAgICAgIC0gVXNlclxuKiAgICAgbmFtZTogR2V0cyBBbGwgVXNlcidzIFJlcGFpZCBsb2FucyBpbiBkYXRhYmFzZVxuKiAgICAgc3VtbWFyeTogR2V0cyBBbGwgVXNlcidzIFJlcGFpZCBsb2FucyBpbiBkYXRhYmFzZVxuKiAgICAgcGFyYW1ldGVyczpcbiogICAgICAgLSBuYW1lOiBcIjpFbWFpbFwiXG4qICAgICAgICAgaW46IHBhdGhcbiogICAgICAgICBkZXNjcmlwdGlvbjogRW1haWwgSWQgb2YgTG9hblxuKiAgICAgICAgIHJlcXVpcmVkOiB0cnVlXG4qICAgICAgICAgdHlwZTogc3RyaW5nXG4qICAgICByZXNwb25zZXM6XG4qICAgICAgIDIwMDpcbiogICAgICAgICBkZXNjcmlwdGlvbjogU3VjY2Vzc2Z1bGx5IEZldGNoZWQgTG9hbnNcbiovXG5cbnVzZXJMb2Fucy5nZXQoJy86RW1haWwvbG9hbnMvcmVwYWlkJywgdXNlckxvYW5zQ29udHJvbGxlci5nZXRMb2Fuc1JlcGFpZCk7XG5cbi8qKlxuKiBAc3dhZ2dlclxuKiAvYXBpL3YxL3VzZXIvezpFbWFpbH0vbG9hbnMvdW5yZXBhaWQ6XG4qICAgZ2V0OlxuKiAgICAgc2VjdXJpdHk6XG4qICAgICAgICAtIGJlYXJlckF1dGg6IFtdXG4qICAgICB0YWdzOlxuKiAgICAgICAtIFVzZXJcbiogICAgIG5hbWU6IEdldHMgQWxsIFVzZXIncyBVbnJlcGFpZCBsb2FucyBpbiBkYXRhYmFzZVxuKiAgICAgc3VtbWFyeTogR2V0cyBBbGwgVXNlcidzIFVucmVwYWlkIGxvYW5zIGluIGRhdGFiYXNlXG4qICAgICBwYXJhbWV0ZXJzOlxuKiAgICAgICAtIG5hbWU6IFwiOkVtYWlsXCJcbiogICAgICAgICBpbjogcGF0aFxuKiAgICAgICAgIGRlc2NyaXB0aW9uOiBFbWFpbCBJZCBvZiBMb2FuXG4qICAgICAgICAgcmVxdWlyZWQ6IHRydWVcbiogICAgICAgICB0eXBlOiBzdHJpbmdcbiogICAgIHJlc3BvbnNlczpcbiogICAgICAgMjAwOlxuKiAgICAgICAgIGRlc2NyaXB0aW9uOiBTdWNjZXNzZnVsbHkgRmV0Y2hlZCBMb2Fuc1xuKi9cblxudXNlckxvYW5zLmdldCgnLzpFbWFpbC9sb2Fucy91bnJlcGFpZCcsIHVzZXJMb2Fuc0NvbnRyb2xsZXIuZ2V0TG9hbnNVbnJlcGFpZCk7XG5cbm1vZHVsZS5leHBvcnRzID0gdXNlckxvYW5zO1xuIl19",
    "map": {
      "version": 3,
      "sources": [
        "userLoans.js"
      ],
      "names": [
        "express",
        "require",
        "userLoans",
        "Router",
        "userLoansController",
        "get",
        "getLoansApplied",
        "getLoansApproved",
        "getLoansRejected",
        "getLoansRepaid",
        "getLoansUnrepaid",
        "module",
        "exports"
      ],
      "mappings": ";;AAAA,IAAMA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;AAEA,IAAMC,SAAS,GAAGF,OAAO,CAACG,MAAR,EAAlB;;AAEA,IAAMC,mBAAmB,GAAGH,OAAO,CAAC,oCAAD,CAAnC;AAEA;;;;;;;;;;;;;;;;;;;;;;AAqBAC,SAAS,CAACG,GAAV,CAAc,eAAd,EAA+BD,mBAAmB,CAACE,eAAnD;AAEA;;;;;;;;;;;;;;;;;;;;;AAqBAJ,SAAS,CAACG,GAAV,CAAc,wBAAd,EAAwCD,mBAAmB,CAACG,gBAA5D;AAEA;;;;;;;;;;;;;;;;;;;;;AAqBAL,SAAS,CAACG,GAAV,CAAc,wBAAd,EAAwCD,mBAAmB,CAACI,gBAA5D;AAEA;;;;;;;;;;;;;;;;;;;;;AAqBAN,SAAS,CAACG,GAAV,CAAc,sBAAd,EAAsCD,mBAAmB,CAACK,cAA1D;AAEA;;;;;;;;;;;;;;;;;;;;;AAqBAP,SAAS,CAACG,GAAV,CAAc,wBAAd,EAAwCD,mBAAmB,CAACM,gBAA5D;AAEAC,MAAM,CAACC,OAAP,GAAiBV,SAAjB",
      "sourceRoot": "/home/kodek-sleuth/Desktop/Quick-credit/Api/Loans",
      "sourcesContent": [
        "const express = require('express');\n\nconst userLoans = express.Router();\n\nconst userLoansController = require('../Controllers/userLoansController');\n\n/**\n* @swagger\n* /api/v1/user/{:Email}/loans:\n*   get:\n*     security:\n*        - bearerAuth: []\n*     tags:\n*       - User\n*     name: Gets All User's loans in database\n*     summary: Gets All User's loans in database\n*     parameters:\n*       - name: \":Email\"\n*         in: path\n*         description: Email Id of Loan\n*         required: true\n*         type: string\n*     responses:\n*       200:\n*         description: Successfully Fetched Loans\n*/\n\nuserLoans.get('/:Email/loans', userLoansController.getLoansApplied);\n\n/**\n* @swagger\n* /api/v1/user/{:Email}/loans/approved:\n*   get:\n*     security:\n*        - bearerAuth: []\n*     tags:\n*       - User\n*     name: Gets All User's Approved loans in database\n*     summary: Gets All User's Approved loans in database\n*     parameters:\n*       - name: \":Email\"\n*         in: path\n*         description: Email Id of Loan\n*         required: true\n*         type: string\n*     responses:\n*       200:\n*         description: Successfully Fetched Loans\n*/\n\nuserLoans.get('/:Email/loans/approved', userLoansController.getLoansApproved);\n\n/**\n* @swagger\n* /api/v1/user/{:Email}/loans/rejected:\n*   get:\n*     security:\n*        - bearerAuth: []\n*     tags:\n*       - User\n*     name: Gets All User's Rejected loans in database\n*     summary: Gets All User's Rejected loans in database\n*     parameters:\n*       - name: \":Email\"\n*         in: path\n*         description: Email Id of Loan\n*         required: true\n*         type: string\n*     responses:\n*       200:\n*         description: Successfully Fetched Loans\n*/\n\nuserLoans.get('/:Email/loans/rejected', userLoansController.getLoansRejected);\n\n/**\n* @swagger\n* /api/v1/user/{:Email}/loans/repaid:\n*   get:\n*     security:\n*        - bearerAuth: []\n*     tags:\n*       - User\n*     name: Gets All User's Repaid loans in database\n*     summary: Gets All User's Repaid loans in database\n*     parameters:\n*       - name: \":Email\"\n*         in: path\n*         description: Email Id of Loan\n*         required: true\n*         type: string\n*     responses:\n*       200:\n*         description: Successfully Fetched Loans\n*/\n\nuserLoans.get('/:Email/loans/repaid', userLoansController.getLoansRepaid);\n\n/**\n* @swagger\n* /api/v1/user/{:Email}/loans/unrepaid:\n*   get:\n*     security:\n*        - bearerAuth: []\n*     tags:\n*       - User\n*     name: Gets All User's Unrepaid loans in database\n*     summary: Gets All User's Unrepaid loans in database\n*     parameters:\n*       - name: \":Email\"\n*         in: path\n*         description: Email Id of Loan\n*         required: true\n*         type: string\n*     responses:\n*       200:\n*         description: Successfully Fetched Loans\n*/\n\nuserLoans.get('/:Email/loans/unrepaid', userLoansController.getLoansUnrepaid);\n\nmodule.exports = userLoans;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1557385196462
  },
  "{\"sourceRoot\":\"/home/kodek-sleuth/Desktop/Quick-credit/Api/Controllers\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/kodek-sleuth/Desktop/Quick-credit\",\"filename\":\"/home/kodek-sleuth/Desktop/Quick-credit/Api/Controllers/userLoansController.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/kodek-sleuth/Desktop/Quick-credit\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/kodek-sleuth/Desktop/Quick-credit/Api/Controllers",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/kodek-sleuth/Desktop/Quick-credit",
      "filename": "/home/kodek-sleuth/Desktop/Quick-credit/Api/Controllers/userLoansController.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/kodek-sleuth/Desktop/Quick-credit",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/kodek-sleuth/Desktop/Quick-credit/Api/Controllers/userLoansController.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/home/kodek-sleuth/Desktop/Quick-credit/Api/Controllers/userLoansController.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/kodek-sleuth/Desktop/Quick-credit/Api/Controllers",
        "sourceFileName": "userLoansController.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\n/* eslint-disable no-lonely-if */\n\n/* eslint-disable object-shorthand */\n\n/* eslint-disable prefer-destructuring */\n\n/* eslint-disable max-len */\n\n/* eslint-disable no-trailing-spaces */\n\n/* eslint-disable brace-style */\n\n/* eslint-disable no-console */\n\n/* eslint-disable comma-dangle */\n\n/* eslint-disable no-unused-vars */\n\n/* eslint-disable eqeqeq */\n\n/* eslint-disable indent */\nvar Pool = require('pg').Pool;\n\nvar connectionString = process.env.QUICK_CREDIT_DB;\nvar pool = new Pool({\n  connectionString: connectionString\n}); // Function to Update Loans\n\nvar updateLoan = function updateLoan() {\n  pool.query(\"UPDATE loan set repaid='True' WHERE status='Verified' and balance=0.00\").then(function (result) {\n    console.log(result);\n  })[\"catch\"](function (error) {\n    console.log(error);\n  });\n};\n\nexports.getLoansApplied = function (req, res, next) {\n  var Email = req.params.Email;\n  pool.query(\"Select * from loan WHERE investee_email='\".concat(Email, \"'\")).then(function (data) {\n    if (data.rowCount > 0) {\n      var fetchedData1 = data.rows;\n      res.status(200).json({\n        Count: data.rowCount,\n        Status: 200,\n        Data: fetchedData1\n      });\n    } else {\n      res.status(200).json({\n        Count: data.rowCount,\n        Status: 200,\n        Error: 'User has not applied for any loans'\n      });\n    }\n  })[\"catch\"](function (error) {\n    res.status(500).json({\n      Status: 500,\n      Error: error.message\n    });\n  });\n};\n\nexports.getLoansApproved = function (req, res, next) {\n  var Email = req.params.Email;\n  pool.query(\"Select * from loan WHERE investee_email='\".concat(Email, \"' and status='Approved'\")).then(function (data) {\n    if (data.rowCount > 0) {\n      var fetchedData2 = data.rows;\n      res.status(200).json({\n        Count: data.rowCount,\n        Status: 200,\n        Data: fetchedData2\n      });\n    } else {\n      res.status(200).json({\n        Count: data.rowCount,\n        Status: 200,\n        Success: 'User has no approved loans'\n      });\n    }\n  })[\"catch\"](function (error) {\n    res.status(500).json({\n      Status: 500,\n      Error: error.message\n    });\n  });\n};\n\nexports.getLoansRejected = function (req, res, next) {\n  var Email = req.params.Email;\n  pool.query(\"Select * from loan WHERE investee_email='\".concat(Email, \"' and status='Rejected'\")).then(function (data) {\n    if (data.rowCount > 0) {\n      var fetchedData3 = data.rows;\n      res.status(200).json({\n        Count: data.rowCount,\n        Status: 200,\n        Data: fetchedData3\n      });\n    } else {\n      res.status(200).json({\n        Count: data.rowCount,\n        Status: 200,\n        Success: 'User has no rejected loans'\n      });\n    }\n  })[\"catch\"](function (error) {\n    res.status(500).json({\n      Status: 500,\n      Error: error.message\n    });\n  });\n};\n\nexports.getLoansRepaid = function (req, res, next) {\n  var Email = req.params.Email;\n  pool.query(\"Select * from loan WHERE investee_email='\".concat(Email, \"' and repaid='True'\")).then(function (data) {\n    if (data.rowCount > 0) {\n      var fetchedData = data.rows;\n      res.status(200).json({\n        Count: data.rowCount,\n        Status: 200,\n        Data: fetchedData\n      });\n    } else {\n      res.status(200).json({\n        Count: data.rowCount,\n        Status: 200,\n        Success: 'User has no paid loans'\n      });\n    }\n  })[\"catch\"](function (error) {\n    res.status(500).json({\n      Status: 500,\n      Error: error.message\n    });\n  });\n};\n\nexports.getLoansUnrepaid = function (req, res, next) {\n  var Email = req.params.Email;\n  pool.query(\"Select * from loan WHERE investee_email='\".concat(Email, \"' and repaid='False'\")).then(function (data) {\n    if (data.rowCount > 0) {\n      var fetchedData = data.rows;\n      res.status(200).json({\n        Count: data.rowCount,\n        Status: 200,\n        Data: fetchedData\n      });\n    } else {\n      res.status(200).json({\n        Count: data.rowCount,\n        Status: 200,\n        Success: 'User has no unrepaid loans'\n      });\n    }\n  })[\"catch\"](function (error) {\n    res.status(500).json({\n      Status: 500,\n      Error: error.message\n    });\n  });\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "userLoansController.js"
      ],
      "names": [
        "Pool",
        "require",
        "connectionString",
        "process",
        "env",
        "QUICK_CREDIT_DB",
        "pool",
        "updateLoan",
        "query",
        "then",
        "result",
        "console",
        "log",
        "error",
        "exports",
        "getLoansApplied",
        "req",
        "res",
        "next",
        "Email",
        "params",
        "data",
        "rowCount",
        "fetchedData1",
        "rows",
        "status",
        "json",
        "Count",
        "Status",
        "Data",
        "Error",
        "message",
        "getLoansApproved",
        "fetchedData2",
        "Success",
        "getLoansRejected",
        "fetchedData3",
        "getLoansRepaid",
        "fetchedData",
        "getLoansUnrepaid"
      ],
      "mappings": ";;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;AAEA,IAAMA,IAAI,GAAGC,OAAO,CAAC,IAAD,CAAP,CAAcD,IAA3B;;AAEA,IAAME,gBAAgB,GAAGC,OAAO,CAACC,GAAR,CAAYC,eAArC;AAEA,IAAMC,IAAI,GAAG,IAAIN,IAAJ,CAAS;AAAEE,EAAAA,gBAAgB,EAAEA;AAApB,CAAT,CAAb,C,CAEA;;AACA,IAAMK,UAAU,GAAG,SAAbA,UAAa,GAAM;AACrBD,EAAAA,IAAI,CAACE,KAAL,CAAW,wEAAX,EACCC,IADD,CACM,UAACC,MAAD,EAAY;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACH,GAHD,WAIO,UAACG,KAAD,EAAW;AACdF,IAAAA,OAAO,CAACC,GAAR,CAAYC,KAAZ;AACH,GAND;AAOH,CARD;;AAUAC,OAAO,CAACC,eAAR,GAA0B,UAACC,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AAC1C,MAAMC,KAAK,GAAGH,GAAG,CAACI,MAAJ,CAAWD,KAAzB;AAEAb,EAAAA,IAAI,CAACE,KAAL,oDAAuDW,KAAvD,QACCV,IADD,CACM,UAACY,IAAD,EAAU;AACZ,QAAIA,IAAI,CAACC,QAAL,GAAgB,CAApB,EACA;AACI,UAAMC,YAAY,GAAGF,IAAI,CAACG,IAA1B;AACAP,MAAAA,GAAG,CAACQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACjBC,QAAAA,KAAK,EAAEN,IAAI,CAACC,QADK;AAEjBM,QAAAA,MAAM,EAAE,GAFS;AAGjBC,QAAAA,IAAI,EAAEN;AAHW,OAArB;AAKH,KARD,MAWA;AACIN,MAAAA,GAAG,CAACQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACjBC,QAAAA,KAAK,EAAEN,IAAI,CAACC,QADK;AAEjBM,QAAAA,MAAM,EAAE,GAFS;AAGjBE,QAAAA,KAAK,EAAE;AAHU,OAArB;AAKH;AACJ,GApBD,WAsBO,UAACjB,KAAD,EAAW;AACdI,IAAAA,GAAG,CAACQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACjBE,MAAAA,MAAM,EAAE,GADS;AAEjBE,MAAAA,KAAK,EAAEjB,KAAK,CAACkB;AAFI,KAArB;AAIH,GA3BD;AA4BH,CA/BD;;AAiCAjB,OAAO,CAACkB,gBAAR,GAA2B,UAAChB,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AAC3C,MAAMC,KAAK,GAAGH,GAAG,CAACI,MAAJ,CAAWD,KAAzB;AAEAb,EAAAA,IAAI,CAACE,KAAL,oDAAuDW,KAAvD,8BACCV,IADD,CACM,UAACY,IAAD,EAAU;AACZ,QAAIA,IAAI,CAACC,QAAL,GAAgB,CAApB,EACA;AACI,UAAMW,YAAY,GAAGZ,IAAI,CAACG,IAA1B;AACAP,MAAAA,GAAG,CAACQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACjBC,QAAAA,KAAK,EAAEN,IAAI,CAACC,QADK;AAEjBM,QAAAA,MAAM,EAAE,GAFS;AAGjBC,QAAAA,IAAI,EAAEI;AAHW,OAArB;AAKH,KARD,MAWA;AACIhB,MAAAA,GAAG,CAACQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACjBC,QAAAA,KAAK,EAAEN,IAAI,CAACC,QADK;AAEjBM,QAAAA,MAAM,EAAE,GAFS;AAGjBM,QAAAA,OAAO,EAAE;AAHQ,OAArB;AAKH;AACJ,GApBD,WAsBO,UAACrB,KAAD,EAAW;AACdI,IAAAA,GAAG,CAACQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACjBE,MAAAA,MAAM,EAAE,GADS;AAEjBE,MAAAA,KAAK,EAAEjB,KAAK,CAACkB;AAFI,KAArB;AAIH,GA3BD;AA4BH,CA/BD;;AAiCAjB,OAAO,CAACqB,gBAAR,GAA2B,UAACnB,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AAC3C,MAAMC,KAAK,GAAGH,GAAG,CAACI,MAAJ,CAAWD,KAAzB;AAEAb,EAAAA,IAAI,CAACE,KAAL,oDAAuDW,KAAvD,8BACCV,IADD,CACM,UAACY,IAAD,EAAU;AACZ,QAAIA,IAAI,CAACC,QAAL,GAAgB,CAApB,EACA;AACI,UAAMc,YAAY,GAAGf,IAAI,CAACG,IAA1B;AACAP,MAAAA,GAAG,CAACQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACjBC,QAAAA,KAAK,EAAEN,IAAI,CAACC,QADK;AAEjBM,QAAAA,MAAM,EAAE,GAFS;AAGjBC,QAAAA,IAAI,EAAEO;AAHW,OAArB;AAKH,KARD,MAWA;AACInB,MAAAA,GAAG,CAACQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACjBC,QAAAA,KAAK,EAAEN,IAAI,CAACC,QADK;AAEjBM,QAAAA,MAAM,EAAE,GAFS;AAGjBM,QAAAA,OAAO,EAAE;AAHQ,OAArB;AAKH;AACJ,GApBD,WAsBO,UAACrB,KAAD,EAAW;AACdI,IAAAA,GAAG,CAACQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACjBE,MAAAA,MAAM,EAAE,GADS;AAEjBE,MAAAA,KAAK,EAAEjB,KAAK,CAACkB;AAFI,KAArB;AAIH,GA3BD;AA4BH,CA/BD;;AAiCAjB,OAAO,CAACuB,cAAR,GAAyB,UAACrB,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AACzC,MAAMC,KAAK,GAAGH,GAAG,CAACI,MAAJ,CAAWD,KAAzB;AAEAb,EAAAA,IAAI,CAACE,KAAL,oDAAuDW,KAAvD,0BACCV,IADD,CACM,UAACY,IAAD,EAAU;AACZ,QAAIA,IAAI,CAACC,QAAL,GAAgB,CAApB,EACA;AACI,UAAMgB,WAAW,GAAGjB,IAAI,CAACG,IAAzB;AACAP,MAAAA,GAAG,CAACQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACjBC,QAAAA,KAAK,EAAEN,IAAI,CAACC,QADK;AAEjBM,QAAAA,MAAM,EAAE,GAFS;AAGjBC,QAAAA,IAAI,EAAES;AAHW,OAArB;AAKH,KARD,MAWA;AACIrB,MAAAA,GAAG,CAACQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACjBC,QAAAA,KAAK,EAAEN,IAAI,CAACC,QADK;AAEjBM,QAAAA,MAAM,EAAE,GAFS;AAGjBM,QAAAA,OAAO,EAAE;AAHQ,OAArB;AAKH;AACJ,GApBD,WAsBO,UAACrB,KAAD,EAAW;AACdI,IAAAA,GAAG,CAACQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACjBE,MAAAA,MAAM,EAAE,GADS;AAEjBE,MAAAA,KAAK,EAAEjB,KAAK,CAACkB;AAFI,KAArB;AAIH,GA3BD;AA4BH,CA/BD;;AAiCAjB,OAAO,CAACyB,gBAAR,GAA2B,UAACvB,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AAC3C,MAAMC,KAAK,GAAGH,GAAG,CAACI,MAAJ,CAAWD,KAAzB;AAEAb,EAAAA,IAAI,CAACE,KAAL,oDAAuDW,KAAvD,2BACCV,IADD,CACM,UAACY,IAAD,EAAU;AACZ,QAAIA,IAAI,CAACC,QAAL,GAAgB,CAApB,EACA;AACI,UAAMgB,WAAW,GAAGjB,IAAI,CAACG,IAAzB;AACAP,MAAAA,GAAG,CAACQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACjBC,QAAAA,KAAK,EAAEN,IAAI,CAACC,QADK;AAEjBM,QAAAA,MAAM,EAAE,GAFS;AAGjBC,QAAAA,IAAI,EAAES;AAHW,OAArB;AAKH,KARD,MAWA;AACIrB,MAAAA,GAAG,CAACQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACjBC,QAAAA,KAAK,EAAEN,IAAI,CAACC,QADK;AAEjBM,QAAAA,MAAM,EAAE,GAFS;AAGjBM,QAAAA,OAAO,EAAE;AAHQ,OAArB;AAKH;AACJ,GApBD,WAsBO,UAACrB,KAAD,EAAW;AACdI,IAAAA,GAAG,CAACQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACjBE,MAAAA,MAAM,EAAE,GADS;AAEjBE,MAAAA,KAAK,EAAEjB,KAAK,CAACkB;AAFI,KAArB;AAIH,GA3BD;AA4BH,CA/BD",
      "sourceRoot": "/home/kodek-sleuth/Desktop/Quick-credit/Api/Controllers",
      "sourcesContent": [
        "/* eslint-disable no-lonely-if */\n/* eslint-disable object-shorthand */\n/* eslint-disable prefer-destructuring */\n/* eslint-disable max-len */\n/* eslint-disable no-trailing-spaces */\n/* eslint-disable brace-style */\n/* eslint-disable no-console */\n/* eslint-disable comma-dangle */\n/* eslint-disable no-unused-vars */\n/* eslint-disable eqeqeq */\n/* eslint-disable indent */\n\nconst Pool = require('pg').Pool;\n\nconst connectionString = process.env.QUICK_CREDIT_DB;\n\nconst pool = new Pool({ connectionString: connectionString });\n\n// Function to Update Loans\nconst updateLoan = () => {\n    pool.query(\"UPDATE loan set repaid='True' WHERE status='Verified' and balance=0.00\")\n    .then((result) => {\n        console.log(result);\n    })\n    .catch((error) => {\n        console.log(error);\n    });\n};\n\nexports.getLoansApplied = (req, res, next) => {\n    const Email = req.params.Email;\n\n    pool.query(`Select * from loan WHERE investee_email='${Email}'`)\n    .then((data) => {\n        if (data.rowCount > 0)\n        {\n            const fetchedData1 = data.rows;\n            res.status(200).json({\n                Count: data.rowCount,\n                Status: 200,\n                Data: fetchedData1\n            });\n        }\n\n        else\n        {\n            res.status(200).json({\n                Count: data.rowCount,\n                Status: 200,\n                Error: 'User has not applied for any loans'\n            });\n        }\n    })\n\n    .catch((error) => {\n        res.status(500).json({\n            Status: 500,\n            Error: error.message \n        });\n    });\n};\n\nexports.getLoansApproved = (req, res, next) => {\n    const Email = req.params.Email;\n\n    pool.query(`Select * from loan WHERE investee_email='${Email}' and status='Approved'`)\n    .then((data) => {\n        if (data.rowCount > 0)\n        {\n            const fetchedData2 = data.rows;\n            res.status(200).json({\n                Count: data.rowCount,\n                Status: 200,\n                Data: fetchedData2\n            });\n        }\n\n        else\n        {\n            res.status(200).json({\n                Count: data.rowCount,\n                Status: 200,\n                Success: 'User has no approved loans'\n            });\n        }\n    })\n\n    .catch((error) => {\n        res.status(500).json({\n            Status: 500,\n            Error: error.message \n        });\n    });\n};\n\nexports.getLoansRejected = (req, res, next) => {\n    const Email = req.params.Email;\n\n    pool.query(`Select * from loan WHERE investee_email='${Email}' and status='Rejected'`)\n    .then((data) => {\n        if (data.rowCount > 0)\n        {\n            const fetchedData3 = data.rows;\n            res.status(200).json({\n                Count: data.rowCount,\n                Status: 200,\n                Data: fetchedData3\n            });\n        }\n\n        else\n        {\n            res.status(200).json({\n                Count: data.rowCount,\n                Status: 200,\n                Success: 'User has no rejected loans'\n            });\n        }\n    })\n\n    .catch((error) => {\n        res.status(500).json({\n            Status: 500,\n            Error: error.message \n        });\n    });\n};\n\nexports.getLoansRepaid = (req, res, next) => {\n    const Email = req.params.Email;\n\n    pool.query(`Select * from loan WHERE investee_email='${Email}' and repaid='True'`)\n    .then((data) => {\n        if (data.rowCount > 0)\n        {\n            const fetchedData = data.rows;\n            res.status(200).json({\n                Count: data.rowCount,\n                Status: 200,\n                Data: fetchedData\n            });\n        }\n\n        else\n        {\n            res.status(200).json({\n                Count: data.rowCount,\n                Status: 200,\n                Success: 'User has no paid loans'\n            });\n        }\n    })\n\n    .catch((error) => {\n        res.status(500).json({\n            Status: 500,\n            Error: error.message \n        });\n    });\n};\n\nexports.getLoansUnrepaid = (req, res, next) => {\n    const Email = req.params.Email;\n\n    pool.query(`Select * from loan WHERE investee_email='${Email}' and repaid='False'`)\n    .then((data) => {\n        if (data.rowCount > 0)\n        {\n            const fetchedData = data.rows;\n            res.status(200).json({\n                Count: data.rowCount,\n                Status: 200,\n                Data: fetchedData\n            });\n        }\n\n        else\n        {\n            res.status(200).json({\n                Count: data.rowCount,\n                Status: 200,\n                Success: 'User has no unrepaid loans'\n            });\n        }\n    })\n\n    .catch((error) => {\n        res.status(500).json({\n            Status: 500,\n            Error: error.message \n        });\n    });\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1557385196458
  },
  "{\"sourceRoot\":\"/home/kodek-sleuth/Desktop/Quick-credit/Api/Loans\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/kodek-sleuth/Desktop/Quick-credit\",\"filename\":\"/home/kodek-sleuth/Desktop/Quick-credit/Api/Loans/adminLoans.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/kodek-sleuth/Desktop/Quick-credit\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/kodek-sleuth/Desktop/Quick-credit/Api/Loans",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/kodek-sleuth/Desktop/Quick-credit",
      "filename": "/home/kodek-sleuth/Desktop/Quick-credit/Api/Loans/adminLoans.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/kodek-sleuth/Desktop/Quick-credit",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/kodek-sleuth/Desktop/Quick-credit/Api/Loans/adminLoans.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/home/kodek-sleuth/Desktop/Quick-credit/Api/Loans/adminLoans.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/kodek-sleuth/Desktop/Quick-credit/Api/Loans",
        "sourceFileName": "adminLoans.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar express = require('express');\n\nvar adminLoans = express.Router();\n\nvar adminLoansController = require('../Controllers/adminLoansController'); // Middleware for checking Auth and Access Rights\n\n\nvar jwtMiddleware = require('../Settings/checkAuthAdmin'); // Swagger documentation\n\n/**\n* @swagger\n* /api/v1/admin/users:\n*   get:\n*     security:\n*        - bearerAuth: []\n*     tags:\n*       - Admin\n*     name: Gets All Users in database\n*     summary: Gets All Users in database\n*     responses:\n*       200:\n*         description: Successfully Fetched Users\n*/\n\n\nadminLoans.get('/users', jwtMiddleware, adminLoansController.getAllUsers);\n/**\n* @swagger\n* /api/v1/admin/users/pending:\n*   get:\n*     security:\n*        - bearerAuth: []\n*     tags:\n*       - Admin\n*     name: Gets All Pending Users in database\n*     summary: Gets All Pending Users in database\n*     responses:\n*       200:\n*         description: Successfully Fetched Users\n*/\n\nadminLoans.get('/users/pending', jwtMiddleware, adminLoansController.getUsersPending);\n/**\n* @swagger\n* /api/v1/admin/users/verified:\n*   get:\n*     security:\n*        - bearerAuth: []\n*     tags:\n*       - Admin\n*     name: Gets All Verified Users in database\n*     summary: Gets All Verified Users in database\n*     responses:\n*       200:\n*         description: Successfully Fetched Users\n*/\n\nadminLoans.get('/users/verified', jwtMiddleware, adminLoansController.getUsersVerified);\n/**\n* @swagger\n* /api/v1/admin/loans:\n*   get:\n*     security:\n*        - bearerAuth: []\n*     tags:\n*       - Loans\n*     name: Gets All Loans in database\n*     summary: Gets All Loans in database\n*     responses:\n*       200:\n*         description: Successfully Fetched Loans\n*/\n\nadminLoans.get('/loans', jwtMiddleware, adminLoansController.getAllLoans);\n/**\n* @swagger\n* /api/v1/admin/loans/approved:\n*   get:\n*     security:\n*        - bearerAuth: []\n*     tags:\n*       - Loans\n*     name: Gets All Approved Loans in database\n*     summary: Gets All Approved Loans in database\n*     responses:\n*       200:\n*         description: Successfully Fetched Loans\n*/\n\nadminLoans.get('/loans/approved', jwtMiddleware, adminLoansController.getLoansApproved);\n/**\n* @swagger\n* /api/v1/admin/loans/pending:\n*   get:\n*     security:\n*        - bearerAuth: []\n*     tags:\n*       - Loans\n*     name: Gets All Pending Loans in database\n*     summary: Gets All Pending Loans in database\n*     responses:\n*       200:\n*         description: Successfully Fetched Loans\n*/\n\nadminLoans.get('/loans/pending', jwtMiddleware, adminLoansController.getAllLoansPending);\n/**\n* @swagger\n* /api/v1/admin/loans/rejected:\n*   get:\n*     security:\n*        - bearerAuth: []\n*     tags:\n*       - Loans\n*     name: Gets All Rejected Loans in database\n*     summary: Gets All Rejected Loans in database\n*     responses:\n*       200:\n*         description: Successfully Fetched Loans\n*/\n\nadminLoans.get('/loans/rejected', jwtMiddleware, adminLoansController.getLoansRejected);\n/**\n* @swagger\n* /api/v1/admin/loans/repaid:\n*   get:\n*     security:\n*        - bearerAuth: []\n*     tags:\n*       - Loans\n*     name: Gets All Repaid Loans in database\n*     summary: Gets All Repaid Loans in database\n*     responses:\n*       200:\n*         description: Successfully Fetched Loans\n*/\n\nadminLoans.get('/loans/repaid', jwtMiddleware, adminLoansController.getLoansRepaid);\n/**\n* @swagger\n* /api/v1/admin/loans/unrepaid:\n*   get:\n*     security:\n*        - bearerAuth: []\n*     tags:\n*       - Loans\n*     name: Gets All Unrepaid Loans in database\n*     summary: Gets All Unrepaid Loans in database\n*     responses:\n*       200:\n*         description: Successfully Fetched Loans\n*/\n\nadminLoans.get('/loans/unrepaid', jwtMiddleware, adminLoansController.getLoansUnrepaid);\n/**\n* @swagger\n* /api/v1/admin/loans/{:loanId}:\n*   get:\n*     security:\n*        - bearerAuth: []\n*     tags:\n*       - Loans\n*     name: Gets A Specific Loan in database\n*     summary: Gets A Specific Loan in database\n*     parameters:\n*       - name: \":loanId\"\n*         in: path\n*         description: Id of Loan\n*         required: true\n*         type: integer\n*     responses:\n*       200:\n*         description: Successfully Fetched Loan\n*/\n\nadminLoans.get('/loans/:loanId', jwtMiddleware, adminLoansController.getSpecificLoan);\nmodule.exports = adminLoans;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "adminLoans.js"
      ],
      "names": [
        "express",
        "require",
        "adminLoans",
        "Router",
        "adminLoansController",
        "jwtMiddleware",
        "get",
        "getAllUsers",
        "getUsersPending",
        "getUsersVerified",
        "getAllLoans",
        "getLoansApproved",
        "getAllLoansPending",
        "getLoansRejected",
        "getLoansRepaid",
        "getLoansUnrepaid",
        "getSpecificLoan",
        "module",
        "exports"
      ],
      "mappings": ";;AAAA,IAAMA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;AAEA,IAAMC,UAAU,GAAGF,OAAO,CAACG,MAAR,EAAnB;;AAEA,IAAMC,oBAAoB,GAAGH,OAAO,CAAC,qCAAD,CAApC,C,CAEA;;;AACA,IAAMI,aAAa,GAAGJ,OAAO,CAAC,4BAAD,CAA7B,C,CAEA;;AACA;;;;;;;;;;;;;;;;AAeAC,UAAU,CAACI,GAAX,CAAe,QAAf,EAAyBD,aAAzB,EAAwCD,oBAAoB,CAACG,WAA7D;AAEA;;;;;;;;;;;;;;;AAeAL,UAAU,CAACI,GAAX,CAAe,gBAAf,EAAiCD,aAAjC,EAAgDD,oBAAoB,CAACI,eAArE;AAEA;;;;;;;;;;;;;;;AAeAN,UAAU,CAACI,GAAX,CAAe,iBAAf,EAAkCD,aAAlC,EAAiDD,oBAAoB,CAACK,gBAAtE;AAEA;;;;;;;;;;;;;;;AAeAP,UAAU,CAACI,GAAX,CAAe,QAAf,EAAyBD,aAAzB,EAAwCD,oBAAoB,CAACM,WAA7D;AAEA;;;;;;;;;;;;;;;AAeAR,UAAU,CAACI,GAAX,CAAe,iBAAf,EAAkCD,aAAlC,EAAiDD,oBAAoB,CAACO,gBAAtE;AAEA;;;;;;;;;;;;;;;AAeAT,UAAU,CAACI,GAAX,CAAe,gBAAf,EAAiCD,aAAjC,EAAgDD,oBAAoB,CAACQ,kBAArE;AAEA;;;;;;;;;;;;;;;AAeAV,UAAU,CAACI,GAAX,CAAe,iBAAf,EAAkCD,aAAlC,EAAiDD,oBAAoB,CAACS,gBAAtE;AAEA;;;;;;;;;;;;;;;AAeAX,UAAU,CAACI,GAAX,CAAe,eAAf,EAAgCD,aAAhC,EAA+CD,oBAAoB,CAACU,cAApE;AAEA;;;;;;;;;;;;;;;AAeAZ,UAAU,CAACI,GAAX,CAAe,iBAAf,EAAkCD,aAAlC,EAAiDD,oBAAoB,CAACW,gBAAtE;AAEA;;;;;;;;;;;;;;;;;;;;;AAqBAb,UAAU,CAACI,GAAX,CAAe,gBAAf,EAAiCD,aAAjC,EAAgDD,oBAAoB,CAACY,eAArE;AAEAC,MAAM,CAACC,OAAP,GAAiBhB,UAAjB",
      "sourceRoot": "/home/kodek-sleuth/Desktop/Quick-credit/Api/Loans",
      "sourcesContent": [
        "const express = require('express');\n\nconst adminLoans = express.Router();\n\nconst adminLoansController = require('../Controllers/adminLoansController');\n\n// Middleware for checking Auth and Access Rights\nconst jwtMiddleware = require('../Settings/checkAuthAdmin');\n\n// Swagger documentation\n/**\n* @swagger\n* /api/v1/admin/users:\n*   get:\n*     security:\n*        - bearerAuth: []\n*     tags:\n*       - Admin\n*     name: Gets All Users in database\n*     summary: Gets All Users in database\n*     responses:\n*       200:\n*         description: Successfully Fetched Users\n*/\n\nadminLoans.get('/users', jwtMiddleware, adminLoansController.getAllUsers);\n\n/**\n* @swagger\n* /api/v1/admin/users/pending:\n*   get:\n*     security:\n*        - bearerAuth: []\n*     tags:\n*       - Admin\n*     name: Gets All Pending Users in database\n*     summary: Gets All Pending Users in database\n*     responses:\n*       200:\n*         description: Successfully Fetched Users\n*/\n\nadminLoans.get('/users/pending', jwtMiddleware, adminLoansController.getUsersPending);\n\n/**\n* @swagger\n* /api/v1/admin/users/verified:\n*   get:\n*     security:\n*        - bearerAuth: []\n*     tags:\n*       - Admin\n*     name: Gets All Verified Users in database\n*     summary: Gets All Verified Users in database\n*     responses:\n*       200:\n*         description: Successfully Fetched Users\n*/\n\nadminLoans.get('/users/verified', jwtMiddleware, adminLoansController.getUsersVerified);\n\n/**\n* @swagger\n* /api/v1/admin/loans:\n*   get:\n*     security:\n*        - bearerAuth: []\n*     tags:\n*       - Loans\n*     name: Gets All Loans in database\n*     summary: Gets All Loans in database\n*     responses:\n*       200:\n*         description: Successfully Fetched Loans\n*/\n\nadminLoans.get('/loans', jwtMiddleware, adminLoansController.getAllLoans);\n\n/**\n* @swagger\n* /api/v1/admin/loans/approved:\n*   get:\n*     security:\n*        - bearerAuth: []\n*     tags:\n*       - Loans\n*     name: Gets All Approved Loans in database\n*     summary: Gets All Approved Loans in database\n*     responses:\n*       200:\n*         description: Successfully Fetched Loans\n*/\n\nadminLoans.get('/loans/approved', jwtMiddleware, adminLoansController.getLoansApproved);\n\n/**\n* @swagger\n* /api/v1/admin/loans/pending:\n*   get:\n*     security:\n*        - bearerAuth: []\n*     tags:\n*       - Loans\n*     name: Gets All Pending Loans in database\n*     summary: Gets All Pending Loans in database\n*     responses:\n*       200:\n*         description: Successfully Fetched Loans\n*/\n\nadminLoans.get('/loans/pending', jwtMiddleware, adminLoansController.getAllLoansPending);\n\n/**\n* @swagger\n* /api/v1/admin/loans/rejected:\n*   get:\n*     security:\n*        - bearerAuth: []\n*     tags:\n*       - Loans\n*     name: Gets All Rejected Loans in database\n*     summary: Gets All Rejected Loans in database\n*     responses:\n*       200:\n*         description: Successfully Fetched Loans\n*/\n\nadminLoans.get('/loans/rejected', jwtMiddleware, adminLoansController.getLoansRejected);\n\n/**\n* @swagger\n* /api/v1/admin/loans/repaid:\n*   get:\n*     security:\n*        - bearerAuth: []\n*     tags:\n*       - Loans\n*     name: Gets All Repaid Loans in database\n*     summary: Gets All Repaid Loans in database\n*     responses:\n*       200:\n*         description: Successfully Fetched Loans\n*/\n\nadminLoans.get('/loans/repaid', jwtMiddleware, adminLoansController.getLoansRepaid);\n\n/**\n* @swagger\n* /api/v1/admin/loans/unrepaid:\n*   get:\n*     security:\n*        - bearerAuth: []\n*     tags:\n*       - Loans\n*     name: Gets All Unrepaid Loans in database\n*     summary: Gets All Unrepaid Loans in database\n*     responses:\n*       200:\n*         description: Successfully Fetched Loans\n*/\n\nadminLoans.get('/loans/unrepaid', jwtMiddleware, adminLoansController.getLoansUnrepaid);\n\n/**\n* @swagger\n* /api/v1/admin/loans/{:loanId}:\n*   get:\n*     security:\n*        - bearerAuth: []\n*     tags:\n*       - Loans\n*     name: Gets A Specific Loan in database\n*     summary: Gets A Specific Loan in database\n*     parameters:\n*       - name: \":loanId\"\n*         in: path\n*         description: Id of Loan\n*         required: true\n*         type: integer\n*     responses:\n*       200:\n*         description: Successfully Fetched Loan\n*/\n\nadminLoans.get('/loans/:loanId', jwtMiddleware, adminLoansController.getSpecificLoan);\n\nmodule.exports = adminLoans;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1557385196458
  },
  "{\"sourceRoot\":\"/home/kodek-sleuth/Desktop/Quick-credit/Api/Controllers\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/kodek-sleuth/Desktop/Quick-credit\",\"filename\":\"/home/kodek-sleuth/Desktop/Quick-credit/Api/Controllers/adminLoansController.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/kodek-sleuth/Desktop/Quick-credit\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/kodek-sleuth/Desktop/Quick-credit/Api/Controllers",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/kodek-sleuth/Desktop/Quick-credit",
      "filename": "/home/kodek-sleuth/Desktop/Quick-credit/Api/Controllers/adminLoansController.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/kodek-sleuth/Desktop/Quick-credit",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/kodek-sleuth/Desktop/Quick-credit/Api/Controllers/adminLoansController.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/home/kodek-sleuth/Desktop/Quick-credit/Api/Controllers/adminLoansController.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/kodek-sleuth/Desktop/Quick-credit/Api/Controllers",
        "sourceFileName": "adminLoansController.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\n/* eslint-disable no-undef */\n\n/* eslint-disable no-lonely-if */\n\n/* eslint-disable object-shorthand */\n\n/* eslint-disable prefer-destructuring */\n\n/* eslint-disable max-len */\n\n/* eslint-disable no-trailing-spaces */\n\n/* eslint-disable brace-style */\n\n/* eslint-disable no-console */\n\n/* eslint-disable comma-dangle */\n\n/* eslint-disable no-unused-vars */\n\n/* eslint-disable eqeqeq */\n\n/* eslint-disable indent */\nvar Pool = require('pg').Pool;\n\nvar connectionString = process.env.QUICK_CREDIT_DB_TEST;\nvar pool = new Pool({\n  connectionString: connectionString\n});\n\nexports.getAllUsers = function (req, res, next) {\n  pool.query('Select * from users').then(function (data) {\n    if (data.rowCount > 0) {\n      var fetchedData1 = data.rows;\n      res.status(200).json({\n        Status: 200,\n        Data: fetchedData1,\n        Success: 'Successfully Fetched Users'\n      });\n    } else {\n      res.status(200).json({\n        Count: data.rowCount,\n        Status: 200,\n        Success: 'There are No Users in database'\n      });\n    }\n  })[\"catch\"](function (error) {\n    res.status(500).json({\n      Status: 500,\n      Error: error.message\n    });\n  });\n};\n\nexports.getUsersVerified = function (req, res, next) {\n  pool.query(\"Select * from users WHERE status='Verified'\").then(function (data) {\n    if (data.rowCount > 0) {\n      var fetchedData2 = data.rows;\n      res.status(200).json({\n        Count: data.rowCount,\n        Status: 200,\n        Data: fetchedData2,\n        Success: 'Successfully Fetched Users'\n      });\n    } else {\n      res.status(200).json({\n        Count: data.rowCount,\n        Status: 200,\n        Success: 'There are no verified users'\n      });\n    }\n  })[\"catch\"](function (error) {\n    res.status(500).json({\n      Status: 500,\n      Error: error.message\n    });\n  });\n};\n\nexports.getUsersPending = function (req, res, next) {\n  pool.query(\"Select * from users WHERE status='Pending'\").then(function (data) {\n    if (data.rowCount > 0) {\n      var fetchedData2 = data.rows;\n      res.status(200).json({\n        Count: data.rowCount,\n        Status: 200,\n        Data: fetchedData2,\n        Success: 'Successfully Fetched Users'\n      });\n    } else {\n      res.status(200).json({\n        Status: 200,\n        Success: 'There are no pending users'\n      });\n    }\n  })[\"catch\"](function (error) {\n    res.status(500).json({\n      Status: 500,\n      Error: error.message\n    });\n  });\n};\n\nexports.getLoansApproved = function (req, res, next) {\n  pool.query(\"Select * from loan WHERE status='Approved'\").then(function (data) {\n    if (data.rowCount > 0) {\n      var fetchedData2 = data.rows;\n      res.status(200).json({\n        Count: data.rowCount,\n        Status: 200,\n        Data: fetchedData2,\n        Success: 'Successfully Fetched Loans'\n      });\n    } else {\n      res.status(200).json({\n        Count: data.rowCount,\n        Status: 200,\n        Success: 'There are no approved loans'\n      });\n    }\n  })[\"catch\"](function (error) {\n    res.status(500).json({\n      Status: 500,\n      Error: error.message\n    });\n  });\n};\n\nexports.getLoansRejected = function (req, res, next) {\n  pool.query(\"Select * from loan WHERE status='Rejected'\").then(function (data) {\n    if (data.rowCount > 0) {\n      var fetchedData3 = data.rows;\n      res.status(200).json({\n        Count: data.rowCount,\n        Status: 200,\n        Data: fetchedData3,\n        Success: 'Successfully Fetched Loans'\n      });\n    } else {\n      res.status(200).json({\n        Count: data.rowCount,\n        Status: 200,\n        Success: 'There are no rejected loans'\n      });\n    }\n  })[\"catch\"](function (error) {\n    res.status(500).json({\n      Status: 500,\n      Error: error.message\n    });\n  });\n};\n\nexports.getLoansRepaid = function (req, res, next) {\n  pool.query(\"Select * from loan WHERE repaid='True'\").then(function (data) {\n    if (data.rowCount > 0) {\n      var fetchedData = data.rows;\n      res.status(200).json({\n        Count: data.rowCount,\n        Status: 200,\n        Data: fetchedData,\n        Success: 'Successfully Fetched Loans'\n      });\n    } else {\n      res.status(200).json({\n        Count: data.rowCount,\n        Status: 200,\n        Error: 'There are no repaid loans'\n      });\n    }\n  })[\"catch\"](function (error) {\n    res.status(500).json({\n      Status: 500,\n      Error: error.message\n    });\n  });\n};\n\nexports.getLoansUnrepaid = function (req, res, next) {\n  pool.query(\"Select * from loan WHERE repaid='False'\").then(function (data) {\n    if (data.rowCount > 0) {\n      var fetchedData = data.rows;\n      res.status(200).json({\n        Count: data.rowCount,\n        Status: 200,\n        Data: fetchedData,\n        Success: 'Successfully Fetched Loans'\n      });\n    } else {\n      res.status(200).json({\n        Count: data.rowCount,\n        Status: 200,\n        Success: 'There are no unrepaid Loans'\n      });\n    }\n  })[\"catch\"](function (error) {\n    res.status(500).json({\n      Status: 500,\n      Error: error.message\n    });\n  });\n};\n\nexports.getAllLoansPending = function (req, res, next) {\n  pool.query(\"Select * from loan WHERE status='Pending'\").then(function (data) {\n    if (data.rowCount > 0) {\n      var fetchedData = data.rows;\n      res.status(200).json({\n        Count: data.rowCount,\n        Status: 200,\n        Data: fetchedData,\n        Success: 'Successfully Fetched Loans'\n      });\n    } else {\n      res.status(200).json({\n        Count: data.rowCount,\n        Status: 200,\n        Success: 'There are no pending loans'\n      });\n    }\n  })[\"catch\"](function (error) {\n    res.status(500).json({\n      Status: 500,\n      Error: error.message\n    });\n  });\n};\n\nexports.getAllLoans = function (req, res, next) {\n  pool.query('Select * from loan').then(function (data) {\n    if (data.rowCount > 0) {\n      var fetchedData = data.rows;\n      res.status(200).json({\n        Count: data.rowCount,\n        Status: 200,\n        Data: fetchedData,\n        Success: 'Successfully Fetched Loans'\n      });\n    } else {\n      res.status(200).json({\n        Count: data.rowCount,\n        Status: 200,\n        Success: 'There are no Loans found'\n      });\n    }\n  })[\"catch\"](function (error) {\n    res.status(500).json({\n      Status: 500,\n      Error: error.message\n    });\n  });\n};\n\nexports.getSpecificLoan = function (req, res, next) {\n  var loanId = req.params.loanId;\n  pool.query(\"Select * from loan WHERE id=\".concat(loanId)).then(function (data) {\n    if (data.rowCount > 0) {\n      var fetchedData = data.rows;\n      res.status(200).json({\n        Count: data.rowCount,\n        Status: 200,\n        Data: fetchedData,\n        Success: 'Successfully Fetched Loan'\n      });\n    } else {\n      res.status(200).json({\n        Count: data.rowCount,\n        Status: 200,\n        Success: 'Loan with that Id does not exist'\n      });\n    }\n  })[\"catch\"](function (error) {\n    res.status(500).json({\n      Status: 500,\n      Error: error.message\n    });\n  });\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "adminLoansController.js"
      ],
      "names": [
        "Pool",
        "require",
        "connectionString",
        "process",
        "env",
        "QUICK_CREDIT_DB_TEST",
        "pool",
        "exports",
        "getAllUsers",
        "req",
        "res",
        "next",
        "query",
        "then",
        "data",
        "rowCount",
        "fetchedData1",
        "rows",
        "status",
        "json",
        "Status",
        "Data",
        "Success",
        "Count",
        "error",
        "Error",
        "message",
        "getUsersVerified",
        "fetchedData2",
        "getUsersPending",
        "getLoansApproved",
        "getLoansRejected",
        "fetchedData3",
        "getLoansRepaid",
        "fetchedData",
        "getLoansUnrepaid",
        "getAllLoansPending",
        "getAllLoans",
        "getSpecificLoan",
        "loanId",
        "params"
      ],
      "mappings": ";;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;AAEA,IAAMA,IAAI,GAAGC,OAAO,CAAC,IAAD,CAAP,CAAcD,IAA3B;;AAEA,IAAME,gBAAgB,GAAGC,OAAO,CAACC,GAAR,CAAYC,oBAArC;AAEA,IAAMC,IAAI,GAAG,IAAIN,IAAJ,CAAS;AAAEE,EAAAA,gBAAgB,EAAEA;AAApB,CAAT,CAAb;;AAEAK,OAAO,CAACC,WAAR,GAAsB,UAACC,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AACtCL,EAAAA,IAAI,CAACM,KAAL,CAAW,qBAAX,EACCC,IADD,CACM,UAACC,IAAD,EAAU;AACZ,QAAIA,IAAI,CAACC,QAAL,GAAgB,CAApB,EACA;AACI,UAAMC,YAAY,GAAGF,IAAI,CAACG,IAA1B;AACAP,MAAAA,GAAG,CAACQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACjBC,QAAAA,MAAM,EAAE,GADS;AAEjBC,QAAAA,IAAI,EAAEL,YAFW;AAGjBM,QAAAA,OAAO,EAAE;AAHQ,OAArB;AAKH,KARD,MAWA;AACIZ,MAAAA,GAAG,CAACQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACjBI,QAAAA,KAAK,EAAET,IAAI,CAACC,QADK;AAEjBK,QAAAA,MAAM,EAAE,GAFS;AAGjBE,QAAAA,OAAO,EAAE;AAHQ,OAArB;AAKH;AACJ,GApBD,WAsBO,UAACE,KAAD,EAAW;AACdd,IAAAA,GAAG,CAACQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACjBC,MAAAA,MAAM,EAAE,GADS;AAEjBK,MAAAA,KAAK,EAAED,KAAK,CAACE;AAFI,KAArB;AAIH,GA3BD;AA4BH,CA7BD;;AA+BAnB,OAAO,CAACoB,gBAAR,GAA2B,UAAClB,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AAC3CL,EAAAA,IAAI,CAACM,KAAL,CAAW,6CAAX,EACCC,IADD,CACM,UAACC,IAAD,EAAU;AACZ,QAAIA,IAAI,CAACC,QAAL,GAAgB,CAApB,EACA;AACI,UAAMa,YAAY,GAAGd,IAAI,CAACG,IAA1B;AACAP,MAAAA,GAAG,CAACQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACjBI,QAAAA,KAAK,EAAET,IAAI,CAACC,QADK;AAEjBK,QAAAA,MAAM,EAAE,GAFS;AAGjBC,QAAAA,IAAI,EAAEO,YAHW;AAIjBN,QAAAA,OAAO,EAAE;AAJQ,OAArB;AAMH,KATD,MAYA;AACIZ,MAAAA,GAAG,CAACQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACjBI,QAAAA,KAAK,EAAET,IAAI,CAACC,QADK;AAEjBK,QAAAA,MAAM,EAAE,GAFS;AAGjBE,QAAAA,OAAO,EAAE;AAHQ,OAArB;AAKH;AACJ,GArBD,WAuBO,UAACE,KAAD,EAAW;AACdd,IAAAA,GAAG,CAACQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACjBC,MAAAA,MAAM,EAAE,GADS;AAEjBK,MAAAA,KAAK,EAAED,KAAK,CAACE;AAFI,KAArB;AAIH,GA5BD;AA6BH,CA9BD;;AAgCAnB,OAAO,CAACsB,eAAR,GAA0B,UAACpB,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AAC1CL,EAAAA,IAAI,CAACM,KAAL,CAAW,4CAAX,EACCC,IADD,CACM,UAACC,IAAD,EAAU;AACZ,QAAIA,IAAI,CAACC,QAAL,GAAgB,CAApB,EACA;AACI,UAAMa,YAAY,GAAGd,IAAI,CAACG,IAA1B;AACAP,MAAAA,GAAG,CAACQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACjBI,QAAAA,KAAK,EAAET,IAAI,CAACC,QADK;AAEjBK,QAAAA,MAAM,EAAE,GAFS;AAGjBC,QAAAA,IAAI,EAAEO,YAHW;AAIjBN,QAAAA,OAAO,EAAE;AAJQ,OAArB;AAMH,KATD,MAYA;AACIZ,MAAAA,GAAG,CAACQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACjBC,QAAAA,MAAM,EAAE,GADS;AAEjBE,QAAAA,OAAO,EAAE;AAFQ,OAArB;AAIH;AACJ,GApBD,WAsBO,UAACE,KAAD,EAAW;AACdd,IAAAA,GAAG,CAACQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACjBC,MAAAA,MAAM,EAAE,GADS;AAEjBK,MAAAA,KAAK,EAAED,KAAK,CAACE;AAFI,KAArB;AAIH,GA3BD;AA4BH,CA7BD;;AA+BAnB,OAAO,CAACuB,gBAAR,GAA2B,UAACrB,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AAC3CL,EAAAA,IAAI,CAACM,KAAL,CAAW,4CAAX,EACCC,IADD,CACM,UAACC,IAAD,EAAU;AACZ,QAAIA,IAAI,CAACC,QAAL,GAAgB,CAApB,EACA;AACI,UAAMa,YAAY,GAAGd,IAAI,CAACG,IAA1B;AACAP,MAAAA,GAAG,CAACQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACjBI,QAAAA,KAAK,EAAET,IAAI,CAACC,QADK;AAEjBK,QAAAA,MAAM,EAAE,GAFS;AAGjBC,QAAAA,IAAI,EAAEO,YAHW;AAIjBN,QAAAA,OAAO,EAAE;AAJQ,OAArB;AAMH,KATD,MAYA;AACIZ,MAAAA,GAAG,CAACQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACjBI,QAAAA,KAAK,EAAET,IAAI,CAACC,QADK;AAEjBK,QAAAA,MAAM,EAAE,GAFS;AAGjBE,QAAAA,OAAO,EAAE;AAHQ,OAArB;AAKH;AACJ,GArBD,WAuBO,UAACE,KAAD,EAAW;AACdd,IAAAA,GAAG,CAACQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACjBC,MAAAA,MAAM,EAAE,GADS;AAEjBK,MAAAA,KAAK,EAAED,KAAK,CAACE;AAFI,KAArB;AAIH,GA5BD;AA6BH,CA9BD;;AAgCAnB,OAAO,CAACwB,gBAAR,GAA2B,UAACtB,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AAC3CL,EAAAA,IAAI,CAACM,KAAL,CAAW,4CAAX,EACCC,IADD,CACM,UAACC,IAAD,EAAU;AACZ,QAAIA,IAAI,CAACC,QAAL,GAAgB,CAApB,EACA;AACI,UAAMiB,YAAY,GAAGlB,IAAI,CAACG,IAA1B;AACAP,MAAAA,GAAG,CAACQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACjBI,QAAAA,KAAK,EAAET,IAAI,CAACC,QADK;AAEjBK,QAAAA,MAAM,EAAE,GAFS;AAGjBC,QAAAA,IAAI,EAAEW,YAHW;AAIjBV,QAAAA,OAAO,EAAE;AAJQ,OAArB;AAMH,KATD,MAYA;AACIZ,MAAAA,GAAG,CAACQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACjBI,QAAAA,KAAK,EAAET,IAAI,CAACC,QADK;AAEjBK,QAAAA,MAAM,EAAE,GAFS;AAGjBE,QAAAA,OAAO,EAAE;AAHQ,OAArB;AAKH;AACJ,GArBD,WAuBO,UAACE,KAAD,EAAW;AACdd,IAAAA,GAAG,CAACQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACjBC,MAAAA,MAAM,EAAE,GADS;AAEjBK,MAAAA,KAAK,EAAED,KAAK,CAACE;AAFI,KAArB;AAIH,GA5BD;AA6BH,CA9BD;;AAgCAnB,OAAO,CAAC0B,cAAR,GAAyB,UAACxB,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AACzCL,EAAAA,IAAI,CAACM,KAAL,CAAW,wCAAX,EACCC,IADD,CACM,UAACC,IAAD,EAAU;AACZ,QAAIA,IAAI,CAACC,QAAL,GAAgB,CAApB,EACA;AACI,UAAMmB,WAAW,GAAGpB,IAAI,CAACG,IAAzB;AACAP,MAAAA,GAAG,CAACQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACjBI,QAAAA,KAAK,EAAET,IAAI,CAACC,QADK;AAEjBK,QAAAA,MAAM,EAAE,GAFS;AAGjBC,QAAAA,IAAI,EAAEa,WAHW;AAIjBZ,QAAAA,OAAO,EAAE;AAJQ,OAArB;AAMH,KATD,MAYA;AACIZ,MAAAA,GAAG,CAACQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACjBI,QAAAA,KAAK,EAAET,IAAI,CAACC,QADK;AAEjBK,QAAAA,MAAM,EAAE,GAFS;AAGjBK,QAAAA,KAAK,EAAE;AAHU,OAArB;AAKH;AACJ,GArBD,WAuBO,UAACD,KAAD,EAAW;AACdd,IAAAA,GAAG,CAACQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACjBC,MAAAA,MAAM,EAAE,GADS;AAEjBK,MAAAA,KAAK,EAAED,KAAK,CAACE;AAFI,KAArB;AAIH,GA5BD;AA6BH,CA9BD;;AAgCAnB,OAAO,CAAC4B,gBAAR,GAA2B,UAAC1B,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AAC3CL,EAAAA,IAAI,CAACM,KAAL,CAAW,yCAAX,EACCC,IADD,CACM,UAACC,IAAD,EAAU;AACZ,QAAIA,IAAI,CAACC,QAAL,GAAgB,CAApB,EACA;AACI,UAAMmB,WAAW,GAAGpB,IAAI,CAACG,IAAzB;AACAP,MAAAA,GAAG,CAACQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACjBI,QAAAA,KAAK,EAAET,IAAI,CAACC,QADK;AAEjBK,QAAAA,MAAM,EAAE,GAFS;AAGjBC,QAAAA,IAAI,EAAEa,WAHW;AAIjBZ,QAAAA,OAAO,EAAE;AAJQ,OAArB;AAMH,KATD,MAYA;AACIZ,MAAAA,GAAG,CAACQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACjBI,QAAAA,KAAK,EAAET,IAAI,CAACC,QADK;AAEjBK,QAAAA,MAAM,EAAE,GAFS;AAGjBE,QAAAA,OAAO,EAAE;AAHQ,OAArB;AAKH;AACJ,GArBD,WAuBO,UAACE,KAAD,EAAW;AACdd,IAAAA,GAAG,CAACQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACjBC,MAAAA,MAAM,EAAE,GADS;AAEjBK,MAAAA,KAAK,EAAED,KAAK,CAACE;AAFI,KAArB;AAIH,GA5BD;AA6BH,CA9BD;;AAiCAnB,OAAO,CAAC6B,kBAAR,GAA6B,UAAC3B,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AAC7CL,EAAAA,IAAI,CAACM,KAAL,CAAW,2CAAX,EACCC,IADD,CACM,UAACC,IAAD,EAAU;AACZ,QAAIA,IAAI,CAACC,QAAL,GAAgB,CAApB,EACA;AACI,UAAMmB,WAAW,GAAGpB,IAAI,CAACG,IAAzB;AACAP,MAAAA,GAAG,CAACQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACjBI,QAAAA,KAAK,EAAET,IAAI,CAACC,QADK;AAEjBK,QAAAA,MAAM,EAAE,GAFS;AAGjBC,QAAAA,IAAI,EAAEa,WAHW;AAIjBZ,QAAAA,OAAO,EAAE;AAJQ,OAArB;AAMH,KATD,MAYA;AACIZ,MAAAA,GAAG,CAACQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACjBI,QAAAA,KAAK,EAAET,IAAI,CAACC,QADK;AAEjBK,QAAAA,MAAM,EAAE,GAFS;AAGjBE,QAAAA,OAAO,EAAE;AAHQ,OAArB;AAKH;AACJ,GArBD,WAuBO,UAACE,KAAD,EAAW;AACdd,IAAAA,GAAG,CAACQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACjBC,MAAAA,MAAM,EAAE,GADS;AAEjBK,MAAAA,KAAK,EAAED,KAAK,CAACE;AAFI,KAArB;AAIH,GA5BD;AA6BH,CA9BD;;AAgCAnB,OAAO,CAAC8B,WAAR,GAAsB,UAAC5B,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AACtCL,EAAAA,IAAI,CAACM,KAAL,CAAW,oBAAX,EACCC,IADD,CACM,UAACC,IAAD,EAAU;AACZ,QAAIA,IAAI,CAACC,QAAL,GAAgB,CAApB,EACA;AACI,UAAMmB,WAAW,GAAGpB,IAAI,CAACG,IAAzB;AACAP,MAAAA,GAAG,CAACQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACjBI,QAAAA,KAAK,EAAET,IAAI,CAACC,QADK;AAEjBK,QAAAA,MAAM,EAAE,GAFS;AAGjBC,QAAAA,IAAI,EAAEa,WAHW;AAIjBZ,QAAAA,OAAO,EAAE;AAJQ,OAArB;AAMH,KATD,MAYA;AACIZ,MAAAA,GAAG,CAACQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACjBI,QAAAA,KAAK,EAAET,IAAI,CAACC,QADK;AAEjBK,QAAAA,MAAM,EAAE,GAFS;AAGjBE,QAAAA,OAAO,EAAE;AAHQ,OAArB;AAKH;AACJ,GArBD,WAuBO,UAACE,KAAD,EAAW;AACdd,IAAAA,GAAG,CAACQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACjBC,MAAAA,MAAM,EAAE,GADS;AAEjBK,MAAAA,KAAK,EAAED,KAAK,CAACE;AAFI,KAArB;AAIH,GA5BD;AA6BH,CA9BD;;AAgCAnB,OAAO,CAAC+B,eAAR,GAA0B,UAAC7B,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AAC1C,MAAM4B,MAAM,GAAG9B,GAAG,CAAC+B,MAAJ,CAAWD,MAA1B;AACAjC,EAAAA,IAAI,CAACM,KAAL,uCAA0C2B,MAA1C,GACC1B,IADD,CACM,UAACC,IAAD,EAAU;AACZ,QAAIA,IAAI,CAACC,QAAL,GAAgB,CAApB,EACA;AACI,UAAMmB,WAAW,GAAGpB,IAAI,CAACG,IAAzB;AACAP,MAAAA,GAAG,CAACQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACjBI,QAAAA,KAAK,EAAET,IAAI,CAACC,QADK;AAEjBK,QAAAA,MAAM,EAAE,GAFS;AAGjBC,QAAAA,IAAI,EAAEa,WAHW;AAIjBZ,QAAAA,OAAO,EAAE;AAJQ,OAArB;AAMH,KATD,MAYA;AACIZ,MAAAA,GAAG,CAACQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACjBI,QAAAA,KAAK,EAAET,IAAI,CAACC,QADK;AAEjBK,QAAAA,MAAM,EAAE,GAFS;AAGjBE,QAAAA,OAAO,EAAE;AAHQ,OAArB;AAKH;AACJ,GArBD,WAuBO,UAACE,KAAD,EAAW;AACdd,IAAAA,GAAG,CAACQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACjBC,MAAAA,MAAM,EAAE,GADS;AAEjBK,MAAAA,KAAK,EAAED,KAAK,CAACE;AAFI,KAArB;AAIH,GA5BD;AA6BH,CA/BD",
      "sourceRoot": "/home/kodek-sleuth/Desktop/Quick-credit/Api/Controllers",
      "sourcesContent": [
        "/* eslint-disable no-undef */\n/* eslint-disable no-lonely-if */\n/* eslint-disable object-shorthand */\n/* eslint-disable prefer-destructuring */\n/* eslint-disable max-len */\n/* eslint-disable no-trailing-spaces */\n/* eslint-disable brace-style */\n/* eslint-disable no-console */\n/* eslint-disable comma-dangle */\n/* eslint-disable no-unused-vars */\n/* eslint-disable eqeqeq */\n/* eslint-disable indent */\n\nconst Pool = require('pg').Pool;\n\nconst connectionString = process.env.QUICK_CREDIT_DB_TEST;\n\nconst pool = new Pool({ connectionString: connectionString });\n\nexports.getAllUsers = (req, res, next) => {\n    pool.query('Select * from users')\n    .then((data) => {\n        if (data.rowCount > 0)\n        {\n            const fetchedData1 = data.rows;\n            res.status(200).json({\n                Status: 200,\n                Data: fetchedData1,\n                Success: 'Successfully Fetched Users'\n            });\n        }\n\n        else\n        {\n            res.status(200).json({\n                Count: data.rowCount,\n                Status: 200,\n                Success: 'There are No Users in database'\n            });\n        }\n    })\n\n    .catch((error) => {\n        res.status(500).json({\n            Status: 500,\n            Error: error.message \n        });\n    });\n};\n\nexports.getUsersVerified = (req, res, next) => {\n    pool.query(\"Select * from users WHERE status='Verified'\")\n    .then((data) => {\n        if (data.rowCount > 0)\n        {\n            const fetchedData2 = data.rows;\n            res.status(200).json({\n                Count: data.rowCount,\n                Status: 200,\n                Data: fetchedData2,\n                Success: 'Successfully Fetched Users'\n            });\n        }\n\n        else\n        {\n            res.status(200).json({\n                Count: data.rowCount,\n                Status: 200,\n                Success: 'There are no verified users'\n            });\n        }\n    })\n\n    .catch((error) => {\n        res.status(500).json({\n            Status: 500,\n            Error: error.message \n        });\n    });\n};\n\nexports.getUsersPending = (req, res, next) => {\n    pool.query(\"Select * from users WHERE status='Pending'\")\n    .then((data) => {\n        if (data.rowCount > 0)\n        {\n            const fetchedData2 = data.rows;\n            res.status(200).json({\n                Count: data.rowCount,\n                Status: 200,\n                Data: fetchedData2,\n                Success: 'Successfully Fetched Users'\n            });\n        }\n\n        else\n        {\n            res.status(200).json({\n                Status: 200,\n                Success: 'There are no pending users'\n            });\n        }\n    })\n\n    .catch((error) => {\n        res.status(500).json({\n            Status: 500,\n            Error: error.message \n        });\n    });\n};\n\nexports.getLoansApproved = (req, res, next) => {\n    pool.query(\"Select * from loan WHERE status='Approved'\")\n    .then((data) => {\n        if (data.rowCount > 0)\n        {\n            const fetchedData2 = data.rows;\n            res.status(200).json({\n                Count: data.rowCount,\n                Status: 200,\n                Data: fetchedData2,\n                Success: 'Successfully Fetched Loans'\n            });\n        }\n\n        else\n        {\n            res.status(200).json({\n                Count: data.rowCount,\n                Status: 200,\n                Success: 'There are no approved loans'\n            });\n        }\n    })\n\n    .catch((error) => {\n        res.status(500).json({\n            Status: 500,\n            Error: error.message \n        });\n    });\n};\n\nexports.getLoansRejected = (req, res, next) => {\n    pool.query(\"Select * from loan WHERE status='Rejected'\")\n    .then((data) => {\n        if (data.rowCount > 0)\n        {\n            const fetchedData3 = data.rows;\n            res.status(200).json({\n                Count: data.rowCount,\n                Status: 200,\n                Data: fetchedData3,\n                Success: 'Successfully Fetched Loans'\n            });\n        }\n\n        else\n        {\n            res.status(200).json({\n                Count: data.rowCount,\n                Status: 200,\n                Success: 'There are no rejected loans'\n            });\n        }\n    })\n\n    .catch((error) => {\n        res.status(500).json({\n            Status: 500,\n            Error: error.message \n        });\n    });\n};\n\nexports.getLoansRepaid = (req, res, next) => {\n    pool.query(\"Select * from loan WHERE repaid='True'\")\n    .then((data) => {\n        if (data.rowCount > 0)\n        {\n            const fetchedData = data.rows;\n            res.status(200).json({\n                Count: data.rowCount,\n                Status: 200,\n                Data: fetchedData,\n                Success: 'Successfully Fetched Loans'\n            });\n        }\n\n        else\n        {\n            res.status(200).json({\n                Count: data.rowCount,\n                Status: 200,\n                Error: 'There are no repaid loans'\n            });\n        }\n    })\n\n    .catch((error) => {\n        res.status(500).json({\n            Status: 500,\n            Error: error.message \n        });\n    });\n};\n\nexports.getLoansUnrepaid = (req, res, next) => {\n    pool.query(\"Select * from loan WHERE repaid='False'\")\n    .then((data) => {\n        if (data.rowCount > 0)\n        {\n            const fetchedData = data.rows;\n            res.status(200).json({\n                Count: data.rowCount,\n                Status: 200,\n                Data: fetchedData,\n                Success: 'Successfully Fetched Loans'\n            });\n        }\n\n        else\n        {\n            res.status(200).json({\n                Count: data.rowCount,\n                Status: 200,\n                Success: 'There are no unrepaid Loans'\n            });\n        }\n    })\n\n    .catch((error) => {\n        res.status(500).json({\n            Status: 500,\n            Error: error.message \n        });\n    });\n};\n\n\nexports.getAllLoansPending = (req, res, next) => {\n    pool.query(\"Select * from loan WHERE status='Pending'\")\n    .then((data) => {\n        if (data.rowCount > 0)\n        {\n            const fetchedData = data.rows;\n            res.status(200).json({\n                Count: data.rowCount,\n                Status: 200,\n                Data: fetchedData,\n                Success: 'Successfully Fetched Loans'\n            });\n        }\n\n        else\n        {\n            res.status(200).json({\n                Count: data.rowCount,\n                Status: 200,\n                Success: 'There are no pending loans'\n            });\n        }\n    })\n\n    .catch((error) => {\n        res.status(500).json({\n            Status: 500,\n            Error: error.message \n        });\n    });\n};\n\nexports.getAllLoans = (req, res, next) => {\n    pool.query('Select * from loan')\n    .then((data) => {\n        if (data.rowCount > 0)\n        {\n            const fetchedData = data.rows;\n            res.status(200).json({\n                Count: data.rowCount,\n                Status: 200,\n                Data: fetchedData,\n                Success: 'Successfully Fetched Loans'\n            });\n        }\n\n        else\n        {\n            res.status(200).json({\n                Count: data.rowCount,\n                Status: 200,\n                Success: 'There are no Loans found'\n            });\n        }\n    })\n\n    .catch((error) => {\n        res.status(500).json({\n            Status: 500,\n            Error: error.message \n        });\n    });\n};\n\nexports.getSpecificLoan = (req, res, next) => {\n    const loanId = req.params.loanId;\n    pool.query(`Select * from loan WHERE id=${loanId}`)\n    .then((data) => {\n        if (data.rowCount > 0)\n        {\n            const fetchedData = data.rows;\n            res.status(200).json({\n                Count: data.rowCount,\n                Status: 200,\n                Data: fetchedData,\n                Success: 'Successfully Fetched Loan'\n            });\n        }\n\n        else\n        {\n            res.status(200).json({\n                Count: data.rowCount,\n                Status: 200,\n                Success: 'Loan with that Id does not exist'\n            });\n        }\n    })\n\n    .catch((error) => {\n        res.status(500).json({\n            Status: 500,\n            Error: error.message \n        });\n    });\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1557385196454
  },
  "{\"sourceRoot\":\"/home/kodek-sleuth/Desktop/Quick-credit/Api/Profiles\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/kodek-sleuth/Desktop/Quick-credit\",\"filename\":\"/home/kodek-sleuth/Desktop/Quick-credit/Api/Profiles/userProfile.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/kodek-sleuth/Desktop/Quick-credit\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/kodek-sleuth/Desktop/Quick-credit/Api/Profiles",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/kodek-sleuth/Desktop/Quick-credit",
      "filename": "/home/kodek-sleuth/Desktop/Quick-credit/Api/Profiles/userProfile.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/kodek-sleuth/Desktop/Quick-credit",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/kodek-sleuth/Desktop/Quick-credit/Api/Profiles/userProfile.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/home/kodek-sleuth/Desktop/Quick-credit/Api/Profiles/userProfile.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/kodek-sleuth/Desktop/Quick-credit/Api/Profiles",
        "sourceFileName": "userProfile.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar express = require('express');\n\nvar settings = require('../Settings/image');\n\nvar userProfile = express.Router();\n\nvar userProfileController = require('../Controllers/updateProfileUser');\n\nvar jwtMiddleware = require('../Settings/checkAuthUser');\n/**\n* @swagger\n* /api/v1/user/{:Email}/profile:\n*   get:\n*     security:\n*        - bearerAuth: []\n*     tags:\n*       - Profiles\n*     name: Gets User Profile\n*     summary: Gets a User Profile\n*     consumes:\n*       - multipart/form-data\n*     parameters:\n*       - name: \":Email\"\n*         in: path\n*         description: Email of User Profile\n*         required: true\n*         type: string\n*     responses:\n*       200:\n*         data: []\n*/\n\n\nuserProfile.get('/:Email/profile', jwtMiddleware, userProfileController.getUserProfile);\n/**\n* @swagger\n* /api/v1/user/{:Email}/profile:\n*   patch:\n*     security:\n*        - bearerAuth: []\n*     tags:\n*       - Profiles\n*     name: Update User Profile\n*     summary: Updates a User Profile\n*     consumes:\n*       - multipart/form-data\n*     parameters:\n*       - name: \":Email\"\n*         in: path\n*         description: Email of User Profile\n*         required: true\n*         type: string\n*       - name: Fullname\n*         in: formData\n*         type: string\n*         description: Yahya Jalal.\n*       - name: Email\n*         in: formData\n*         type: string\n*         description: yahya@gmail.com.\n*       - name: Password\n*         in: formData\n*         type: string\n*         description: stealth.\n*       - name: Address\n*         in: formData\n*         type: string\n*         description: Kitende, Entebbe.\n*       - name: Image\n*         in: formData\n*         type: file\n*         required: true\n*         description: Upload an Image File.\n*     responses:\n*       200:\n*         description: Successfully Updated Profile\n*       401:\n*         description: User Authorisation required to access resource\n*/\n\nuserProfile.patch('/:Email/profile', jwtMiddleware, settings.upload.single('Image'), userProfileController.updateUserProfile);\nmodule.exports = userProfile;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVzZXJQcm9maWxlLmpzIl0sIm5hbWVzIjpbImV4cHJlc3MiLCJyZXF1aXJlIiwic2V0dGluZ3MiLCJ1c2VyUHJvZmlsZSIsIlJvdXRlciIsInVzZXJQcm9maWxlQ29udHJvbGxlciIsImp3dE1pZGRsZXdhcmUiLCJnZXQiLCJnZXRVc2VyUHJvZmlsZSIsInBhdGNoIiwidXBsb2FkIiwic2luZ2xlIiwidXBkYXRlVXNlclByb2ZpbGUiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiOztBQUFBLElBQU1BLE9BQU8sR0FBR0MsT0FBTyxDQUFDLFNBQUQsQ0FBdkI7O0FBRUEsSUFBTUMsUUFBUSxHQUFHRCxPQUFPLENBQUMsbUJBQUQsQ0FBeEI7O0FBRUEsSUFBTUUsV0FBVyxHQUFHSCxPQUFPLENBQUNJLE1BQVIsRUFBcEI7O0FBRUEsSUFBTUMscUJBQXFCLEdBQUdKLE9BQU8sQ0FBQyxrQ0FBRCxDQUFyQzs7QUFFQSxJQUFNSyxhQUFhLEdBQUdMLE9BQU8sQ0FBQywyQkFBRCxDQUE3QjtBQUVBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUF1QkFFLFdBQVcsQ0FBQ0ksR0FBWixDQUFnQixpQkFBaEIsRUFBbUNELGFBQW5DLEVBQWtERCxxQkFBcUIsQ0FBQ0csY0FBeEU7QUFFQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQThDQUwsV0FBVyxDQUFDTSxLQUFaLENBQWtCLGlCQUFsQixFQUFxQ0gsYUFBckMsRUFBb0RKLFFBQVEsQ0FBQ1EsTUFBVCxDQUFnQkMsTUFBaEIsQ0FBdUIsT0FBdkIsQ0FBcEQsRUFBcUZOLHFCQUFxQixDQUFDTyxpQkFBM0c7QUFFQUMsTUFBTSxDQUFDQyxPQUFQLEdBQWlCWCxXQUFqQiIsInNvdXJjZVJvb3QiOiIvaG9tZS9rb2Rlay1zbGV1dGgvRGVza3RvcC9RdWljay1jcmVkaXQvQXBpL1Byb2ZpbGVzIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgZXhwcmVzcyA9IHJlcXVpcmUoJ2V4cHJlc3MnKTtcblxuY29uc3Qgc2V0dGluZ3MgPSByZXF1aXJlKCcuLi9TZXR0aW5ncy9pbWFnZScpO1xuXG5jb25zdCB1c2VyUHJvZmlsZSA9IGV4cHJlc3MuUm91dGVyKCk7XG5cbmNvbnN0IHVzZXJQcm9maWxlQ29udHJvbGxlciA9IHJlcXVpcmUoJy4uL0NvbnRyb2xsZXJzL3VwZGF0ZVByb2ZpbGVVc2VyJyk7XG5cbmNvbnN0IGp3dE1pZGRsZXdhcmUgPSByZXF1aXJlKCcuLi9TZXR0aW5ncy9jaGVja0F1dGhVc2VyJyk7XG5cbi8qKlxuKiBAc3dhZ2dlclxuKiAvYXBpL3YxL3VzZXIvezpFbWFpbH0vcHJvZmlsZTpcbiogICBnZXQ6XG4qICAgICBzZWN1cml0eTpcbiogICAgICAgIC0gYmVhcmVyQXV0aDogW11cbiogICAgIHRhZ3M6XG4qICAgICAgIC0gUHJvZmlsZXNcbiogICAgIG5hbWU6IEdldHMgVXNlciBQcm9maWxlXG4qICAgICBzdW1tYXJ5OiBHZXRzIGEgVXNlciBQcm9maWxlXG4qICAgICBjb25zdW1lczpcbiogICAgICAgLSBtdWx0aXBhcnQvZm9ybS1kYXRhXG4qICAgICBwYXJhbWV0ZXJzOlxuKiAgICAgICAtIG5hbWU6IFwiOkVtYWlsXCJcbiogICAgICAgICBpbjogcGF0aFxuKiAgICAgICAgIGRlc2NyaXB0aW9uOiBFbWFpbCBvZiBVc2VyIFByb2ZpbGVcbiogICAgICAgICByZXF1aXJlZDogdHJ1ZVxuKiAgICAgICAgIHR5cGU6IHN0cmluZ1xuKiAgICAgcmVzcG9uc2VzOlxuKiAgICAgICAyMDA6XG4qICAgICAgICAgZGF0YTogW11cbiovXG5cbnVzZXJQcm9maWxlLmdldCgnLzpFbWFpbC9wcm9maWxlJywgand0TWlkZGxld2FyZSwgdXNlclByb2ZpbGVDb250cm9sbGVyLmdldFVzZXJQcm9maWxlKTtcblxuLyoqXG4qIEBzd2FnZ2VyXG4qIC9hcGkvdjEvdXNlci97OkVtYWlsfS9wcm9maWxlOlxuKiAgIHBhdGNoOlxuKiAgICAgc2VjdXJpdHk6XG4qICAgICAgICAtIGJlYXJlckF1dGg6IFtdXG4qICAgICB0YWdzOlxuKiAgICAgICAtIFByb2ZpbGVzXG4qICAgICBuYW1lOiBVcGRhdGUgVXNlciBQcm9maWxlXG4qICAgICBzdW1tYXJ5OiBVcGRhdGVzIGEgVXNlciBQcm9maWxlXG4qICAgICBjb25zdW1lczpcbiogICAgICAgLSBtdWx0aXBhcnQvZm9ybS1kYXRhXG4qICAgICBwYXJhbWV0ZXJzOlxuKiAgICAgICAtIG5hbWU6IFwiOkVtYWlsXCJcbiogICAgICAgICBpbjogcGF0aFxuKiAgICAgICAgIGRlc2NyaXB0aW9uOiBFbWFpbCBvZiBVc2VyIFByb2ZpbGVcbiogICAgICAgICByZXF1aXJlZDogdHJ1ZVxuKiAgICAgICAgIHR5cGU6IHN0cmluZ1xuKiAgICAgICAtIG5hbWU6IEZ1bGxuYW1lXG4qICAgICAgICAgaW46IGZvcm1EYXRhXG4qICAgICAgICAgdHlwZTogc3RyaW5nXG4qICAgICAgICAgZGVzY3JpcHRpb246IFlhaHlhIEphbGFsLlxuKiAgICAgICAtIG5hbWU6IEVtYWlsXG4qICAgICAgICAgaW46IGZvcm1EYXRhXG4qICAgICAgICAgdHlwZTogc3RyaW5nXG4qICAgICAgICAgZGVzY3JpcHRpb246IHlhaHlhQGdtYWlsLmNvbS5cbiogICAgICAgLSBuYW1lOiBQYXNzd29yZFxuKiAgICAgICAgIGluOiBmb3JtRGF0YVxuKiAgICAgICAgIHR5cGU6IHN0cmluZ1xuKiAgICAgICAgIGRlc2NyaXB0aW9uOiBzdGVhbHRoLlxuKiAgICAgICAtIG5hbWU6IEFkZHJlc3NcbiogICAgICAgICBpbjogZm9ybURhdGFcbiogICAgICAgICB0eXBlOiBzdHJpbmdcbiogICAgICAgICBkZXNjcmlwdGlvbjogS2l0ZW5kZSwgRW50ZWJiZS5cbiogICAgICAgLSBuYW1lOiBJbWFnZVxuKiAgICAgICAgIGluOiBmb3JtRGF0YVxuKiAgICAgICAgIHR5cGU6IGZpbGVcbiogICAgICAgICByZXF1aXJlZDogdHJ1ZVxuKiAgICAgICAgIGRlc2NyaXB0aW9uOiBVcGxvYWQgYW4gSW1hZ2UgRmlsZS5cbiogICAgIHJlc3BvbnNlczpcbiogICAgICAgMjAwOlxuKiAgICAgICAgIGRlc2NyaXB0aW9uOiBTdWNjZXNzZnVsbHkgVXBkYXRlZCBQcm9maWxlXG4qICAgICAgIDQwMTpcbiogICAgICAgICBkZXNjcmlwdGlvbjogVXNlciBBdXRob3Jpc2F0aW9uIHJlcXVpcmVkIHRvIGFjY2VzcyByZXNvdXJjZVxuKi9cblxudXNlclByb2ZpbGUucGF0Y2goJy86RW1haWwvcHJvZmlsZScsIGp3dE1pZGRsZXdhcmUsIHNldHRpbmdzLnVwbG9hZC5zaW5nbGUoJ0ltYWdlJyksIHVzZXJQcm9maWxlQ29udHJvbGxlci51cGRhdGVVc2VyUHJvZmlsZSk7XG5cbm1vZHVsZS5leHBvcnRzID0gdXNlclByb2ZpbGU7XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "userProfile.js"
      ],
      "names": [
        "express",
        "require",
        "settings",
        "userProfile",
        "Router",
        "userProfileController",
        "jwtMiddleware",
        "get",
        "getUserProfile",
        "patch",
        "upload",
        "single",
        "updateUserProfile",
        "module",
        "exports"
      ],
      "mappings": ";;AAAA,IAAMA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;AAEA,IAAMC,QAAQ,GAAGD,OAAO,CAAC,mBAAD,CAAxB;;AAEA,IAAME,WAAW,GAAGH,OAAO,CAACI,MAAR,EAApB;;AAEA,IAAMC,qBAAqB,GAAGJ,OAAO,CAAC,kCAAD,CAArC;;AAEA,IAAMK,aAAa,GAAGL,OAAO,CAAC,2BAAD,CAA7B;AAEA;;;;;;;;;;;;;;;;;;;;;;;;AAuBAE,WAAW,CAACI,GAAZ,CAAgB,iBAAhB,EAAmCD,aAAnC,EAAkDD,qBAAqB,CAACG,cAAxE;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8CAL,WAAW,CAACM,KAAZ,CAAkB,iBAAlB,EAAqCH,aAArC,EAAoDJ,QAAQ,CAACQ,MAAT,CAAgBC,MAAhB,CAAuB,OAAvB,CAApD,EAAqFN,qBAAqB,CAACO,iBAA3G;AAEAC,MAAM,CAACC,OAAP,GAAiBX,WAAjB",
      "sourceRoot": "/home/kodek-sleuth/Desktop/Quick-credit/Api/Profiles",
      "sourcesContent": [
        "const express = require('express');\n\nconst settings = require('../Settings/image');\n\nconst userProfile = express.Router();\n\nconst userProfileController = require('../Controllers/updateProfileUser');\n\nconst jwtMiddleware = require('../Settings/checkAuthUser');\n\n/**\n* @swagger\n* /api/v1/user/{:Email}/profile:\n*   get:\n*     security:\n*        - bearerAuth: []\n*     tags:\n*       - Profiles\n*     name: Gets User Profile\n*     summary: Gets a User Profile\n*     consumes:\n*       - multipart/form-data\n*     parameters:\n*       - name: \":Email\"\n*         in: path\n*         description: Email of User Profile\n*         required: true\n*         type: string\n*     responses:\n*       200:\n*         data: []\n*/\n\nuserProfile.get('/:Email/profile', jwtMiddleware, userProfileController.getUserProfile);\n\n/**\n* @swagger\n* /api/v1/user/{:Email}/profile:\n*   patch:\n*     security:\n*        - bearerAuth: []\n*     tags:\n*       - Profiles\n*     name: Update User Profile\n*     summary: Updates a User Profile\n*     consumes:\n*       - multipart/form-data\n*     parameters:\n*       - name: \":Email\"\n*         in: path\n*         description: Email of User Profile\n*         required: true\n*         type: string\n*       - name: Fullname\n*         in: formData\n*         type: string\n*         description: Yahya Jalal.\n*       - name: Email\n*         in: formData\n*         type: string\n*         description: yahya@gmail.com.\n*       - name: Password\n*         in: formData\n*         type: string\n*         description: stealth.\n*       - name: Address\n*         in: formData\n*         type: string\n*         description: Kitende, Entebbe.\n*       - name: Image\n*         in: formData\n*         type: file\n*         required: true\n*         description: Upload an Image File.\n*     responses:\n*       200:\n*         description: Successfully Updated Profile\n*       401:\n*         description: User Authorisation required to access resource\n*/\n\nuserProfile.patch('/:Email/profile', jwtMiddleware, settings.upload.single('Image'), userProfileController.updateUserProfile);\n\nmodule.exports = userProfile;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1557385196462
  },
  "{\"sourceRoot\":\"/home/kodek-sleuth/Desktop/Quick-credit/Api/Controllers\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/kodek-sleuth/Desktop/Quick-credit\",\"filename\":\"/home/kodek-sleuth/Desktop/Quick-credit/Api/Controllers/updateProfileUser.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/kodek-sleuth/Desktop/Quick-credit\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/kodek-sleuth/Desktop/Quick-credit/Api/Controllers",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/kodek-sleuth/Desktop/Quick-credit",
      "filename": "/home/kodek-sleuth/Desktop/Quick-credit/Api/Controllers/updateProfileUser.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/kodek-sleuth/Desktop/Quick-credit",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/kodek-sleuth/Desktop/Quick-credit/Api/Controllers/updateProfileUser.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/home/kodek-sleuth/Desktop/Quick-credit/Api/Controllers/updateProfileUser.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/kodek-sleuth/Desktop/Quick-credit/Api/Controllers",
        "sourceFileName": "updateProfileUser.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\n/* eslint-disable no-lonely-if */\n\n/* eslint-disable object-shorthand */\n\n/* eslint-disable prefer-destructuring */\n\n/* eslint-disable max-len */\n\n/* eslint-disable no-trailing-spaces */\n\n/* eslint-disable brace-style */\n\n/* eslint-disable no-console */\n\n/* eslint-disable comma-dangle */\n\n/* eslint-disable no-unused-vars */\n\n/* eslint-disable eqeqeq */\n\n/* eslint-disable indent */\nvar Pool = require('pg').Pool;\n\nvar bcrypt = require('bcrypt');\n\nvar connectionString = process.env.QUICK_CREDIT_DB_TEST;\nvar pool = new Pool({\n  connectionString: connectionString\n});\n\nexports.getUserProfile = function (req, res, next) {\n  var Email = req.params.Email;\n  pool.query(\"Select * from users WHERE email='\".concat(Email, \"'\")).then(function (data) {\n    if (data.rowCount > 0) {\n      var fetchedData2 = data.rows;\n      res.status(200).json({\n        Status: 200,\n        Data: fetchedData2\n      });\n    } else {\n      res.status(200).json({\n        Count: data.rowCount,\n        Status: 200,\n        Success: 'No user exists with that email'\n      });\n    }\n  })[\"catch\"](function (error) {\n    res.status(500).json({\n      Status: 500,\n      Error: error.message\n    });\n  });\n};\n\nexports.updateUserProfile = function (req, res, next) {\n  var email = req.params.Email;\n\n  if (req.body.Email) {\n    pool.query(\"UPDATE users set email='\".concat(req.body.Email, \"' where email='\").concat(email, \"'\")).then(function (feedBack) {\n      pool.query(\"select * from users where email='\".concat(email, \"'\")).then(function (feedBack2) {\n        console.log(feedBack2.rows);\n        res.status(200);\n      })[\"catch\"](function (error) {\n        res.status(500).json({\n          Status: 500,\n          Error: error.message\n        });\n      });\n    })[\"catch\"](function (error) {\n      res.status(500).json({\n        Status: 500,\n        Error: error.message\n      });\n    });\n  }\n\n  if (req.body.Fullname) {\n    pool.query(\"UPDATE users set fullname='\".concat(req.body.Fullname, \"' where email='\").concat(email, \"'\")).then(function (feedBack) {\n      pool.query(\"select * from users where email='\".concat(email, \"'\")).then(function (feedBack2) {\n        res.status(200);\n      })[\"catch\"](function (error) {\n        res.status(500).json({\n          Status: 500,\n          Error: error.message\n        });\n      });\n    })[\"catch\"](function (error) {\n      res.status(500).json({\n        Status: 500,\n        Error: error.message\n      });\n    });\n  }\n\n  if (req.body.OldPassword) {\n    pool.query(\"SELECT * FROM users where email='\".concat(email, \"'\"), function (errorFound2, result) {\n      if (errorFound2) {\n        res.status(500).json({\n          Status: 500,\n          Error: errorFound2.message\n        });\n      } else {\n        var fetchedData = result.rows;\n        bcrypt.compare(req.body.OldPassword, fetchedData[0].password, function (err, goodFeedBack) {\n          if (err) {\n            res.status(500).json({\n              Status: 500,\n              Error: err.message\n            });\n          } else {\n            bcrypt.hash(req.body.NewPassword, 10, function (errr, hash) {\n              if (err) {\n                res.status(500).json({\n                  Status: 500,\n                  Error: err.message\n                });\n              } else {\n                pool.query(\"UPDATE users set password='\".concat(hash, \"' where email='\").concat(email, \"'\"), function (errorFound, feedBack) {\n                  if (errorFound) {\n                    res.status(500).json({\n                      Status: 500,\n                      Error: errorFound\n                    });\n                  } else {\n                    pool.query(\"select * from users where email='\".concat(email, \"'\"), function (error, feedBack2) {\n                      if (error) {\n                        res.status(500).json({\n                          Status: 500,\n                          Error: error.message\n                        });\n                      } else {\n                        res.status(200);\n                      }\n                    });\n                  }\n                });\n              }\n            });\n          }\n        });\n      }\n    });\n  }\n\n  if (req.body.Address) {\n    pool.query(\"UPDATE users set address='\".concat(req.body.Address, \"' where email='\").concat(email, \"'\"), function (error, success) {\n      if (error) {\n        res.status(500).json({\n          Status: 500,\n          Error: error.message\n        });\n      } else {\n        pool.query(\"select * from users where email='\".concat(email, \"'\"), function (error2, success2) {\n          if (error) {\n            res.status(500).json({\n              Status: 500,\n              Error: error.message\n            });\n          } else {\n            res.status(200);\n          }\n        });\n      }\n    });\n  }\n\n  if (req.file.path) {\n    pool.query(\"UPDATE users set image='\".concat(req.file.path, \"' where email='\").concat(email, \"'\")).then(function (feedBack) {\n      pool.query(\"select * from users where email='\".concat(email, \"'\"), function (err, success) {\n        if (err) {\n          res.status(500).json({\n            Status: 500,\n            Error: err.message\n          });\n        } else {\n          res.status(200).json({\n            Status: 200,\n            Data: success.rows,\n            Success: 'Successfully Updated Profile'\n          });\n        }\n      });\n    })[\"catch\"](function (error) {\n      res.status(500).json({\n        Status: 500,\n        Error: error.message\n      });\n    });\n  }\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "updateProfileUser.js"
      ],
      "names": [
        "Pool",
        "require",
        "bcrypt",
        "connectionString",
        "process",
        "env",
        "QUICK_CREDIT_DB_TEST",
        "pool",
        "exports",
        "getUserProfile",
        "req",
        "res",
        "next",
        "Email",
        "params",
        "query",
        "then",
        "data",
        "rowCount",
        "fetchedData2",
        "rows",
        "status",
        "json",
        "Status",
        "Data",
        "Count",
        "Success",
        "error",
        "Error",
        "message",
        "updateUserProfile",
        "email",
        "body",
        "feedBack",
        "feedBack2",
        "console",
        "log",
        "Fullname",
        "OldPassword",
        "errorFound2",
        "result",
        "fetchedData",
        "compare",
        "password",
        "err",
        "goodFeedBack",
        "hash",
        "NewPassword",
        "errr",
        "errorFound",
        "Address",
        "success",
        "error2",
        "success2",
        "file",
        "path"
      ],
      "mappings": ";;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;AAEA,IAAMA,IAAI,GAAGC,OAAO,CAAC,IAAD,CAAP,CAAcD,IAA3B;;AAEA,IAAME,MAAM,GAAGD,OAAO,CAAC,QAAD,CAAtB;;AAEA,IAAME,gBAAgB,GAAGC,OAAO,CAACC,GAAR,CAAYC,oBAArC;AAEA,IAAMC,IAAI,GAAG,IAAIP,IAAJ,CAAS;AAAEG,EAAAA,gBAAgB,EAAEA;AAApB,CAAT,CAAb;;AAEAK,OAAO,CAACC,cAAR,GAAyB,UAACC,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AACzC,MAAMC,KAAK,GAAGH,GAAG,CAACI,MAAJ,CAAWD,KAAzB;AAEAN,EAAAA,IAAI,CAACQ,KAAL,4CAA+CF,KAA/C,QACCG,IADD,CACM,UAACC,IAAD,EAAU;AACZ,QAAIA,IAAI,CAACC,QAAL,GAAgB,CAApB,EACA;AACI,UAAMC,YAAY,GAAGF,IAAI,CAACG,IAA1B;AACAT,MAAAA,GAAG,CAACU,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACjBC,QAAAA,MAAM,EAAE,GADS;AAEjBC,QAAAA,IAAI,EAAEL;AAFW,OAArB;AAIH,KAPD,MAUA;AACIR,MAAAA,GAAG,CAACU,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACjBG,QAAAA,KAAK,EAAER,IAAI,CAACC,QADK;AAEjBK,QAAAA,MAAM,EAAE,GAFS;AAGjBG,QAAAA,OAAO,EAAE;AAHQ,OAArB;AAKH;AACJ,GAnBD,WAqBO,UAACC,KAAD,EAAW;AACdhB,IAAAA,GAAG,CAACU,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACjBC,MAAAA,MAAM,EAAE,GADS;AAEjBK,MAAAA,KAAK,EAAED,KAAK,CAACE;AAFI,KAArB;AAIH,GA1BD;AA2BH,CA9BD;;AAgCArB,OAAO,CAACsB,iBAAR,GAA4B,UAACpB,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AAC5C,MAAMmB,KAAK,GAAGrB,GAAG,CAACI,MAAJ,CAAWD,KAAzB;;AAEA,MAAIH,GAAG,CAACsB,IAAJ,CAASnB,KAAb,EACA;AACIN,IAAAA,IAAI,CAACQ,KAAL,mCAAsCL,GAAG,CAACsB,IAAJ,CAASnB,KAA/C,4BAAsEkB,KAAtE,QACCf,IADD,CACM,UAACiB,QAAD,EAAc;AAChB1B,MAAAA,IAAI,CAACQ,KAAL,4CAA+CgB,KAA/C,QACCf,IADD,CACM,UAACkB,SAAD,EAAe;AACjBC,QAAAA,OAAO,CAACC,GAAR,CAAYF,SAAS,CAACd,IAAtB;AACAT,QAAAA,GAAG,CAACU,MAAJ,CAAW,GAAX;AACH,OAJD,WAKO,UAACM,KAAD,EAAW;AACdhB,QAAAA,GAAG,CAACU,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACjBC,UAAAA,MAAM,EAAE,GADS;AAEjBK,UAAAA,KAAK,EAAED,KAAK,CAACE;AAFI,SAArB;AAIH,OAVD;AAWH,KAbD,WAeO,UAACF,KAAD,EAAW;AACdhB,MAAAA,GAAG,CAACU,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACjBC,QAAAA,MAAM,EAAE,GADS;AAEjBK,QAAAA,KAAK,EAAED,KAAK,CAACE;AAFI,OAArB;AAIH,KApBD;AAqBH;;AAED,MAAInB,GAAG,CAACsB,IAAJ,CAASK,QAAb,EACA;AACI9B,IAAAA,IAAI,CAACQ,KAAL,sCAAyCL,GAAG,CAACsB,IAAJ,CAASK,QAAlD,4BAA4EN,KAA5E,QACCf,IADD,CACM,UAACiB,QAAD,EAAc;AAChB1B,MAAAA,IAAI,CAACQ,KAAL,4CAA+CgB,KAA/C,QACCf,IADD,CACM,UAACkB,SAAD,EAAe;AACjBvB,QAAAA,GAAG,CAACU,MAAJ,CAAW,GAAX;AACH,OAHD,WAIO,UAACM,KAAD,EAAW;AACdhB,QAAAA,GAAG,CAACU,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACjBC,UAAAA,MAAM,EAAE,GADS;AAEjBK,UAAAA,KAAK,EAAED,KAAK,CAACE;AAFI,SAArB;AAIH,OATD;AAUH,KAZD,WAcO,UAACF,KAAD,EAAW;AACdhB,MAAAA,GAAG,CAACU,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACjBC,QAAAA,MAAM,EAAE,GADS;AAEjBK,QAAAA,KAAK,EAAED,KAAK,CAACE;AAFI,OAArB;AAIH,KAnBD;AAoBH;;AAED,MAAInB,GAAG,CAACsB,IAAJ,CAASM,WAAb,EACA;AACI/B,IAAAA,IAAI,CAACQ,KAAL,4CAA+CgB,KAA/C,QAAyD,UAACQ,WAAD,EAAcC,MAAd,EAAyB;AAC9E,UAAID,WAAJ,EACA;AACI5B,QAAAA,GAAG,CAACU,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACjBC,UAAAA,MAAM,EAAE,GADS;AAEjBK,UAAAA,KAAK,EAAEW,WAAW,CAACV;AAFF,SAArB;AAIH,OAND,MASA;AACI,YAAMY,WAAW,GAAGD,MAAM,CAACpB,IAA3B;AACAlB,QAAAA,MAAM,CAACwC,OAAP,CAAehC,GAAG,CAACsB,IAAJ,CAASM,WAAxB,EAAqCG,WAAW,CAAC,CAAD,CAAX,CAAeE,QAApD,EAA8D,UAACC,GAAD,EAAMC,YAAN,EAAuB;AACrF,cAAID,GAAJ,EACA;AACIjC,YAAAA,GAAG,CAACU,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACjBC,cAAAA,MAAM,EAAE,GADS;AAEjBK,cAAAA,KAAK,EAAEgB,GAAG,CAACf;AAFM,aAArB;AAIH,WAND,MASA;AACI3B,YAAAA,MAAM,CAAC4C,IAAP,CAAYpC,GAAG,CAACsB,IAAJ,CAASe,WAArB,EAAkC,EAAlC,EAAsC,UAACC,IAAD,EAAOF,IAAP,EAAgB;AAClD,kBAAIF,GAAJ,EACA;AACIjC,gBAAAA,GAAG,CAACU,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACjBC,kBAAAA,MAAM,EAAE,GADS;AAEjBK,kBAAAA,KAAK,EAAEgB,GAAG,CAACf;AAFM,iBAArB;AAIH,eAND,MASA;AACItB,gBAAAA,IAAI,CAACQ,KAAL,sCAAyC+B,IAAzC,4BAA+Df,KAA/D,QAAyE,UAACkB,UAAD,EAAahB,QAAb,EAA0B;AAC/F,sBAAIgB,UAAJ,EACA;AACItC,oBAAAA,GAAG,CAACU,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACjBC,sBAAAA,MAAM,EAAE,GADS;AAEjBK,sBAAAA,KAAK,EAAEqB;AAFU,qBAArB;AAIH,mBAND,MASA;AACI1C,oBAAAA,IAAI,CAACQ,KAAL,4CAA+CgB,KAA/C,QAAyD,UAACJ,KAAD,EAAQO,SAAR,EAAsB;AAC3E,0BAAIP,KAAJ,EACA;AACIhB,wBAAAA,GAAG,CAACU,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACjBC,0BAAAA,MAAM,EAAE,GADS;AAEjBK,0BAAAA,KAAK,EAAED,KAAK,CAACE;AAFI,yBAArB;AAIH,uBAND,MASA;AACIlB,wBAAAA,GAAG,CAACU,MAAJ,CAAW,GAAX;AACH;AACJ,qBAbD;AAcH;AACJ,iBA1BD;AA2BH;AACJ,aAvCD;AAwCH;AACJ,SApDG;AAqDH;AACJ,KAlED;AAmEH;;AAED,MAAIX,GAAG,CAACsB,IAAJ,CAASkB,OAAb,EACA;AACI3C,IAAAA,IAAI,CAACQ,KAAL,qCAAwCL,GAAG,CAACsB,IAAJ,CAASkB,OAAjD,4BAA0EnB,KAA1E,QAAoF,UAACJ,KAAD,EAAQwB,OAAR,EAAoB;AACpG,UAAIxB,KAAJ,EACA;AACIhB,QAAAA,GAAG,CAACU,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACjBC,UAAAA,MAAM,EAAE,GADS;AAEjBK,UAAAA,KAAK,EAAED,KAAK,CAACE;AAFI,SAArB;AAIH,OAND,MASA;AACItB,QAAAA,IAAI,CAACQ,KAAL,4CAA+CgB,KAA/C,QAAyD,UAACqB,MAAD,EAASC,QAAT,EAAsB;AAC3E,cAAI1B,KAAJ,EACA;AACIhB,YAAAA,GAAG,CAACU,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACjBC,cAAAA,MAAM,EAAE,GADS;AAEjBK,cAAAA,KAAK,EAAED,KAAK,CAACE;AAFI,aAArB;AAIH,WAND,MASA;AACIlB,YAAAA,GAAG,CAACU,MAAJ,CAAW,GAAX;AACH;AACJ,SAbD;AAcH;AACJ,KA1BD;AA2BH;;AAED,MAAIX,GAAG,CAAC4C,IAAJ,CAASC,IAAb,EACA;AACIhD,IAAAA,IAAI,CAACQ,KAAL,mCAAsCL,GAAG,CAAC4C,IAAJ,CAASC,IAA/C,4BAAqExB,KAArE,QACCf,IADD,CACM,UAACiB,QAAD,EAAc;AAChB1B,MAAAA,IAAI,CAACQ,KAAL,4CAA+CgB,KAA/C,QAAyD,UAACa,GAAD,EAAMO,OAAN,EAAkB;AACvE,YAAIP,GAAJ,EACA;AACIjC,UAAAA,GAAG,CAACU,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACjBC,YAAAA,MAAM,EAAE,GADS;AAEjBK,YAAAA,KAAK,EAAEgB,GAAG,CAACf;AAFM,WAArB;AAIH,SAND,MASA;AACIlB,UAAAA,GAAG,CAACU,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACjBC,YAAAA,MAAM,EAAE,GADS;AAEjBC,YAAAA,IAAI,EAAE2B,OAAO,CAAC/B,IAFG;AAGjBM,YAAAA,OAAO,EAAE;AAHQ,WAArB;AAKH;AACJ,OAjBD;AAkBH,KApBD,WAsBO,UAACC,KAAD,EAAW;AACdhB,MAAAA,GAAG,CAACU,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACjBC,QAAAA,MAAM,EAAE,GADS;AAEjBK,QAAAA,KAAK,EAAED,KAAK,CAACE;AAFI,OAArB;AAIH,KA3BD;AA4BH;AACJ,CAzLD",
      "sourceRoot": "/home/kodek-sleuth/Desktop/Quick-credit/Api/Controllers",
      "sourcesContent": [
        "/* eslint-disable no-lonely-if */\n/* eslint-disable object-shorthand */\n/* eslint-disable prefer-destructuring */\n/* eslint-disable max-len */\n/* eslint-disable no-trailing-spaces */\n/* eslint-disable brace-style */\n/* eslint-disable no-console */\n/* eslint-disable comma-dangle */\n/* eslint-disable no-unused-vars */\n/* eslint-disable eqeqeq */\n/* eslint-disable indent */\n\nconst Pool = require('pg').Pool;\n\nconst bcrypt = require('bcrypt');\n\nconst connectionString = process.env.QUICK_CREDIT_DB_TEST;\n\nconst pool = new Pool({ connectionString: connectionString });\n\nexports.getUserProfile = (req, res, next) => {\n    const Email = req.params.Email;\n\n    pool.query(`Select * from users WHERE email='${Email}'`)\n    .then((data) => {\n        if (data.rowCount > 0)\n        {\n            const fetchedData2 = data.rows;\n            res.status(200).json({\n                Status: 200,\n                Data: fetchedData2\n            });\n        }\n\n        else\n        {\n            res.status(200).json({\n                Count: data.rowCount,\n                Status: 200,\n                Success: 'No user exists with that email'\n            });\n        }\n    })\n\n    .catch((error) => {\n        res.status(500).json({\n            Status: 500,\n            Error: error.message \n        });\n    });\n};\n\nexports.updateUserProfile = (req, res, next) => {\n    const email = req.params.Email;\n\n    if (req.body.Email)\n    {\n        pool.query(`UPDATE users set email='${req.body.Email}' where email='${email}'`)\n        .then((feedBack) => {\n            pool.query(`select * from users where email='${email}'`)\n            .then((feedBack2) => {\n                console.log(feedBack2.rows);\n                res.status(200);\n            })\n            .catch((error) => {\n                res.status(500).json({\n                    Status: 500,\n                    Error: error.message\n                });\n            });\n        })\n\n        .catch((error) => {\n            res.status(500).json({\n                Status: 500,\n                Error: error.message\n            });\n        });\n    }\n\n    if (req.body.Fullname)\n    {\n        pool.query(`UPDATE users set fullname='${req.body.Fullname}' where email='${email}'`)\n        .then((feedBack) => {\n            pool.query(`select * from users where email='${email}'`)\n            .then((feedBack2) => {\n                res.status(200);\n            })\n            .catch((error) => {\n                res.status(500).json({\n                    Status: 500,\n                    Error: error.message\n                });\n            });\n        })\n\n        .catch((error) => {\n            res.status(500).json({\n                Status: 500,\n                Error: error.message\n            });\n        });\n    }\n\n    if (req.body.OldPassword)\n    {\n        pool.query(`SELECT * FROM users where email='${email}'`, (errorFound2, result) => {\n            if (errorFound2)\n            {\n                res.status(500).json({\n                    Status: 500,\n                    Error: errorFound2.message\n                });\n            }\n\n            else\n            {\n                const fetchedData = result.rows;\n                bcrypt.compare(req.body.OldPassword, fetchedData[0].password, (err, goodFeedBack) => {\n                if (err)\n                {\n                    res.status(500).json({\n                        Status: 500,\n                        Error: err.message\n                    });\n                }\n\n                else\n                {\n                    bcrypt.hash(req.body.NewPassword, 10, (errr, hash) => {\n                        if (err)\n                        {\n                            res.status(500).json({\n                                Status: 500,\n                                Error: err.message\n                            });\n                        }\n\n                        else\n                        {\n                            pool.query(`UPDATE users set password='${hash}' where email='${email}'`, (errorFound, feedBack) => {\n                                if (errorFound)\n                                {\n                                    res.status(500).json({\n                                        Status: 500,\n                                        Error: errorFound\n                                    });\n                                }\n\n                                else\n                                {\n                                    pool.query(`select * from users where email='${email}'`, (error, feedBack2) => {\n                                        if (error)\n                                        {\n                                            res.status(500).json({\n                                                Status: 500,\n                                                Error: error.message\n                                            });\n                                        }\n    \n                                        else\n                                        {\n                                            res.status(200);\n                                        }\n                                    });\n                                }\n                            });\n                        }\n                    });\n                }\n            });\n            }\n        });\n    }\n\n    if (req.body.Address)\n    {\n        pool.query(`UPDATE users set address='${req.body.Address}' where email='${email}'`, (error, success) => {\n            if (error)\n            {\n                res.status(500).json({\n                    Status: 500,\n                    Error: error.message\n                });   \n            }\n\n            else\n            {\n                pool.query(`select * from users where email='${email}'`, (error2, success2) => {\n                    if (error)\n                    {\n                        res.status(500).json({\n                            Status: 500,\n                            Error: error.message\n                        });\n                    }\n\n                    else\n                    {\n                        res.status(200);\n                    }\n                });\n            }\n        });\n    }\n\n    if (req.file.path)\n    {\n        pool.query(`UPDATE users set image='${req.file.path}' where email='${email}'`)\n        .then((feedBack) => {\n            pool.query(`select * from users where email='${email}'`, (err, success) => {\n                if (err)\n                {\n                    res.status(500).json({\n                        Status: 500,\n                        Error: err.message\n                    });\n                }\n\n                else\n                {\n                    res.status(200).json({\n                        Status: 200,\n                        Data: success.rows,\n                        Success: 'Successfully Updated Profile'\n                    });\n                }\n            });\n        })\n\n        .catch((error) => {\n            res.status(500).json({\n                Status: 500,\n                Error: error.message\n            });\n        });\n    }\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1557385196458
  },
  "{\"sourceRoot\":\"/home/kodek-sleuth/Desktop/Quick-credit/Api/Profiles\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/kodek-sleuth/Desktop/Quick-credit\",\"filename\":\"/home/kodek-sleuth/Desktop/Quick-credit/Api/Profiles/adminProfile.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/kodek-sleuth/Desktop/Quick-credit\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/kodek-sleuth/Desktop/Quick-credit/Api/Profiles",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/kodek-sleuth/Desktop/Quick-credit",
      "filename": "/home/kodek-sleuth/Desktop/Quick-credit/Api/Profiles/adminProfile.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/kodek-sleuth/Desktop/Quick-credit",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/kodek-sleuth/Desktop/Quick-credit/Api/Profiles/adminProfile.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/home/kodek-sleuth/Desktop/Quick-credit/Api/Profiles/adminProfile.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/kodek-sleuth/Desktop/Quick-credit/Api/Profiles",
        "sourceFileName": "adminProfile.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar express = require('express');\n\nvar settings = require('../Settings/image');\n\nvar jwtMiddleware = require('../Settings/checkAuthAdmin');\n\nvar adminProfile = express.Router();\n\nvar adminProfileController = require('../Controllers/adminUpdateProfile');\n/**\n* @swagger\n* /api/v1/admin/{:Email}/profile:\n*   get:\n*     security:\n*        - bearerAuth: []\n*     tags:\n*       - Profiles\n*     name: Gets User Profile\n*     summary: Gets an Admin Profile\n*     consumes:\n*       - multipart/form-data\n*     parameters:\n*       - name: \":Email\"\n*         in: path\n*         description: Email of User Profile\n*         required: true\n*         type: string\n*     responses:\n*       200:\n*         data: []\n*/\n\n\nadminProfile.get('/:Email/profile', adminProfileController.getAdminProfile);\n/**\n* @swagger\n* /api/v1/admin/{:Email}/profile:\n*   patch:\n*     security:\n*        - bearerAuth: []\n*     tags:\n*       - Profiles\n*     name: Update Admin Profile\n*     summary: Updates an Admin Profile\n*     consumes:\n*       - multipart/form-data\n*     parameters:\n*       - name: \":Email\"\n*         in: path\n*         description: Email of Admin Profile\n*         required: true\n*         type: string\n*       - name: Fullname\n*         in: formData\n*         type: string\n*         description: Yahya Jalal.\n*       - name: Email\n*         in: formData\n*         type: string\n*         description: yahya@gmail.com.\n*       - name: Password\n*         in: formData\n*         type: string\n*         description: stealth.\n*       - name: Address\n*         in: formData\n*         type: string\n*         description: Kitende, Entebbe.\n*       - name: Image\n*         in: formData\n*         type: file\n*         required: true\n*         description: Upload an Image File.\n*     responses:\n*       200:\n*         description: Successfully Updated Profilen\n*       401:\n*         description: Admin Authorisation required to access resource\n*/\n\nadminProfile.patch('/:Email/profile', jwtMiddleware, settings.upload.single('Image'), adminProfileController.updateAdminProfile);\nmodule.exports = adminProfile;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFkbWluUHJvZmlsZS5qcyJdLCJuYW1lcyI6WyJleHByZXNzIiwicmVxdWlyZSIsInNldHRpbmdzIiwiand0TWlkZGxld2FyZSIsImFkbWluUHJvZmlsZSIsIlJvdXRlciIsImFkbWluUHJvZmlsZUNvbnRyb2xsZXIiLCJnZXQiLCJnZXRBZG1pblByb2ZpbGUiLCJwYXRjaCIsInVwbG9hZCIsInNpbmdsZSIsInVwZGF0ZUFkbWluUHJvZmlsZSIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiI7O0FBQUEsSUFBTUEsT0FBTyxHQUFHQyxPQUFPLENBQUMsU0FBRCxDQUF2Qjs7QUFFQSxJQUFNQyxRQUFRLEdBQUdELE9BQU8sQ0FBQyxtQkFBRCxDQUF4Qjs7QUFFQSxJQUFNRSxhQUFhLEdBQUdGLE9BQU8sQ0FBQyw0QkFBRCxDQUE3Qjs7QUFFQSxJQUFNRyxZQUFZLEdBQUdKLE9BQU8sQ0FBQ0ssTUFBUixFQUFyQjs7QUFFQSxJQUFNQyxzQkFBc0IsR0FBR0wsT0FBTyxDQUFDLG1DQUFELENBQXRDO0FBR0E7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQXVCQUcsWUFBWSxDQUFDRyxHQUFiLENBQWlCLGlCQUFqQixFQUFvQ0Qsc0JBQXNCLENBQUNFLGVBQTNEO0FBRUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUE4Q0FKLFlBQVksQ0FBQ0ssS0FBYixDQUFtQixpQkFBbkIsRUFBc0NOLGFBQXRDLEVBQXFERCxRQUFRLENBQUNRLE1BQVQsQ0FBZ0JDLE1BQWhCLENBQXVCLE9BQXZCLENBQXJELEVBQXNGTCxzQkFBc0IsQ0FBQ00sa0JBQTdHO0FBRUFDLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQlYsWUFBakIiLCJzb3VyY2VSb290IjoiL2hvbWUva29kZWstc2xldXRoL0Rlc2t0b3AvUXVpY2stY3JlZGl0L0FwaS9Qcm9maWxlcyIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IGV4cHJlc3MgPSByZXF1aXJlKCdleHByZXNzJyk7XG5cbmNvbnN0IHNldHRpbmdzID0gcmVxdWlyZSgnLi4vU2V0dGluZ3MvaW1hZ2UnKTtcblxuY29uc3Qgand0TWlkZGxld2FyZSA9IHJlcXVpcmUoJy4uL1NldHRpbmdzL2NoZWNrQXV0aEFkbWluJyk7XG5cbmNvbnN0IGFkbWluUHJvZmlsZSA9IGV4cHJlc3MuUm91dGVyKCk7XG5cbmNvbnN0IGFkbWluUHJvZmlsZUNvbnRyb2xsZXIgPSByZXF1aXJlKCcuLi9Db250cm9sbGVycy9hZG1pblVwZGF0ZVByb2ZpbGUnKTtcblxuXG4vKipcbiogQHN3YWdnZXJcbiogL2FwaS92MS9hZG1pbi97OkVtYWlsfS9wcm9maWxlOlxuKiAgIGdldDpcbiogICAgIHNlY3VyaXR5OlxuKiAgICAgICAgLSBiZWFyZXJBdXRoOiBbXVxuKiAgICAgdGFnczpcbiogICAgICAgLSBQcm9maWxlc1xuKiAgICAgbmFtZTogR2V0cyBVc2VyIFByb2ZpbGVcbiogICAgIHN1bW1hcnk6IEdldHMgYW4gQWRtaW4gUHJvZmlsZVxuKiAgICAgY29uc3VtZXM6XG4qICAgICAgIC0gbXVsdGlwYXJ0L2Zvcm0tZGF0YVxuKiAgICAgcGFyYW1ldGVyczpcbiogICAgICAgLSBuYW1lOiBcIjpFbWFpbFwiXG4qICAgICAgICAgaW46IHBhdGhcbiogICAgICAgICBkZXNjcmlwdGlvbjogRW1haWwgb2YgVXNlciBQcm9maWxlXG4qICAgICAgICAgcmVxdWlyZWQ6IHRydWVcbiogICAgICAgICB0eXBlOiBzdHJpbmdcbiogICAgIHJlc3BvbnNlczpcbiogICAgICAgMjAwOlxuKiAgICAgICAgIGRhdGE6IFtdXG4qL1xuXG5hZG1pblByb2ZpbGUuZ2V0KCcvOkVtYWlsL3Byb2ZpbGUnLCBhZG1pblByb2ZpbGVDb250cm9sbGVyLmdldEFkbWluUHJvZmlsZSk7XG5cbi8qKlxuKiBAc3dhZ2dlclxuKiAvYXBpL3YxL2FkbWluL3s6RW1haWx9L3Byb2ZpbGU6XG4qICAgcGF0Y2g6XG4qICAgICBzZWN1cml0eTpcbiogICAgICAgIC0gYmVhcmVyQXV0aDogW11cbiogICAgIHRhZ3M6XG4qICAgICAgIC0gUHJvZmlsZXNcbiogICAgIG5hbWU6IFVwZGF0ZSBBZG1pbiBQcm9maWxlXG4qICAgICBzdW1tYXJ5OiBVcGRhdGVzIGFuIEFkbWluIFByb2ZpbGVcbiogICAgIGNvbnN1bWVzOlxuKiAgICAgICAtIG11bHRpcGFydC9mb3JtLWRhdGFcbiogICAgIHBhcmFtZXRlcnM6XG4qICAgICAgIC0gbmFtZTogXCI6RW1haWxcIlxuKiAgICAgICAgIGluOiBwYXRoXG4qICAgICAgICAgZGVzY3JpcHRpb246IEVtYWlsIG9mIEFkbWluIFByb2ZpbGVcbiogICAgICAgICByZXF1aXJlZDogdHJ1ZVxuKiAgICAgICAgIHR5cGU6IHN0cmluZ1xuKiAgICAgICAtIG5hbWU6IEZ1bGxuYW1lXG4qICAgICAgICAgaW46IGZvcm1EYXRhXG4qICAgICAgICAgdHlwZTogc3RyaW5nXG4qICAgICAgICAgZGVzY3JpcHRpb246IFlhaHlhIEphbGFsLlxuKiAgICAgICAtIG5hbWU6IEVtYWlsXG4qICAgICAgICAgaW46IGZvcm1EYXRhXG4qICAgICAgICAgdHlwZTogc3RyaW5nXG4qICAgICAgICAgZGVzY3JpcHRpb246IHlhaHlhQGdtYWlsLmNvbS5cbiogICAgICAgLSBuYW1lOiBQYXNzd29yZFxuKiAgICAgICAgIGluOiBmb3JtRGF0YVxuKiAgICAgICAgIHR5cGU6IHN0cmluZ1xuKiAgICAgICAgIGRlc2NyaXB0aW9uOiBzdGVhbHRoLlxuKiAgICAgICAtIG5hbWU6IEFkZHJlc3NcbiogICAgICAgICBpbjogZm9ybURhdGFcbiogICAgICAgICB0eXBlOiBzdHJpbmdcbiogICAgICAgICBkZXNjcmlwdGlvbjogS2l0ZW5kZSwgRW50ZWJiZS5cbiogICAgICAgLSBuYW1lOiBJbWFnZVxuKiAgICAgICAgIGluOiBmb3JtRGF0YVxuKiAgICAgICAgIHR5cGU6IGZpbGVcbiogICAgICAgICByZXF1aXJlZDogdHJ1ZVxuKiAgICAgICAgIGRlc2NyaXB0aW9uOiBVcGxvYWQgYW4gSW1hZ2UgRmlsZS5cbiogICAgIHJlc3BvbnNlczpcbiogICAgICAgMjAwOlxuKiAgICAgICAgIGRlc2NyaXB0aW9uOiBTdWNjZXNzZnVsbHkgVXBkYXRlZCBQcm9maWxlblxuKiAgICAgICA0MDE6XG4qICAgICAgICAgZGVzY3JpcHRpb246IEFkbWluIEF1dGhvcmlzYXRpb24gcmVxdWlyZWQgdG8gYWNjZXNzIHJlc291cmNlXG4qL1xuXG5hZG1pblByb2ZpbGUucGF0Y2goJy86RW1haWwvcHJvZmlsZScsIGp3dE1pZGRsZXdhcmUsIHNldHRpbmdzLnVwbG9hZC5zaW5nbGUoJ0ltYWdlJyksIGFkbWluUHJvZmlsZUNvbnRyb2xsZXIudXBkYXRlQWRtaW5Qcm9maWxlKTtcblxubW9kdWxlLmV4cG9ydHMgPSBhZG1pblByb2ZpbGU7XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "adminProfile.js"
      ],
      "names": [
        "express",
        "require",
        "settings",
        "jwtMiddleware",
        "adminProfile",
        "Router",
        "adminProfileController",
        "get",
        "getAdminProfile",
        "patch",
        "upload",
        "single",
        "updateAdminProfile",
        "module",
        "exports"
      ],
      "mappings": ";;AAAA,IAAMA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;AAEA,IAAMC,QAAQ,GAAGD,OAAO,CAAC,mBAAD,CAAxB;;AAEA,IAAME,aAAa,GAAGF,OAAO,CAAC,4BAAD,CAA7B;;AAEA,IAAMG,YAAY,GAAGJ,OAAO,CAACK,MAAR,EAArB;;AAEA,IAAMC,sBAAsB,GAAGL,OAAO,CAAC,mCAAD,CAAtC;AAGA;;;;;;;;;;;;;;;;;;;;;;;;AAuBAG,YAAY,CAACG,GAAb,CAAiB,iBAAjB,EAAoCD,sBAAsB,CAACE,eAA3D;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8CAJ,YAAY,CAACK,KAAb,CAAmB,iBAAnB,EAAsCN,aAAtC,EAAqDD,QAAQ,CAACQ,MAAT,CAAgBC,MAAhB,CAAuB,OAAvB,CAArD,EAAsFL,sBAAsB,CAACM,kBAA7G;AAEAC,MAAM,CAACC,OAAP,GAAiBV,YAAjB",
      "sourceRoot": "/home/kodek-sleuth/Desktop/Quick-credit/Api/Profiles",
      "sourcesContent": [
        "const express = require('express');\n\nconst settings = require('../Settings/image');\n\nconst jwtMiddleware = require('../Settings/checkAuthAdmin');\n\nconst adminProfile = express.Router();\n\nconst adminProfileController = require('../Controllers/adminUpdateProfile');\n\n\n/**\n* @swagger\n* /api/v1/admin/{:Email}/profile:\n*   get:\n*     security:\n*        - bearerAuth: []\n*     tags:\n*       - Profiles\n*     name: Gets User Profile\n*     summary: Gets an Admin Profile\n*     consumes:\n*       - multipart/form-data\n*     parameters:\n*       - name: \":Email\"\n*         in: path\n*         description: Email of User Profile\n*         required: true\n*         type: string\n*     responses:\n*       200:\n*         data: []\n*/\n\nadminProfile.get('/:Email/profile', adminProfileController.getAdminProfile);\n\n/**\n* @swagger\n* /api/v1/admin/{:Email}/profile:\n*   patch:\n*     security:\n*        - bearerAuth: []\n*     tags:\n*       - Profiles\n*     name: Update Admin Profile\n*     summary: Updates an Admin Profile\n*     consumes:\n*       - multipart/form-data\n*     parameters:\n*       - name: \":Email\"\n*         in: path\n*         description: Email of Admin Profile\n*         required: true\n*         type: string\n*       - name: Fullname\n*         in: formData\n*         type: string\n*         description: Yahya Jalal.\n*       - name: Email\n*         in: formData\n*         type: string\n*         description: yahya@gmail.com.\n*       - name: Password\n*         in: formData\n*         type: string\n*         description: stealth.\n*       - name: Address\n*         in: formData\n*         type: string\n*         description: Kitende, Entebbe.\n*       - name: Image\n*         in: formData\n*         type: file\n*         required: true\n*         description: Upload an Image File.\n*     responses:\n*       200:\n*         description: Successfully Updated Profilen\n*       401:\n*         description: Admin Authorisation required to access resource\n*/\n\nadminProfile.patch('/:Email/profile', jwtMiddleware, settings.upload.single('Image'), adminProfileController.updateAdminProfile);\n\nmodule.exports = adminProfile;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1557385196462
  },
  "{\"sourceRoot\":\"/home/kodek-sleuth/Desktop/Quick-credit/Api/Controllers\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/kodek-sleuth/Desktop/Quick-credit\",\"filename\":\"/home/kodek-sleuth/Desktop/Quick-credit/Api/Controllers/adminUpdateProfile.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/kodek-sleuth/Desktop/Quick-credit\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/kodek-sleuth/Desktop/Quick-credit/Api/Controllers",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/kodek-sleuth/Desktop/Quick-credit",
      "filename": "/home/kodek-sleuth/Desktop/Quick-credit/Api/Controllers/adminUpdateProfile.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/kodek-sleuth/Desktop/Quick-credit",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/kodek-sleuth/Desktop/Quick-credit/Api/Controllers/adminUpdateProfile.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/home/kodek-sleuth/Desktop/Quick-credit/Api/Controllers/adminUpdateProfile.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/kodek-sleuth/Desktop/Quick-credit/Api/Controllers",
        "sourceFileName": "adminUpdateProfile.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\n/* eslint-disable no-lonely-if */\n\n/* eslint-disable object-shorthand */\n\n/* eslint-disable prefer-destructuring */\n\n/* eslint-disable max-len */\n\n/* eslint-disable no-trailing-spaces */\n\n/* eslint-disable brace-style */\n\n/* eslint-disable no-console */\n\n/* eslint-disable comma-dangle */\n\n/* eslint-disable no-unused-vars */\n\n/* eslint-disable eqeqeq */\n\n/* eslint-disable indent */\nvar Pool = require('pg').Pool;\n\nvar bcrypt = require('bcrypt');\n\nvar connectionString = process.env.QUICK_CREDIT_DB_TEST;\nvar pool = new Pool({\n  connectionString: connectionString\n}); // Function To fetch Admin Profile\n\nexports.getAdminProfile = function (req, res, next) {\n  var Email = req.params.Email;\n  pool.query(\"Select * from admin WHERE email='\".concat(Email, \"'\")).then(function (data) {\n    if (data.rowCount > 0) {\n      var fetchedData2 = data.rows;\n      res.status(200).json({\n        Status: 200,\n        Data: fetchedData2\n      });\n    } else {\n      res.status(200).json({\n        Count: data.rowCount,\n        Status: 200,\n        Success: 'No user exists with that email'\n      });\n    }\n  })[\"catch\"](function (error) {\n    res.status(500).json({\n      Status: 500,\n      Error: error.message\n    });\n  });\n}; // Since Image object will be available everytime on submit \n// I want us to appreciate the fact that we only send a full object back to the user in the Image file meaning that Image file should be available in every request \n\n\nexports.updateAdminProfile = function (req, res, next) {\n  var email = req.params.Email; // If Email Exists in FormBody then it should make update but this is not recommended\n\n  if (req.body.Email) {\n    pool.query(\"UPDATE admin set email='\".concat(req.body.Email, \"' where email='\").concat(email, \"'\")).then(function (feedBack) {\n      pool.query(\"select * from admin where email='\".concat(email, \"'\")).then(function (feedBack2) {\n        console.log(feedBack2.rows);\n        res.status(200);\n      })[\"catch\"](function (error) {\n        res.status(500).json({\n          Status: 500,\n          Error: error.message\n        });\n      });\n    })[\"catch\"](function (error) {\n      res.status(500).json({\n        Status: 500,\n        Error: error.message\n      });\n    });\n  } // Update Fullname if Fullname is available in req body\n\n\n  if (req.body.Fullname) {\n    pool.query(\"UPDATE admin set fullname='\".concat(req.body.Fullname, \"' where email='\").concat(email, \"'\")).then(function (feedBack) {\n      pool.query(\"select * from admin where email='\".concat(email, \"'\")).then(function (feedBack2) {\n        res.status(200);\n      })[\"catch\"](function (error) {\n        res.status(500).json({\n          Status: 500,\n          Error: error.message\n        });\n      });\n    })[\"catch\"](function (error) {\n      res.status(500).json({\n        Status: 500,\n        Error: error.message\n      });\n    });\n  } // We fast want to make sure that User has old Password which Password we test with bcrypt with the real in database\n  // If they dont match it should throw an error else we encrypt and save the new one  \n\n\n  if (req.body.OldPassword) {\n    pool.query(\"SELECT * FROM admin where email='\".concat(email, \"'\"), function (errorFound2, result) {\n      if (errorFound2) {\n        res.status(500).json({\n          Status: 500,\n          Error: errorFound2.message\n        });\n      } else {\n        var fetchedData = result.rows;\n        bcrypt.compare(req.body.OldPassword, fetchedData[0].password, function (err, goodFeedBack) {\n          if (err) {\n            res.status(500).json({\n              Status: 500,\n              Error: err.message\n            });\n          } else {\n            bcrypt.hash(req.body.NewPassword, 10, function (errr, hash) {\n              if (err) {\n                res.status(500).json({\n                  Status: 500,\n                  Error: err.message\n                });\n              } else {\n                pool.query(\"UPDATE admin set password='\".concat(hash, \"' where email='\").concat(email, \"'\"), function (errorFound, feedBack) {\n                  if (errorFound) {\n                    res.status(500).json({\n                      Status: 500,\n                      Error: errorFound\n                    });\n                  } else {\n                    pool.query(\"select * from admin where email='\".concat(email, \"'\"), function (error, feedBack2) {\n                      if (error) {\n                        res.status(500).json({\n                          Status: 500,\n                          Error: error.message\n                        });\n                      } else {\n                        res.status(200);\n                      }\n                    });\n                  }\n                });\n              }\n            });\n          }\n        });\n      }\n    });\n  } // Image path\n\n\n  if (req.file.path) {\n    pool.query(\"UPDATE admin set image='\".concat(req.file.path, \"' where email='\").concat(email, \"'\")).then(function (feedBack) {\n      pool.query(\"select * from admin where email='\".concat(email, \"'\"), function (err, success) {\n        if (err) {\n          res.status(500).json({\n            Status: 500,\n            Error: err.message\n          });\n        } else {\n          res.status(200).json({\n            Status: 200,\n            Data: success.rows,\n            Success: 'Successfully Updated Profile'\n          });\n        }\n      });\n    })[\"catch\"](function (error) {\n      res.status(500).json({\n        Status: 500,\n        Error: error.message\n      });\n    });\n  }\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "adminUpdateProfile.js"
      ],
      "names": [
        "Pool",
        "require",
        "bcrypt",
        "connectionString",
        "process",
        "env",
        "QUICK_CREDIT_DB_TEST",
        "pool",
        "exports",
        "getAdminProfile",
        "req",
        "res",
        "next",
        "Email",
        "params",
        "query",
        "then",
        "data",
        "rowCount",
        "fetchedData2",
        "rows",
        "status",
        "json",
        "Status",
        "Data",
        "Count",
        "Success",
        "error",
        "Error",
        "message",
        "updateAdminProfile",
        "email",
        "body",
        "feedBack",
        "feedBack2",
        "console",
        "log",
        "Fullname",
        "OldPassword",
        "errorFound2",
        "result",
        "fetchedData",
        "compare",
        "password",
        "err",
        "goodFeedBack",
        "hash",
        "NewPassword",
        "errr",
        "errorFound",
        "file",
        "path",
        "success"
      ],
      "mappings": ";;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;AAEA,IAAMA,IAAI,GAAGC,OAAO,CAAC,IAAD,CAAP,CAAcD,IAA3B;;AAEA,IAAME,MAAM,GAAGD,OAAO,CAAC,QAAD,CAAtB;;AAEA,IAAME,gBAAgB,GAAGC,OAAO,CAACC,GAAR,CAAYC,oBAArC;AAEA,IAAMC,IAAI,GAAG,IAAIP,IAAJ,CAAS;AAAEG,EAAAA,gBAAgB,EAAEA;AAApB,CAAT,CAAb,C,CAEA;;AACAK,OAAO,CAACC,eAAR,GAA0B,UAACC,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AAC1C,MAAMC,KAAK,GAAGH,GAAG,CAACI,MAAJ,CAAWD,KAAzB;AAEAN,EAAAA,IAAI,CAACQ,KAAL,4CAA+CF,KAA/C,QACCG,IADD,CACM,UAACC,IAAD,EAAU;AACZ,QAAIA,IAAI,CAACC,QAAL,GAAgB,CAApB,EACA;AACI,UAAMC,YAAY,GAAGF,IAAI,CAACG,IAA1B;AACAT,MAAAA,GAAG,CAACU,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACjBC,QAAAA,MAAM,EAAE,GADS;AAEjBC,QAAAA,IAAI,EAAEL;AAFW,OAArB;AAIH,KAPD,MAUA;AACIR,MAAAA,GAAG,CAACU,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACjBG,QAAAA,KAAK,EAAER,IAAI,CAACC,QADK;AAEjBK,QAAAA,MAAM,EAAE,GAFS;AAGjBG,QAAAA,OAAO,EAAE;AAHQ,OAArB;AAKH;AACJ,GAnBD,WAqBO,UAACC,KAAD,EAAW;AACdhB,IAAAA,GAAG,CAACU,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACjBC,MAAAA,MAAM,EAAE,GADS;AAEjBK,MAAAA,KAAK,EAAED,KAAK,CAACE;AAFI,KAArB;AAIH,GA1BD;AA2BH,CA9BD,C,CAgCA;AACA;;;AACArB,OAAO,CAACsB,kBAAR,GAA6B,UAACpB,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AAC7C,MAAMmB,KAAK,GAAGrB,GAAG,CAACI,MAAJ,CAAWD,KAAzB,CAD6C,CAG7C;;AACA,MAAIH,GAAG,CAACsB,IAAJ,CAASnB,KAAb,EACA;AACIN,IAAAA,IAAI,CAACQ,KAAL,mCAAsCL,GAAG,CAACsB,IAAJ,CAASnB,KAA/C,4BAAsEkB,KAAtE,QACCf,IADD,CACM,UAACiB,QAAD,EAAc;AAChB1B,MAAAA,IAAI,CAACQ,KAAL,4CAA+CgB,KAA/C,QACCf,IADD,CACM,UAACkB,SAAD,EAAe;AACjBC,QAAAA,OAAO,CAACC,GAAR,CAAYF,SAAS,CAACd,IAAtB;AACAT,QAAAA,GAAG,CAACU,MAAJ,CAAW,GAAX;AACH,OAJD,WAKO,UAACM,KAAD,EAAW;AACdhB,QAAAA,GAAG,CAACU,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACjBC,UAAAA,MAAM,EAAE,GADS;AAEjBK,UAAAA,KAAK,EAAED,KAAK,CAACE;AAFI,SAArB;AAIH,OAVD;AAWH,KAbD,WAeO,UAACF,KAAD,EAAW;AACdhB,MAAAA,GAAG,CAACU,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACjBC,QAAAA,MAAM,EAAE,GADS;AAEjBK,QAAAA,KAAK,EAAED,KAAK,CAACE;AAFI,OAArB;AAIH,KApBD;AAqBH,GA3B4C,CA6B7C;;;AACA,MAAInB,GAAG,CAACsB,IAAJ,CAASK,QAAb,EACA;AACI9B,IAAAA,IAAI,CAACQ,KAAL,sCAAyCL,GAAG,CAACsB,IAAJ,CAASK,QAAlD,4BAA4EN,KAA5E,QACCf,IADD,CACM,UAACiB,QAAD,EAAc;AAChB1B,MAAAA,IAAI,CAACQ,KAAL,4CAA+CgB,KAA/C,QACCf,IADD,CACM,UAACkB,SAAD,EAAe;AACjBvB,QAAAA,GAAG,CAACU,MAAJ,CAAW,GAAX;AACH,OAHD,WAIO,UAACM,KAAD,EAAW;AACdhB,QAAAA,GAAG,CAACU,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACjBC,UAAAA,MAAM,EAAE,GADS;AAEjBK,UAAAA,KAAK,EAAED,KAAK,CAACE;AAFI,SAArB;AAIH,OATD;AAUH,KAZD,WAcO,UAACF,KAAD,EAAW;AACdhB,MAAAA,GAAG,CAACU,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACjBC,QAAAA,MAAM,EAAE,GADS;AAEjBK,QAAAA,KAAK,EAAED,KAAK,CAACE;AAFI,OAArB;AAIH,KAnBD;AAoBH,GApD4C,CAsD7C;AACA;;;AAEA,MAAInB,GAAG,CAACsB,IAAJ,CAASM,WAAb,EACA;AACI/B,IAAAA,IAAI,CAACQ,KAAL,4CAA+CgB,KAA/C,QAAyD,UAACQ,WAAD,EAAcC,MAAd,EAAyB;AAC9E,UAAID,WAAJ,EACA;AACI5B,QAAAA,GAAG,CAACU,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACjBC,UAAAA,MAAM,EAAE,GADS;AAEjBK,UAAAA,KAAK,EAAEW,WAAW,CAACV;AAFF,SAArB;AAIH,OAND,MASA;AACI,YAAMY,WAAW,GAAGD,MAAM,CAACpB,IAA3B;AACAlB,QAAAA,MAAM,CAACwC,OAAP,CAAehC,GAAG,CAACsB,IAAJ,CAASM,WAAxB,EAAqCG,WAAW,CAAC,CAAD,CAAX,CAAeE,QAApD,EAA8D,UAACC,GAAD,EAAMC,YAAN,EAAuB;AACrF,cAAID,GAAJ,EACA;AACIjC,YAAAA,GAAG,CAACU,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACjBC,cAAAA,MAAM,EAAE,GADS;AAEjBK,cAAAA,KAAK,EAAEgB,GAAG,CAACf;AAFM,aAArB;AAIH,WAND,MASA;AACI3B,YAAAA,MAAM,CAAC4C,IAAP,CAAYpC,GAAG,CAACsB,IAAJ,CAASe,WAArB,EAAkC,EAAlC,EAAsC,UAACC,IAAD,EAAOF,IAAP,EAAgB;AAClD,kBAAIF,GAAJ,EACA;AACIjC,gBAAAA,GAAG,CAACU,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACjBC,kBAAAA,MAAM,EAAE,GADS;AAEjBK,kBAAAA,KAAK,EAAEgB,GAAG,CAACf;AAFM,iBAArB;AAIH,eAND,MASA;AACItB,gBAAAA,IAAI,CAACQ,KAAL,sCAAyC+B,IAAzC,4BAA+Df,KAA/D,QAAyE,UAACkB,UAAD,EAAahB,QAAb,EAA0B;AAC/F,sBAAIgB,UAAJ,EACA;AACItC,oBAAAA,GAAG,CAACU,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACjBC,sBAAAA,MAAM,EAAE,GADS;AAEjBK,sBAAAA,KAAK,EAAEqB;AAFU,qBAArB;AAIH,mBAND,MASA;AACI1C,oBAAAA,IAAI,CAACQ,KAAL,4CAA+CgB,KAA/C,QAAyD,UAACJ,KAAD,EAAQO,SAAR,EAAsB;AAC3E,0BAAIP,KAAJ,EACA;AACIhB,wBAAAA,GAAG,CAACU,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACjBC,0BAAAA,MAAM,EAAE,GADS;AAEjBK,0BAAAA,KAAK,EAAED,KAAK,CAACE;AAFI,yBAArB;AAIH,uBAND,MASA;AACIlB,wBAAAA,GAAG,CAACU,MAAJ,CAAW,GAAX;AACH;AACJ,qBAbD;AAcH;AACJ,iBA1BD;AA2BH;AACJ,aAvCD;AAwCH;AACJ,SApDG;AAqDH;AACJ,KAlED;AAmEH,GA9H4C,CAgI7C;;;AACA,MAAIX,GAAG,CAACwC,IAAJ,CAASC,IAAb,EACA;AACI5C,IAAAA,IAAI,CAACQ,KAAL,mCAAsCL,GAAG,CAACwC,IAAJ,CAASC,IAA/C,4BAAqEpB,KAArE,QACCf,IADD,CACM,UAACiB,QAAD,EAAc;AAChB1B,MAAAA,IAAI,CAACQ,KAAL,4CAA+CgB,KAA/C,QAAyD,UAACa,GAAD,EAAMQ,OAAN,EAAkB;AACvE,YAAIR,GAAJ,EACA;AACIjC,UAAAA,GAAG,CAACU,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACjBC,YAAAA,MAAM,EAAE,GADS;AAEjBK,YAAAA,KAAK,EAAEgB,GAAG,CAACf;AAFM,WAArB;AAIH,SAND,MASA;AACIlB,UAAAA,GAAG,CAACU,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACjBC,YAAAA,MAAM,EAAE,GADS;AAEjBC,YAAAA,IAAI,EAAE4B,OAAO,CAAChC,IAFG;AAGjBM,YAAAA,OAAO,EAAE;AAHQ,WAArB;AAKH;AACJ,OAjBD;AAkBH,KApBD,WAsBO,UAACC,KAAD,EAAW;AACdhB,MAAAA,GAAG,CAACU,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACjBC,QAAAA,MAAM,EAAE,GADS;AAEjBK,QAAAA,KAAK,EAAED,KAAK,CAACE;AAFI,OAArB;AAIH,KA3BD;AA4BH;AACJ,CAhKD",
      "sourceRoot": "/home/kodek-sleuth/Desktop/Quick-credit/Api/Controllers",
      "sourcesContent": [
        "/* eslint-disable no-lonely-if */\n/* eslint-disable object-shorthand */\n/* eslint-disable prefer-destructuring */\n/* eslint-disable max-len */\n/* eslint-disable no-trailing-spaces */\n/* eslint-disable brace-style */\n/* eslint-disable no-console */\n/* eslint-disable comma-dangle */\n/* eslint-disable no-unused-vars */\n/* eslint-disable eqeqeq */\n/* eslint-disable indent */\n\nconst Pool = require('pg').Pool;\n\nconst bcrypt = require('bcrypt');\n\nconst connectionString = process.env.QUICK_CREDIT_DB_TEST;\n\nconst pool = new Pool({ connectionString: connectionString });\n\n// Function To fetch Admin Profile\nexports.getAdminProfile = (req, res, next) => {\n    const Email = req.params.Email;\n\n    pool.query(`Select * from admin WHERE email='${Email}'`)\n    .then((data) => {\n        if (data.rowCount > 0)\n        {\n            const fetchedData2 = data.rows;\n            res.status(200).json({\n                Status: 200,\n                Data: fetchedData2\n            });\n        }\n\n        else\n        {\n            res.status(200).json({\n                Count: data.rowCount,\n                Status: 200,\n                Success: 'No user exists with that email'\n            });\n        }\n    })\n\n    .catch((error) => {\n        res.status(500).json({\n            Status: 500,\n            Error: error.message \n        });\n    });\n};\n\n// Since Image object will be available everytime on submit \n// I want us to appreciate the fact that we only send a full object back to the user in the Image file meaning that Image file should be available in every request \nexports.updateAdminProfile = (req, res, next) => {\n    const email = req.params.Email;\n\n    // If Email Exists in FormBody then it should make update but this is not recommended\n    if (req.body.Email)\n    {\n        pool.query(`UPDATE admin set email='${req.body.Email}' where email='${email}'`)\n        .then((feedBack) => {\n            pool.query(`select * from admin where email='${email}'`)\n            .then((feedBack2) => {\n                console.log(feedBack2.rows);\n                res.status(200);\n            })\n            .catch((error) => {\n                res.status(500).json({\n                    Status: 500,\n                    Error: error.message\n                });\n            });\n        })\n\n        .catch((error) => {\n            res.status(500).json({\n                Status: 500,\n                Error: error.message\n            });\n        });\n    }\n\n    // Update Fullname if Fullname is available in req body\n    if (req.body.Fullname)\n    {\n        pool.query(`UPDATE admin set fullname='${req.body.Fullname}' where email='${email}'`)\n        .then((feedBack) => {\n            pool.query(`select * from admin where email='${email}'`)\n            .then((feedBack2) => {\n                res.status(200);\n            })\n            .catch((error) => {\n                res.status(500).json({\n                    Status: 500,\n                    Error: error.message\n                });\n            });\n        })\n\n        .catch((error) => {\n            res.status(500).json({\n                Status: 500,\n                Error: error.message\n            });\n        });\n    }\n\n    // We fast want to make sure that User has old Password which Password we test with bcrypt with the real in database\n    // If they dont match it should throw an error else we encrypt and save the new one  \n\n    if (req.body.OldPassword)\n    {\n        pool.query(`SELECT * FROM admin where email='${email}'`, (errorFound2, result) => {\n            if (errorFound2)\n            {\n                res.status(500).json({\n                    Status: 500,\n                    Error: errorFound2.message\n                });\n            }\n\n            else\n            {\n                const fetchedData = result.rows;\n                bcrypt.compare(req.body.OldPassword, fetchedData[0].password, (err, goodFeedBack) => {\n                if (err)\n                {\n                    res.status(500).json({\n                        Status: 500,\n                        Error: err.message\n                    });\n                }\n\n                else\n                {\n                    bcrypt.hash(req.body.NewPassword, 10, (errr, hash) => {\n                        if (err)\n                        {\n                            res.status(500).json({\n                                Status: 500,\n                                Error: err.message\n                            });\n                        }\n\n                        else\n                        {\n                            pool.query(`UPDATE admin set password='${hash}' where email='${email}'`, (errorFound, feedBack) => {\n                                if (errorFound)\n                                {\n                                    res.status(500).json({\n                                        Status: 500,\n                                        Error: errorFound\n                                    });\n                                }\n\n                                else\n                                {\n                                    pool.query(`select * from admin where email='${email}'`, (error, feedBack2) => {\n                                        if (error)\n                                        {\n                                            res.status(500).json({\n                                                Status: 500,\n                                                Error: error.message\n                                            });\n                                        }\n    \n                                        else\n                                        {\n                                            res.status(200);\n                                        }\n                                    });\n                                }\n                            });\n                        }\n                    });\n                }\n            });\n            }\n        });\n    }\n\n    // Image path\n    if (req.file.path)\n    {\n        pool.query(`UPDATE admin set image='${req.file.path}' where email='${email}'`)\n        .then((feedBack) => {\n            pool.query(`select * from admin where email='${email}'`, (err, success) => {\n                if (err)\n                {\n                    res.status(500).json({\n                        Status: 500,\n                        Error: err.message\n                    });\n                }\n\n                else\n                {\n                    res.status(200).json({\n                        Status: 200,\n                        Data: success.rows,\n                        Success: 'Successfully Updated Profile'\n                    });\n                }\n            });\n        })\n\n        .catch((error) => {\n            res.status(500).json({\n                Status: 500,\n                Error: error.message\n            });\n        });\n    }\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1557385196458
  },
  "{\"sourceRoot\":\"/home/kodek-sleuth/Desktop/Quick-credit/Api/Settings\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/kodek-sleuth/Desktop/Quick-credit\",\"filename\":\"/home/kodek-sleuth/Desktop/Quick-credit/Api/Settings/swagger.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/kodek-sleuth/Desktop/Quick-credit\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/kodek-sleuth/Desktop/Quick-credit/Api/Settings",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/kodek-sleuth/Desktop/Quick-credit",
      "filename": "/home/kodek-sleuth/Desktop/Quick-credit/Api/Settings/swagger.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/kodek-sleuth/Desktop/Quick-credit",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/kodek-sleuth/Desktop/Quick-credit/Api/Settings/swagger.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/home/kodek-sleuth/Desktop/Quick-credit/Api/Settings/swagger.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/kodek-sleuth/Desktop/Quick-credit/Api/Settings",
        "sourceFileName": "swagger.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\n/* eslint-disable no-undef */\n\n/* eslint-disable no-unused-vars */\n\n/* eslint-disable comma-dangle */\n\n/* eslint-disable indent */\n// Library that enables us to make the JSON SPEC file\nvar swaggerDoc = require('swagger-jsdoc'); // Creating swag app from express\n\n\nvar express = require('express');\n\nvar swag = express.Router(); // Describing The Introductory Part of The API Documentation\n\nvar swaggerDefinition = {\n  info: {\n    title: 'Quick-Credit',\n    version: '1.0.0',\n    description: 'Quick Credit is an online lending platform that provides short term soft loans to individuals'\n  },\n  host: 'localhost:3000',\n  schemes: ['http'],\n  basePath: '/',\n  securityDefinitions: {\n    bearerAuth: {\n      type: 'apiKey',\n      name: 'authorization',\n      scheme: 'bearer',\n      \"in\": 'header'\n    }\n  }\n}; // Options object is later sent to swagger server to generate UI/UX\n\nvar options = {\n  swaggerDefinition: swaggerDefinition,\n  apis: ['./Api/Auth/*.js', './Api/Loans/*.js', './Api/Profiles/*.js', './Api/Verifications/*.js']\n};\nexports.swaggerSpec = swaggerDoc(options);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInN3YWdnZXIuanMiXSwibmFtZXMiOlsic3dhZ2dlckRvYyIsInJlcXVpcmUiLCJleHByZXNzIiwic3dhZyIsIlJvdXRlciIsInN3YWdnZXJEZWZpbml0aW9uIiwiaW5mbyIsInRpdGxlIiwidmVyc2lvbiIsImRlc2NyaXB0aW9uIiwiaG9zdCIsInNjaGVtZXMiLCJiYXNlUGF0aCIsInNlY3VyaXR5RGVmaW5pdGlvbnMiLCJiZWFyZXJBdXRoIiwidHlwZSIsIm5hbWUiLCJzY2hlbWUiLCJvcHRpb25zIiwiYXBpcyIsImV4cG9ydHMiLCJzd2FnZ2VyU3BlYyJdLCJtYXBwaW5ncyI6Ijs7QUFBQTs7QUFDQTs7QUFDQTs7QUFDQTtBQUNBO0FBQ0EsSUFBTUEsVUFBVSxHQUFHQyxPQUFPLENBQUMsZUFBRCxDQUExQixDLENBRUE7OztBQUNBLElBQU1DLE9BQU8sR0FBR0QsT0FBTyxDQUFDLFNBQUQsQ0FBdkI7O0FBRUEsSUFBTUUsSUFBSSxHQUFHRCxPQUFPLENBQUNFLE1BQVIsRUFBYixDLENBRUE7O0FBQ0EsSUFBTUMsaUJBQWlCLEdBQUc7QUFDdEJDLEVBQUFBLElBQUksRUFBRTtBQUNKQyxJQUFBQSxLQUFLLEVBQUUsY0FESDtBQUVKQyxJQUFBQSxPQUFPLEVBQUUsT0FGTDtBQUdKQyxJQUFBQSxXQUFXLEVBQUU7QUFIVCxHQURnQjtBQU10QkMsRUFBQUEsSUFBSSxFQUFFLGdCQU5nQjtBQU90QkMsRUFBQUEsT0FBTyxFQUFFLENBQUMsTUFBRCxDQVBhO0FBUXRCQyxFQUFBQSxRQUFRLEVBQUUsR0FSWTtBQVN0QkMsRUFBQUEsbUJBQW1CLEVBQUU7QUFDbkJDLElBQUFBLFVBQVUsRUFBRTtBQUNWQyxNQUFBQSxJQUFJLEVBQUUsUUFESTtBQUVWQyxNQUFBQSxJQUFJLEVBQUUsZUFGSTtBQUdWQyxNQUFBQSxNQUFNLEVBQUUsUUFIRTtBQUlWLFlBQUk7QUFKTTtBQURPO0FBVEMsQ0FBMUIsQyxDQW1CQTs7QUFDQSxJQUFNQyxPQUFPLEdBQUc7QUFDWmIsRUFBQUEsaUJBQWlCLEVBQWpCQSxpQkFEWTtBQUVaYyxFQUFBQSxJQUFJLEVBQUUsQ0FBQyxpQkFBRCxFQUFvQixrQkFBcEIsRUFBd0MscUJBQXhDLEVBQStELDBCQUEvRDtBQUZNLENBQWhCO0FBS0FDLE9BQU8sQ0FBQ0MsV0FBUixHQUFzQnJCLFVBQVUsQ0FBQ2tCLE9BQUQsQ0FBaEMiLCJzb3VyY2VSb290IjoiL2hvbWUva29kZWstc2xldXRoL0Rlc2t0b3AvUXVpY2stY3JlZGl0L0FwaS9TZXR0aW5ncyIsInNvdXJjZXNDb250ZW50IjpbIi8qIGVzbGludC1kaXNhYmxlIG5vLXVuZGVmICovXG4vKiBlc2xpbnQtZGlzYWJsZSBuby11bnVzZWQtdmFycyAqL1xuLyogZXNsaW50LWRpc2FibGUgY29tbWEtZGFuZ2xlICovXG4vKiBlc2xpbnQtZGlzYWJsZSBpbmRlbnQgKi9cbi8vIExpYnJhcnkgdGhhdCBlbmFibGVzIHVzIHRvIG1ha2UgdGhlIEpTT04gU1BFQyBmaWxlXG5jb25zdCBzd2FnZ2VyRG9jID0gcmVxdWlyZSgnc3dhZ2dlci1qc2RvYycpO1xuXG4vLyBDcmVhdGluZyBzd2FnIGFwcCBmcm9tIGV4cHJlc3NcbmNvbnN0IGV4cHJlc3MgPSByZXF1aXJlKCdleHByZXNzJyk7XG5cbmNvbnN0IHN3YWcgPSBleHByZXNzLlJvdXRlcigpO1xuXG4vLyBEZXNjcmliaW5nIFRoZSBJbnRyb2R1Y3RvcnkgUGFydCBvZiBUaGUgQVBJIERvY3VtZW50YXRpb25cbmNvbnN0IHN3YWdnZXJEZWZpbml0aW9uID0ge1xuICAgIGluZm86IHtcbiAgICAgIHRpdGxlOiAnUXVpY2stQ3JlZGl0JyxcbiAgICAgIHZlcnNpb246ICcxLjAuMCcsXG4gICAgICBkZXNjcmlwdGlvbjogJ1F1aWNrIENyZWRpdCBpcyBhbiBvbmxpbmUgbGVuZGluZyBwbGF0Zm9ybSB0aGF0IHByb3ZpZGVzIHNob3J0IHRlcm0gc29mdCBsb2FucyB0byBpbmRpdmlkdWFscydcbiAgICB9LFxuICAgIGhvc3Q6ICdsb2NhbGhvc3Q6MzAwMCcsXG4gICAgc2NoZW1lczogWydodHRwJ10sXG4gICAgYmFzZVBhdGg6ICcvJyxcbiAgICBzZWN1cml0eURlZmluaXRpb25zOiB7XG4gICAgICBiZWFyZXJBdXRoOiB7XG4gICAgICAgIHR5cGU6ICdhcGlLZXknLFxuICAgICAgICBuYW1lOiAnYXV0aG9yaXphdGlvbicsXG4gICAgICAgIHNjaGVtZTogJ2JlYXJlcicsXG4gICAgICAgIGluOiAnaGVhZGVyJyxcbiAgICAgIH0sXG4gICAgfSxcbiAgfTtcblxuLy8gT3B0aW9ucyBvYmplY3QgaXMgbGF0ZXIgc2VudCB0byBzd2FnZ2VyIHNlcnZlciB0byBnZW5lcmF0ZSBVSS9VWFxuY29uc3Qgb3B0aW9ucyA9IHtcbiAgICBzd2FnZ2VyRGVmaW5pdGlvbixcbiAgICBhcGlzOiBbJy4vQXBpL0F1dGgvKi5qcycsICcuL0FwaS9Mb2Fucy8qLmpzJywgJy4vQXBpL1Byb2ZpbGVzLyouanMnLCAnLi9BcGkvVmVyaWZpY2F0aW9ucy8qLmpzJ11cbn07XG5cbmV4cG9ydHMuc3dhZ2dlclNwZWMgPSBzd2FnZ2VyRG9jKG9wdGlvbnMpO1xuIl19",
    "map": {
      "version": 3,
      "sources": [
        "swagger.js"
      ],
      "names": [
        "swaggerDoc",
        "require",
        "express",
        "swag",
        "Router",
        "swaggerDefinition",
        "info",
        "title",
        "version",
        "description",
        "host",
        "schemes",
        "basePath",
        "securityDefinitions",
        "bearerAuth",
        "type",
        "name",
        "scheme",
        "options",
        "apis",
        "exports",
        "swaggerSpec"
      ],
      "mappings": ";;AAAA;;AACA;;AACA;;AACA;AACA;AACA,IAAMA,UAAU,GAAGC,OAAO,CAAC,eAAD,CAA1B,C,CAEA;;;AACA,IAAMC,OAAO,GAAGD,OAAO,CAAC,SAAD,CAAvB;;AAEA,IAAME,IAAI,GAAGD,OAAO,CAACE,MAAR,EAAb,C,CAEA;;AACA,IAAMC,iBAAiB,GAAG;AACtBC,EAAAA,IAAI,EAAE;AACJC,IAAAA,KAAK,EAAE,cADH;AAEJC,IAAAA,OAAO,EAAE,OAFL;AAGJC,IAAAA,WAAW,EAAE;AAHT,GADgB;AAMtBC,EAAAA,IAAI,EAAE,gBANgB;AAOtBC,EAAAA,OAAO,EAAE,CAAC,MAAD,CAPa;AAQtBC,EAAAA,QAAQ,EAAE,GARY;AAStBC,EAAAA,mBAAmB,EAAE;AACnBC,IAAAA,UAAU,EAAE;AACVC,MAAAA,IAAI,EAAE,QADI;AAEVC,MAAAA,IAAI,EAAE,eAFI;AAGVC,MAAAA,MAAM,EAAE,QAHE;AAIV,YAAI;AAJM;AADO;AATC,CAA1B,C,CAmBA;;AACA,IAAMC,OAAO,GAAG;AACZb,EAAAA,iBAAiB,EAAjBA,iBADY;AAEZc,EAAAA,IAAI,EAAE,CAAC,iBAAD,EAAoB,kBAApB,EAAwC,qBAAxC,EAA+D,0BAA/D;AAFM,CAAhB;AAKAC,OAAO,CAACC,WAAR,GAAsBrB,UAAU,CAACkB,OAAD,CAAhC",
      "sourceRoot": "/home/kodek-sleuth/Desktop/Quick-credit/Api/Settings",
      "sourcesContent": [
        "/* eslint-disable no-undef */\n/* eslint-disable no-unused-vars */\n/* eslint-disable comma-dangle */\n/* eslint-disable indent */\n// Library that enables us to make the JSON SPEC file\nconst swaggerDoc = require('swagger-jsdoc');\n\n// Creating swag app from express\nconst express = require('express');\n\nconst swag = express.Router();\n\n// Describing The Introductory Part of The API Documentation\nconst swaggerDefinition = {\n    info: {\n      title: 'Quick-Credit',\n      version: '1.0.0',\n      description: 'Quick Credit is an online lending platform that provides short term soft loans to individuals'\n    },\n    host: 'localhost:3000',\n    schemes: ['http'],\n    basePath: '/',\n    securityDefinitions: {\n      bearerAuth: {\n        type: 'apiKey',\n        name: 'authorization',\n        scheme: 'bearer',\n        in: 'header',\n      },\n    },\n  };\n\n// Options object is later sent to swagger server to generate UI/UX\nconst options = {\n    swaggerDefinition,\n    apis: ['./Api/Auth/*.js', './Api/Loans/*.js', './Api/Profiles/*.js', './Api/Verifications/*.js']\n};\n\nexports.swaggerSpec = swaggerDoc(options);\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1557202196474
  }
}